<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
<> User: sgeuser33

Host: compute-srv3.eda.atme.in

Report date: Fri 22 Aug 2025 15:35:12 IST

Report options: -detail -text -out cov_report.txt -all

Coverage database path: /home/sgeuser33/Prajwal/memory_controller_with_ECC/Verification/SIM/cov_work/scope/cov_merged_output

Coverage model files: /home/sgeuser33/Prajwal/memory_controller_with_ECC/Verification/SIM/cov_work/scope/cov_merged_output/icc_7fbba76e_69d889c9.ucm

Coverage data files: /home/sgeuser33/Prajwal/memory_controller_with_ECC/Verification/SIM/cov_work/scope/cov_merged_output/icc_7fbba76e_69d889c9.ucd

CCF files:  /home/sgeuser33/Prajwal/memory_controller_with_ECC/Verification/SIM/cov_files/cov_cmd.cf
    set_covergroup -new_instance_reporting
    set_covergroup -per_instance_default_one
    set_implicit_block_scoring -off
    set_assign_scoring
    set_expr_scoring -all
    select_functional


Coverage database date: Fri 22 Aug 2025 15:34:20 IST

*** There were no refinement files applied ***

 <>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

Coverage Table Legend
---------------------
  EXCL       excluded using refinement rule
  P-EXCL     excluded from parent
  U-EXCL     excluded and unreachable by IEV
  T-EXCL     excluded from type
  S-EXCL     smart excluded using refinement rule
  EXCL(S)    smart indirect excluded
  EMPTY      all children are excluded
  CONST      marked constant during simulation
  IGN        marked ignored during simulation
  UNG        marked ungradeable during simulation
  DES        marked deselected during simulation
  UNR        marked unreachable by IEV
  UNG-Expr   expression marked ungradeable during simulation
  UNG-Toggle toggle marked ungradeable during simulation


Covered+Uncovered+Excluded+UNR Block Detail Report, Instance Based
==================================================================

Instance name: zmc_axi4_top
Type name: zmc_axi4_top
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/Zilla_mem_ctrl_Top.sv
Number of covered blocks: 6 of 6
Number of uncovered blocks: 0 of 6
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     92    code block           91     begin                          
1      2     95    true part of         94     begin                          
1      3     98    false part of        94     else if(zmc_top_sw_rst)        
1      4     99    true part of         98     begin                          
1      5     103   false part of        98     begin                          
1      6     108   code block           108    assign rd_addr_w1 = rd_addr_w[13:0]             ; 

Instance name: zmc_axi4_top.axi4_slave_inst
Type name: axi4_slave
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/AXI4_slave.sv
Number of covered blocks: 200 of 203
Number of uncovered blocks: 3 of 203
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     139   code block           139    assign wr_addr_w = (awvalid) ? awaddr : wr_addr_w1 ; 
1      2     140   code block           140    assign arlen_r   = (arvalid) ? arlen  : arlen_reg  ; 
1      3     141   code block           141    assign awlen_r   = (awvalid) ? awlen  : awlen_reg  ; 
1      4     144   code block           143    begin                          
1      5     147   true part of         146    begin                          
1      6     153   false part of        146    else if(axi4_slave_sw_rst)     
1      7     154   true part of         153    begin                          
1      8     161   false part of        153    begin                          
1      9     176   code block           175    begin                          
1      10    179   true part of         178    begin                          
1      11    182   false part of        178    else if(axi4_slave_sw_rst)     
1      12    183   true part of         182    begin                          
1      13    187   false part of        182    begin                          
1      14    196   code block           195    begin                          
1      15    201   a case item of       198    begin                          
1      16    203   true part of         202    begin                          
1      17    207   false part of        202    begin                          
1      18    213   a case item of       198    begin                          
1      19    215   true part of         214    begin                          
1      20    219   false part of        214    begin                          
1      21    225   a case item of       198    begin                          
1      22    227   true part of         226    begin                          
1      23    229   true part of         228    begin                          
0      24    233   false part of        228    begin                          
1      25    238   false part of        226    begin                          
1      26    244   a case item of       198    begin                          
1      27    246   true part of         245    begin                          
1      28    248   true part of         247    begin                          
0      29    252   false part of        247    begin                          
1      30    257   false part of        245    begin                          
1      31    264   a case item of       198    default : wr_next_state = IDLE_W                                              ; 
1      32    273   code block           272    begin                          
1      33    286   a case item of       283    begin                          
1      34    292   a case item of       283    begin                          
1      35    294   true part of         293    begin                          
1      36    298   false part of        293    begin                          
1      37    302   code block           302    if(wvalid)                     
1      38    303   true part of         302    begin                          
1      39    309   code block           309    slave_wr_data    =     wdata                                       ; 
1      40    313   a case item of       283    begin                          
1      41    321   a case item of       283    begin                          
1      42    340   code block           339    begin                          
1      43    343   true part of         342    begin                          
1      44    346   false part of        342    else if(axi4_slave_sw_rst)     
1      45    347   true part of         346    begin                          
1      46    351   false part of        346    begin                          
1      47    360   code block           359    begin                          
1      48    363   a case item of       362    WR_IDLE         : begin        
1      49    366   true part of         365    begin                          
1      50    369   false part of        365    else if(awvalid && awburst == 2'd1) 
1      51    370   true part of         369    begin                          
1      52    373   false part of        369    else if(awvalid && awburst == 2'd2) 
1      53    374   true part of         373    begin                          
1      54    378   false part of        373    begin                          
1      55    384   a case item of       362    WR_FIX_BURST    : begin        
1      56    387   true part of         386    begin                          
1      57    391   false part of        386    begin                          
1      58    397   a case item of       362    WR_INCR_BURST   : begin        
1      59    400   true part of         399    begin                          
1      60    404   false part of        399    begin                          
1      61    410   a case item of       362    WR_WRAP_BURST   : begin        
1      62    413   true part of         412    begin                          
1      63    417   false part of        412    begin                          
1      64    429   code block           428    begin                          
1      65    432   true part of         431    begin                          
1      66    435   false part of        431    else if(axi4_slave_sw_rst)     
1      67    436   true part of         435    begin                          
1      68    440   false part of        435    begin                          
1      69    443   a case item of       442    WR_IDLE         : begin        
1      70    447   a case item of       442    WR_FIX_BURST    : begin        
1      71    451   a case item of       442    WR_INCR_BURST   : begin        
1      72    454   true part of         453    begin                          
1      73    457   false part of        453    else if(wr_down_counter != 4'd0) 
1      74    458   true part of         457    begin                          
1      75    462   false part of        457    begin                          
1      76    468   a case item of       442    WR_WRAP_BURST   : begin        
1      77    471   true part of         470    begin                          
1      78    474   false part of        470    else if((wr_addr_r + 32'd4) == addr_n_wr) 
1      79    475   true part of         474    begin                          
1      80    478   false part of        474    else if(wr_down_counter != 4'd0) 
1      81    479   true part of         478    begin                          
1      82    483   false part of        478    begin                          
1      83    495   code block           494    begin                          
1      84    498   true part of         497    begin                          
1      85    502   false part of        497    else if(axi4_slave_sw_rst)     
1      86    503   true part of         502    begin                          
1      87    507   false part of        502    else if(awvalid && (present_state_wr == 2'd0)) 
1      88    508   true part of         507    begin                          
1      89    512   false part of        507    else if((present_state_wr == 2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3)) 
1      90    513   true part of         512    begin                          
1      91    518   false part of        512    begin                          
1      92    526   code block           526    assign add_wr = (NO_OF_BYTES * (awlen+1'b1))          ; 
1      93    528   code block           528    assign wrap_bndry = (awvalid && (awburst == 2'd2))  ? ((wr_addr_w/add_wr)*add_wr) : wrap_bndry_r ; 
1      94    531   code block           530    begin                          
1      95    534   true part of         533    begin                          
1      96    537   false part of        533    else if(axi4_slave_sw_rst)     
1      97    538   true part of         537    begin                          
1      98    542   false part of        537    begin                          
1      99    551   code block           551    assign addr_n_wr = (awvalid && awburst == 2'd2) ? (wrap_bndry + (NO_OF_BYTES*(awlen+1'b1))) : addr_n_r  ; 
1      100   554   code block           553    begin                          
1      101   557   true part of         556    begin                          
1      102   560   false part of        556    else if(axi4_slave_sw_rst)     
1      103   561   true part of         560    begin                          
1      104   565   false part of        560    begin                          
1      105   573   code block           573    assign rd_addr_w = (arvalid) ? araddr : rd_addr_w1 ; 
1      106   576   code block           575    begin                          
1      107   579   true part of         578    begin                          
1      108   582   false part of        578    else if(axi4_slave_sw_rst)     
1      109   583   true part of         582    begin                          
1      110   587   false part of        582    begin                          
1      111   593   code block           593    assign rd_addr_valid = ((present_state_rd==2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3)) ; 
1      112   594   code block           594    assign wr_addr_valid = ((present_state_wr==2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3)) ; 
1      113   602   code block           601    begin                          
1      114   605   true part of         604    begin                          
1      115   608   false part of        604    else if(axi4_slave_sw_rst)     
1      116   609   true part of         608    begin                          
1      117   613   false part of        608    begin                          
1      118   622   code block           621    begin                          
1      119   627   a case item of       624    begin                          
1      120   629   true part of         628    begin                          
1      121   633   false part of        628    begin                          
1      122   638   a case item of       624    begin                          
1      123   640   true part of         639    begin                          
1      124   644   false part of        639    begin                          
1      125   650   a case item of       624    begin                          
1      126   652   true part of         651    begin                          
1      127   654   true part of         653    begin                          
1      128   656   true part of         655    begin                          
0      129   660   false part of        655    begin                          
1      130   665   false part of        653    begin                          
1      131   670   false part of        651    begin                          
1      132   676   a case item of       624    begin                          
1      133   687   code block           686    begin                          
1      134   699   a case item of       696    begin                          
1      135   708   a case item of       696    begin                          
1      136   715   a case item of       696    begin                          
1      137   717   true part of         716    begin                          
1      138   721   false part of        716    begin                          
1      139   725   code block           725    slave_rd_addr    =    rd_addr_r                                    ; 
1      140   734   a case item of       696    begin                          
1      141   753   code block           752    begin                          
1      142   756   true part of         755    begin                          
1      143   759   false part of        755    else if(axi4_slave_sw_rst)     
1      144   760   true part of         759    begin                          
1      145   764   false part of        759    begin                          
1      146   773   code block           772    begin                          
1      147   776   a case item of       775    RD_IDLE         : begin        
1      148   779   true part of         778    begin                          
1      149   782   false part of        778    else if(arvalid && arburst == 2'd1) 
1      150   783   true part of         782    begin                          
1      151   786   false part of        782    else if(arvalid && arburst == 2'd2) 
1      152   787   true part of         786    begin                          
1      153   791   false part of        786    begin                          
1      154   797   a case item of       775    RD_FIX_BURST    : begin        
1      155   800   true part of         799    begin                          
1      156   804   false part of        799    begin                          
1      157   810   a case item of       775    RD_INCR_BURST   : begin        
1      158   813   true part of         812    begin                          
1      159   817   false part of        812    begin                          
1      160   823   a case item of       775    RD_WRAP_BURST   : begin        
1      161   826   true part of         825    begin                          
1      162   830   false part of        825    begin                          
1      163   842   code block           841    begin                          
1      164   845   true part of         844    begin                          
1      165   848   false part of        844    else if(axi4_slave_sw_rst)     
1      166   849   true part of         848    begin                          
1      167   853   false part of        848    begin                          
1      168   856   a case item of       855    RD_IDLE         : begin        
1      169   860   a case item of       855    RD_FIX_BURST    : begin        
1      170   864   a case item of       855    RD_INCR_BURST   : begin        
1      171   867   true part of         866    begin                          
1      172   870   false part of        866    else if(rd_down_counter != 4'd0) 
1      173   871   true part of         870    begin                          
1      174   875   false part of        870    begin                          
1      175   881   a case item of       855    RD_WRAP_BURST   : begin        
1      176   883   true part of         882    begin                          
1      177   886   false part of        882    else if((rd_addr_r + 32'd4) == addr_n_rd) 
1      178   887   true part of         886    begin                          
1      179   890   false part of        886    else if(rd_down_counter != 4'd0) 
1      180   891   true part of         890    begin                          
1      181   895   false part of        890    begin                          
1      182   907   code block           906    begin                          
1      183   910   true part of         909    begin                          
1      184   914   false part of        909    else if(axi4_slave_sw_rst)     
1      185   915   true part of         914    begin                          
1      186   919   false part of        914    else if(arvalid && (present_state_rd == 2'd0)) 
1      187   920   true part of         919    begin                          
1      188   924   false part of        919    else if((present_state_rd == 2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3)) 
1      189   925   true part of         924    begin                          
1      190   930   false part of        924    begin                          
1      191   939   code block           939    assign add_rd = (NO_OF_BYTES * (arlen+1'b1))          ; 
1      192   941   code block           941    assign wrap_bndry_rd = (arvalid && (arburst == 2'd2))  ? ((rd_addr_w/add_rd)*add_rd) : wrap_bndry_w ; 
1      193   944   code block           943    begin                          
1      194   947   true part of         946    begin                          
1      195   950   false part of        946    else if(axi4_slave_sw_rst)     
1      196   951   true part of         950    begin                          
1      197   955   false part of        950    begin                          
1      198   963   code block           963    assign addr_n_rd = (arvalid && arburst == 2'd2) ? (wrap_bndry_rd + (NO_OF_BYTES*(arlen+1'b1))) : addr_n_w  ; 
1      199   966   code block           965    begin                          
1      200   969   true part of         968    begin                          
1      201   972   false part of        968    else if(axi4_slave_sw_rst)     
1      202   973   true part of         972    begin                          
1      203   977   false part of        972    begin                          

Instance name: zmc_axi4_top.mem_ctrl_inst
Type name: mem_ctrl
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/Memory_Controller_ECC.sv
Number of covered blocks: 101 of 105
Number of uncovered blocks: 4 of 105
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     108   code block           108    assign wr_addr_valid = ((MEM_ctrl_wr_addr_bus >= 14'd0) && (MEM_ctrl_wr_addr_bus <= 14'd16383))   ; 
1      2     111   code block           110    begin                          
1      3     114   true part of         113    begin                          
1      4     117   false part of        113    else if(MEM_ctrl_sw_rst)       
1      5     118   true part of         117    begin                          
1      6     121   false part of        117    else if(!wr_addr_valid)        
0      7     122   true part of         121    begin                          
1      8     126   false part of        121    begin                          
1      9     132   code block           132    assign MEM_ctrl_wr_en_w       = wr_addr_valid ? MEM_ctrl_wr_en       : 1'b0                 ; 
1      10    133   code block           133    assign MEM_ctrl_wr_addr_bus_w = wr_addr_valid ? MEM_ctrl_wr_addr_bus : {ADDR_WIDTH{1'b0}}   ; 
1      11    135   code block           135    assign wr_resp = MEM_ctrl_wr_en ? wr_resp_r : wr_resp_reg       ; 
1      12    138   code block           137    begin                          
1      13    141   true part of         140    begin                          
1      14    144   false part of        140    else if(MEM_ctrl_sw_rst)       
1      15    145   true part of         144    begin                          
1      16    149   false part of        144    begin                          
1      17    158   code block           158    assign rd_addr_valid = ((MEM_ctrl_rd_addr_bus >= 14'd0) && (MEM_ctrl_rd_addr_bus < 14'd16383))   ; 
1      18    161   code block           160    begin                          
1      19    164   true part of         163    begin                          
1      20    167   false part of        163    else if(MEM_ctrl_sw_rst)       
1      21    168   true part of         167    begin                          
1      22    171   false part of        167    else if(!rd_addr_valid)        
0      23    172   true part of         171    begin                          
1      24    176   false part of        171    begin                          
1      25    182   code block           182    assign MEM_ctrl_rd_en_w       = rd_addr_valid ? MEM_ctrl_rd_en       : 1'b0                 ; 
1      26    183   code block           183    assign MEM_ctrl_rd_addr_bus_w = rd_addr_valid ? MEM_ctrl_rd_addr_bus : {ADDR_WIDTH{1'b0}}   ; 
1      27    185   code block           185    assign rd_resp = MEM_ctrl_rd_en ? rd_resp_r : rd_resp_reg       ; 
1      28    188   code block           187    begin                          
1      29    191   true part of         190    begin                          
1      30    194   false part of        190    else if(MEM_ctrl_sw_rst)       
1      31    195   true part of         194    begin                          
1      32    199   false part of        194    begin                          
1      33    207   code block           206    begin                          
1      34    210   true part of         209    begin                          
1      35    213   false part of        209    else if(MEM_ctrl_sw_rst)       
1      36    214   true part of         213    begin                          
1      37    217   false part of        213    else if(((GLOBAL_MEM_INIT==1) || (GLOBAL_MEM_INIT==0))  && (MEM_ctrl_mem_init) && (counter<DEPTH)) 
1      38    218   true part of         217    begin                          
1      39    222   false part of        217    begin                          
1      40    231   code block           230    begin                          
1      41    234   true part of         233    begin                          
1      42    237   false part of        233    else if(MEM_ctrl_sw_rst)       
1      43    238   true part of         237    begin                          
1      44    241   false part of        237    else if(counter == 14'd16383)  
1      45    242   true part of         241    begin                          
1      46    246   false part of        241    begin                          
1      47    255   code block           254    begin                          
1      48    259   true part of         258    begin                          
1      49    261   true part of         260    begin                          
1      50    264   false part of        260    else if(BRAM_wr_en || BRAM_rd_en) 
1      51    265   true part of         264    begin                          
1      52    269   false part of        264    begin                          
1      53    280   code block           279    begin                          
1      54    283   true part of         282    begin                          
1      55    286   false part of        282    else if(BRAM_wr_en)            
1      56    287   true part of         286    begin                          
1      57    291   false part of        286    begin                          
1      58    300   code block           299    begin                          
1      59    303   true part of         302    begin                          
1      60    307   false part of        302    begin                          
1      61    317   code block           316    begin                          
1      62    320   true part of         319    begin                          
1      63    324   false part of        319    begin                          
1      64    334   code block           333    begin                          
0      65    337   true part of         336    begin                          
1      66    340   false part of        336    else if((GLOBAL_MEM_INIT==1) && (MEM_ctrl_mem_init) && (counter<DEPTH)) 
1      67    341   true part of         340    begin                          
1      68    345   false part of        340    begin                          
1      69    355   code block           354    begin                          
1      70    358   true part of         357    begin                          
1      71    361   false part of        357    else if(i_psel_w)              
1      72    362   true part of         361    begin                          
1      73    366   false part of        361    begin                          
1      74    375   code block           374    begin                          
1      75    383   code block           382    begin                          
1      76    386   true part of         385    begin                          
1      77    390   false part of        385    begin                          
1      78    399   code block           399    assign MEM_ctrl_data_out = MEM_ctrl_data_out_w2         ; 
1      79    404   code block           403    begin                          
1      80    407   true part of         406    begin                          
1      81    410   false part of        406    else if(i_psel_w)              
1      82    411   true part of         410    begin                          
1      83    415   false part of        410    begin                          
1      84    425   code block           424    begin                          
0      85    428   true part of         427    begin                          
1      86    431   false part of        427    else if(i_pwrite && (i_paddr!=10'd0)) 
1      87    432   true part of         431    begin                          
1      88    435   false part of        431    else if(i_pwrite_w)            
1      89    436   true part of         435    begin                          
1      90    440   false part of        435    begin                          
1      91    450   code block           449    begin                          
1      92    453   true part of         452    begin                          
1      93    456   false part of        452    else if(i_pwrite_w)            
1      94    457   true part of         456    begin                          
1      95    461   false part of        456    begin                          
1      96    471   code block           470    begin                          
1      97    474   true part of         473    begin                          
1      98    477   false part of        473    else if(i_pwrite_w)            
1      99    478   true part of         477    begin                          
1      100   482   false part of        477    begin                          
1      101   492   code block           491    begin                          
1      102   495   true part of         494    begin                          
1      103   498   false part of        494    else if(i_psel_w)              
1      104   499   true part of         498    begin                          
1      105   503   false part of        498    begin                          

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_encoding_inst
Type name: ECC_encoding
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/ECC_encoding_top.sv
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     33    code block           33     assign ecc_en_w = ECC_en[0]                     ; 

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_encoding_inst.parity_calculator_inst
Type name: parity_calculator
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/parity_calculator_wr.sv
Number of covered blocks: 15 of 22
Number of uncovered blocks: 7 of 22
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     26    code block           25     begin                          
0      2     30    true part of         29     begin                          
1      3     34    false part of        29     else if(wr_strobe == 4'b0010)    // BYTE 
0      4     35    true part of         34     begin                          
1      5     39    false part of        34     else if(wr_strobe == 4'b0100)    // BYTE 
0      6     40    true part of         39     begin                          
1      7     44    false part of        39     else if(wr_strobe == 4'b1000)    // BYTE 
0      8     45    true part of         44     begin                          
1      9     50    false part of        44     else if(wr_strobe == 4'b0011)   // HALF WORD 
0      10    51    true part of         50     begin                          
1      11    55    false part of        50     else if (wr_strobe == 4'b0110)  // HALF WORD 
0      12    56    true part of         55     begin                          
1      13    60    false part of        55     else if (wr_strobe == 4'b1100) // HALF WORD 
0      14    61    true part of         60     begin                          
1      15    65    false part of        60     else if(wr_strobe == 4'b1111)   // FULL WORD 
1      16    66    true part of         65     begin                          
1      17    73    false part of        65     begin                          
1      18    83    code block           82     begin                          
1      19    90    true part of         89     begin                          
1      20    93    true part of         92     begin                          
1      21    170   false part of        92     begin                          
1      22    179   false part of        89     begin                          

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_encoding_inst.data_enc_inst
Type name: data_enc
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/data_encoding.sv
Number of covered blocks: 6 of 6
Number of uncovered blocks: 0 of 6
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           27     assign wr_addr_w  = {wr_addr_i[13:2],{2'd0}}                           ; 
1      2     28    code block           28     assign wr_addr_w1 = wr_addr_w >> 2'd2                                  ; 
1      3     32    code block           31     begin                          
1      4     37    true part of         36     begin                          
1      5     61    false part of        36     begin                          
1      6     68    code block           68     assign encoded_data={parity_bits_in[6:1],parity_bit,data_in[31:0]}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst
Type name: ECC_decoding
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/ECC_decoding_top.sv
Number of covered blocks: 4 of 4
Number of uncovered blocks: 0 of 4
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     51    code block           51     assign rd_en_o    =  rd_en_i                                          ; 
1      2     53    code block           53     assign rd_addr_w  =  {rd_addr_i[13:2],{2'd0}}                         ; 
1      3     54    code block           54     assign rd_addr_w1 =  rd_addr_w >> 2'd2                                ; 
1      4     55    code block           55     assign rd_addr_o  =  rd_addr_w1                                       ; 

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst.data_decoding_inst
Type name: data_decoding
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/data_decoding.sv
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     17    code block           16     begin                          

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst.parity_calc_rd_inst
Type name: parity_calc_rd
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/parity_calculator_rd.sv
Number of covered blocks: 14 of 14
Number of uncovered blocks: 0 of 14
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           26     begin                          
1      2     29    true part of         28     begin                          
1      3     35    false part of        28     else if(parity_calc_sw_rst)    
1      4     36    true part of         35     begin                          
1      5     43    false part of        35     begin                          
1      6     53    code block           52     begin                          
1      7     56    true part of         55     begin                          
1      8     60    false part of        55     else if(parity_calc_sw_rst)    
1      9     61    true part of         60     begin                          
1      10    65    false part of        60     else if(rd_en)                 
1      11    66    true part of         65     begin                          
1      12    69    true part of         68     begin                          
1      13    171   false part of        68     begin                          
1      14    178   false part of        65     begin                          

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst.err_det_corr_inst
Type name: err_det_corr
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/err_det_corr.sv
Number of covered blocks: 15 of 16
Number of uncovered blocks: 1 of 16
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     43    code block           42     begin                          
1      2     46    true part of         45     begin                          
1      3     49    true part of         48     begin                          
1      4     66    false part of        48     else if((parity_rd_in[0]==1'b1) && (parity_rd_in[6:1]!=6'd0))           // DETECTING SINGLE BIT ERROR 
1      5     67    true part of         66     begin                          
1      6     84    false part of        66     else if((parity_rd_in[0]==1'b0) && (parity_rd_in[6:1]!=6'd0))           // DETECTING DOUBLE BIT ERROR 
1      7     85    true part of         84     begin                          
1      8     97    true part of         96     begin                                                               // WHEN DOUBLE BIT ERROR DETECTS 
1      9     101   false part of        96     begin                          
1      10    105   code block           105    error_type   =  32'd2                                          ; 
0      11    111   false part of        84     begin                          
1      12    130   false part of        45     begin                          
1      13    150   code block           150    assign mask = 1'b1 << bit_position                                 ; 
1      14    153   code block           153    assign rd_data_r2 = (bit_swap_en && ECC_en[0]==1'b1) ? (rd_data_r ^ mask) : rd_data_r1   ; 
1      15    154   code block           154    assign rd_data_r3 = {rd_data_r2[38:33] , rd_data_r2[31:17] , rd_data_r2[15:9] , rd_data_r2[7:5] , rd_data_r2[3]} ; 
1      16    157   code block           157    assign rd_data_o = rd_data_r3                                                                                   ; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter
Type name: rggen_apb_adapter
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_apb_adapter.v
Number of covered blocks: 13 of 13
Number of uncovered blocks: 0 of 13
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     46    code block           46     assign  w_bus_valid       = i_psel && (!r_pready); 
1      2     47    code block           47     assign  w_bus_access      = {1'b1, i_pwrite}; 
1      3     48    code block           48     assign  w_bus_address     = i_paddr; 
1      4     49    code block           49     assign  w_bus_write_data  = i_pwdata; 
1      5     50    code block           50     assign  w_bus_strobe      = i_pstrb; 
1      6     52    code block           52     assign  o_pready  = r_pready;  
1      7     53    code block           53     assign  o_prdata  = r_prdata;  
1      8     54    code block           54     assign  o_pslverr = r_pslverr; 
1      9     56    code block           56     always @(posedge i_clk or negedge i_rst_n) begin 
1      10    57    true part of         57     if (!i_rst_n) begin            
1      11    60    false part of        57     else begin                     
1      12    65    code block           65     always @(posedge i_clk) begin  
1      13    66    true part of         66     if (w_bus_valid && w_bus_ready) begin 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common
Type name: rggen_adapter_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_adapter_common.v
Number of covered blocks: 16 of 19
Number of uncovered blocks: 3 of 19
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     44    code block           44     always @(posedge i_clk or negedge i_rst_n) begin 
1      2     45    true part of         45     if (!i_rst_n) begin            
1      3     48    false part of        45     else if (w_bus_ready) begin    
1      4     48    true part of         48     else if (w_bus_ready) begin    
0      5     51    false part of        48     else if (i_bus_valid) begin    
0      6     51    true part of         51     else if (i_bus_valid) begin    
1      7     57    code block           57     assign  w_inside_range  = (PRE_DECODE != 0) ? pre_decode(i_bus_address) : 1'b1; 
0      8     64    code block           59     begin                          
1      9     72    code block           72     assign  o_register_valid      = i_bus_valid && w_inside_range && (!r_busy); 
1      10    73    code block           73     assign  o_register_access     = i_bus_access; 
1      11    74    code block           74     assign  o_register_address    = i_bus_address[LOCAL_ADDRESS_WIDTH-1:0]; 
1      12    75    code block           75     assign  o_register_write_data = i_bus_write_data; 
1      13    76    code block           76     assign  o_register_strobe     = i_bus_strobe; 
1      14    79    code block           79     assign  o_bus_ready     = w_bus_ready; 
1      15    80    code block           80     assign  o_bus_status    = (w_register_inactive) ? DEFAULT_STATUS    : w_register_status; 
1      16    81    code block           81     assign  o_bus_read_data = (w_register_inactive) ? DEFAULT_READ_DATA : w_register_read_data; 
1      17    83    code block           83     assign  w_register_inactive = (i_register_active == {REGISTERS{1'b0}}) || (!w_inside_range); 
1      18    84    code block           84     assign  w_register_ready    = (i_register_ready  != {REGISTERS{1'b0}}); 
1      19    85    code block           85     assign  w_bus_ready         = w_register_ready || w_register_inactive; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[0]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[1]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[2]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[3]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[4]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[5]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[6]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[7]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 0 of 18
Number of uncovered blocks: 18 of 18
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
0      1     15    code block           8      begin                          
0      2     18    code block           18     while (current_n > 0) begin    
0      3     20    true part of         20     if ((current_n > 4) && (half_n <= 4)) begin 
0      4     23    false part of        20     else if (current_n >= 4) begin 
0      5     23    true part of         23     else if (current_n >= 4) begin 
0      6     26    false part of        23     else begin                     
0      7     30    code block           30     current_n   = current_n - list[16*list_index+:16]; 
0      8     34    code block           34     while (list_index < N) begin   
0      9     34    code block           34     while (list_index < N) begin   
0      10    39    code block           39     get_sub_n_list  = list;        
0      11    48    code block           43     begin                          
0      12    49    code block           49     for (i = 0;i < N;i = i + 1) begin 
0      13    50    true part of         50     if (i == 0) begin              
0      14    53    false part of        50     else begin                     
0      15    58    code block           58     get_offset_list = list;        
0      16    67    code block           62     begin                          
0      17    69    code block           69     for (i = 0;i < N;i = i + 1) begin 
0      18    73    code block           73     get_next_n  = next_n;          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_or_loop[0].g
Type name: rggen_or_reducer.g_or_loop.g_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     87    code block           87     assign  next_data[WIDTH*i+:WIDTH] = (i_data[WIDTH*(OFFSET_LIST[16*i+:16]+0)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+1)+:WIDTH]) 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_or_loop[1].g
Type name: rggen_or_reducer.g_or_loop.g_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     87    code block           87     assign  next_data[WIDTH*i+:WIDTH] = (i_data[WIDTH*(OFFSET_LIST[16*i+:16]+0)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+1)+:WIDTH]) 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_reduce.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 0 of 18
Number of uncovered blocks: 18 of 18
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
0      1     15    code block           8      begin                          
0      2     18    code block           18     while (current_n > 0) begin    
0      3     20    true part of         20     if ((current_n > 4) && (half_n <= 4)) begin 
0      4     23    false part of        20     else if (current_n >= 4) begin 
0      5     23    true part of         23     else if (current_n >= 4) begin 
0      6     26    false part of        23     else begin                     
0      7     30    code block           30     current_n   = current_n - list[16*list_index+:16]; 
0      8     34    code block           34     while (list_index < N) begin   
0      9     34    code block           34     while (list_index < N) begin   
0      10    39    code block           39     get_sub_n_list  = list;        
0      11    48    code block           43     begin                          
0      12    49    code block           49     for (i = 0;i < N;i = i + 1) begin 
0      13    50    true part of         50     if (i == 0) begin              
0      14    53    false part of        50     else begin                     
0      15    58    code block           58     get_offset_list = list;        
0      16    67    code block           62     begin                          
0      17    69    code block           69     for (i = 0;i < N;i = i + 1) begin 
0      18    73    code block           73     get_next_n  = next_n;          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_reduce.u_reducer.g_or_loop[0].g
Type name: rggen_or_reducer.g_or_loop.g_T_F_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     95    code block           95     assign  next_data[WIDTH*i+:WIDTH] = i_data[WIDTH*(OFFSET_LIST[16*i+:16]+0)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+1)+:WIDTH]; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_reduce.u_reducer.g_reduce
Type name: rggen_or_reducer.g_reduce_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     112   code block           112    assign  o_result  = next_data[0+:WIDTH]; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[0]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[1]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[2]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[3]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[4]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[5]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[6]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[7]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     15    code block           15     assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 0 of 18
Number of uncovered blocks: 18 of 18
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
0      1     15    code block           8      begin                          
0      2     18    code block           18     while (current_n > 0) begin    
0      3     20    true part of         20     if ((current_n > 4) && (half_n <= 4)) begin 
0      4     23    false part of        20     else if (current_n >= 4) begin 
0      5     23    true part of         23     else if (current_n >= 4) begin 
0      6     26    false part of        23     else begin                     
0      7     30    code block           30     current_n   = current_n - list[16*list_index+:16]; 
0      8     34    code block           34     while (list_index < N) begin   
0      9     34    code block           34     while (list_index < N) begin   
0      10    39    code block           39     get_sub_n_list  = list;        
0      11    48    code block           43     begin                          
0      12    49    code block           49     for (i = 0;i < N;i = i + 1) begin 
0      13    50    true part of         50     if (i == 0) begin              
0      14    53    false part of        50     else begin                     
0      15    58    code block           58     get_offset_list = list;        
0      16    67    code block           62     begin                          
0      17    69    code block           69     for (i = 0;i < N;i = i + 1) begin 
0      18    73    code block           73     get_next_n  = next_n;          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_or_loop[0].g
Type name: rggen_or_reducer.g_or_loop.g_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     87    code block           87     assign  next_data[WIDTH*i+:WIDTH] = (i_data[WIDTH*(OFFSET_LIST[16*i+:16]+0)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+1)+:WIDTH]) 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_or_loop[1].g
Type name: rggen_or_reducer.g_or_loop.g_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     87    code block           87     assign  next_data[WIDTH*i+:WIDTH] = (i_data[WIDTH*(OFFSET_LIST[16*i+:16]+0)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+1)+:WIDTH]) 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_reduce.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 0 of 18
Number of uncovered blocks: 18 of 18
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
0      1     15    code block           8      begin                          
0      2     18    code block           18     while (current_n > 0) begin    
0      3     20    true part of         20     if ((current_n > 4) && (half_n <= 4)) begin 
0      4     23    false part of        20     else if (current_n >= 4) begin 
0      5     23    true part of         23     else if (current_n >= 4) begin 
0      6     26    false part of        23     else begin                     
0      7     30    code block           30     current_n   = current_n - list[16*list_index+:16]; 
0      8     34    code block           34     while (list_index < N) begin   
0      9     34    code block           34     while (list_index < N) begin   
0      10    39    code block           39     get_sub_n_list  = list;        
0      11    48    code block           43     begin                          
0      12    49    code block           49     for (i = 0;i < N;i = i + 1) begin 
0      13    50    true part of         50     if (i == 0) begin              
0      14    53    false part of        50     else begin                     
0      15    58    code block           58     get_offset_list = list;        
0      16    67    code block           62     begin                          
0      17    69    code block           69     for (i = 0;i < N;i = i + 1) begin 
0      18    73    code block           73     get_next_n  = next_n;          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_reduce.u_reducer.g_or_loop[0].g
Type name: rggen_or_reducer.g_or_loop.g_T_F_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     95    code block           95     assign  next_data[WIDTH*i+:WIDTH] = i_data[WIDTH*(OFFSET_LIST[16*i+:16]+0)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+1)+:WIDTH]; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_reduce.u_reducer.g_reduce
Type name: rggen_or_reducer.g_reduce_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     112   code block           112    assign  o_result  = next_data[0+:WIDTH]; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered blocks: 25 of 27
Number of uncovered blocks: 2 of 27
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     40    code block           40     assign  w_active  = |{1'b0, w_match}; 
0      2     59    code block           57     begin                          
0      3     68    code block           66     begin                          
1      4     81    code block           81     assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid; 
1      5     82    code block           82     assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0]; 
1      6     83    code block           83     assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0]; 
1      7     84    code block           84     assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0]; 
1      8     86    code block           86     assign  w_frontdoor_valid = i_register_valid && w_active; 
1      9     87    code block           87     assign  w_read_mask[0]    = get_mask(1'b0, READABLE, w_match, i_register_access, {BUS_BYTE_WIDTH{1'b1}}); 
1      10    88    code block           88     assign  w_write_mask[0]   = get_mask(1'b1, WRITABLE, w_match, i_register_access, i_register_strobe     ); 
1      11    89    code block           89     assign  w_write_data[0]   = {WORDS{i_register_write_data}}; 
1      12    100   code block           91     begin                          
1      13    101   code block           101    for (i = 0;i < WORDS;i = i + 1) begin 
1      14    102   code block           102    for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin 
1      15    103   true part of         103    if (accessible && (write_access == bus_access[0]) && match[i]) begin 
1      16    106   false part of        103    else begin                     
1      17    112   code block           112    get_mask  = mask;              
1      18    119   code block           119    assign  o_register_active     = w_active; 
1      19    120   code block           120    assign  o_register_ready      = (!w_backdoor_valid) && w_active; 
1      20    121   code block           121    assign  o_register_status     = 2'b00; 
1      21    122   code block           122    assign  o_register_read_data  = w_read_data; 
1      22    123   code block           123    assign  o_register_value      = i_bit_field_value; 
1      23    152   code block           152    assign  w_backdoor_valid  = 1'b0; 
1      24    153   code block           153    assign  w_pending_valid   = 1'b0; 
1      25    154   code block           154    assign  w_read_mask[1]    = {DATA_WIDTH{1'b0}}; 
1      26    155   code block           155    assign  w_write_mask[1]   = {DATA_WIDTH{1'b0}}; 
1      27    156   code block           156    assign  w_write_data[1]   = {DATA_WIDTH{1'b0}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered blocks: 7 of 14
Number of uncovered blocks: 7 of 14
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     20    code block           20     assign  w_address_match = match_address(i_address); 
1      2     21    code block           21     assign  w_access_match  = match_access(i_access); 
1      3     22    code block           22     assign  o_match         = w_address_match && w_access_match && i_additional_match; 
0      4     29    code block           24     begin                          
0      5     32    code block           32     while (value > 0) begin        
0      6     36    code block           36     clog2 = result;                
1      7     42    code block           40     begin                          
1      8     43    true part of         43     if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin 
0      9     46    false part of        43     else begin                     
1      10    56    code block           54     begin                          
1      11    57    true part of         57     if (READABLE && WRITABLE) begin 
0      12    60    false part of        57     else if (READABLE) begin       
0      13    60    true part of         60     else if (READABLE) begin       
0      14    63    false part of        60     else begin                     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.u_register.u_register_common.u_read_data_mux.g
Type name: rggen_mux.g_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           27     assign  o_data  = i_data;      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.g_ECC_STATUS.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 27 of 43
Number of uncovered blocks: 16 of 43
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     51    code block           42     begin                          
1      2     70    code block           64     begin                          
1      3     89    code block           78     begin                          
0      4     90    true part of         90     if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin 
1      5     101   false part of        90     else begin                     
1      6     113   code block           113    get_next_value  = value;       
1      7     125   code block           117    begin                          
0      8     127   a case item of       126    `RGGEN_READ_CLEAR:  value[0]  = {WIDTH{1'b0}}; 
0      9     128   a case item of       126    `RGGEN_READ_SET:    value[0]  = {WIDTH{1'b1}}; 
1      10    129   a case item of       126    default:            value[0]  = current_value; 
1      11    132   code block           132    masked_data[0]  = write_mask & (~write_data); 
1      12    135   a case item of       134    `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1]; 
0      13    136   a case item of       134    `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]); 
0      14    137   a case item of       134    `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]); 
0      15    138   a case item of       134    `RGGEN_WRITE_CLEAR:     value[1]  = {WIDTH{1'b0}}; 
0      16    139   a case item of       134    `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0]; 
0      17    140   a case item of       134    `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1]; 
0      18    141   a case item of       134    `RGGEN_WRITE_SET:       value[1]  = {WIDTH{1'b1}}; 
0      19    142   a case item of       134    `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0]; 
0      20    143   a case item of       134    `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1]; 
0      21    144   a case item of       134    default:                value[1]  = current_value; 
1      22    147   code block           147    case (update)                  
0      23    148   a case item of       147    2'b01:    get_sw_next_value = value[0]; 
1      24    149   a case item of       147    2'b10:    get_sw_next_value = value[1]; 
1      25    150   a case item of       147    default:  get_sw_next_value = current_value; 
1      26    164   code block           155    begin                          
1      27    165   true part of         165    if (HW_SET_WIDTH == WIDTH) begin 
0      28    168   false part of        165    else begin                     
1      29    172   code block           172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      30    172   true part of         172    if (HW_CLEAR_WIDTH == WIDTH) begin 
1      31    175   false part of        172    else begin                     
1      32    179   code block           179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      33    179   true part of         179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
1      34    182   false part of        179    else begin                     
1      35    186   code block           186    get_hw_next_value = (value & (~set_clear[1])) | set_clear[0]; 
1      36    202   code block           202    assign  o_sw_read_data    = w_read_data & i_mask; 
1      37    203   code block           203    assign  o_sw_value        = w_value; 
1      38    204   code block           204    assign  o_write_trigger   = w_trigger[0]; 
1      39    205   code block           205    assign  o_read_trigger    = w_trigger[1]; 
1      40    206   code block           206    assign  o_value           = w_value & i_mask; 
1      41    207   code block           207    assign  o_value_unmasked  = w_value; 
1      42    209   code block           209    assign  w_sw_update =          
1      43    214   code block           214    assign  w_hw_update =          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.g_ECC_STATUS.u_bit_field.g_sw_write_done
Type name: rggen_bit_field.g_sw_write_done_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     234   code block           234    assign  w_sw_write_done = 1'b0; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.g_ECC_STATUS.u_bit_field.g_write_trigger
Type name: rggen_bit_field.g_write_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     253   code block           253    assign  w_trigger[0]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.g_ECC_STATUS.u_bit_field.g_read_trigger
Type name: rggen_bit_field.g_read_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     270   code block           270    assign  w_trigger[1]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.g_ECC_STATUS.u_bit_field.g_value
Type name: rggen_bit_field.g_value_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 6 of 6
Number of uncovered blocks: 0 of 6
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     279   code block           279    assign  w_value_next  =        
1      2     284   code block           284    always @(posedge i_clk or negedge i_rst_n) begin 
1      3     285   true part of         285    if (!i_rst_n) begin            
1      4     288   false part of        285    else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin 
1      5     288   true part of         288    else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin 
1      6     293   code block           293    assign  w_value = r_value;     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.g_ECC_STATUS.u_bit_field.g_read_data
Type name: rggen_bit_field.g_read_data_F_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     308   code block           308    assign  w_read_data = w_value; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered blocks: 25 of 27
Number of uncovered blocks: 2 of 27
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     40    code block           40     assign  w_active  = |{1'b0, w_match}; 
0      2     59    code block           57     begin                          
0      3     68    code block           66     begin                          
1      4     81    code block           81     assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid; 
1      5     82    code block           82     assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0]; 
1      6     83    code block           83     assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0]; 
1      7     84    code block           84     assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0]; 
1      8     86    code block           86     assign  w_frontdoor_valid = i_register_valid && w_active; 
1      9     87    code block           87     assign  w_read_mask[0]    = get_mask(1'b0, READABLE, w_match, i_register_access, {BUS_BYTE_WIDTH{1'b1}}); 
1      10    88    code block           88     assign  w_write_mask[0]   = get_mask(1'b1, WRITABLE, w_match, i_register_access, i_register_strobe     ); 
1      11    89    code block           89     assign  w_write_data[0]   = {WORDS{i_register_write_data}}; 
1      12    100   code block           91     begin                          
1      13    101   code block           101    for (i = 0;i < WORDS;i = i + 1) begin 
1      14    102   code block           102    for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin 
1      15    103   true part of         103    if (accessible && (write_access == bus_access[0]) && match[i]) begin 
1      16    106   false part of        103    else begin                     
1      17    112   code block           112    get_mask  = mask;              
1      18    119   code block           119    assign  o_register_active     = w_active; 
1      19    120   code block           120    assign  o_register_ready      = (!w_backdoor_valid) && w_active; 
1      20    121   code block           121    assign  o_register_status     = 2'b00; 
1      21    122   code block           122    assign  o_register_read_data  = w_read_data; 
1      22    123   code block           123    assign  o_register_value      = i_bit_field_value; 
1      23    152   code block           152    assign  w_backdoor_valid  = 1'b0; 
1      24    153   code block           153    assign  w_pending_valid   = 1'b0; 
1      25    154   code block           154    assign  w_read_mask[1]    = {DATA_WIDTH{1'b0}}; 
1      26    155   code block           155    assign  w_write_mask[1]   = {DATA_WIDTH{1'b0}}; 
1      27    156   code block           156    assign  w_write_data[1]   = {DATA_WIDTH{1'b0}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered blocks: 7 of 14
Number of uncovered blocks: 7 of 14
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     20    code block           20     assign  w_address_match = match_address(i_address); 
1      2     21    code block           21     assign  w_access_match  = match_access(i_access); 
1      3     22    code block           22     assign  o_match         = w_address_match && w_access_match && i_additional_match; 
0      4     29    code block           24     begin                          
0      5     32    code block           32     while (value > 0) begin        
0      6     36    code block           36     clog2 = result;                
1      7     42    code block           40     begin                          
1      8     43    true part of         43     if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin 
0      9     46    false part of        43     else begin                     
1      10    56    code block           54     begin                          
1      11    57    true part of         57     if (READABLE && WRITABLE) begin 
0      12    60    false part of        57     else if (READABLE) begin       
0      13    60    true part of         60     else if (READABLE) begin       
0      14    63    false part of        60     else begin                     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.u_register.u_register_common.u_read_data_mux.g
Type name: rggen_mux.g_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           27     assign  o_data  = i_data;      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.g_ECC_EN_IRQ_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 27 of 43
Number of uncovered blocks: 16 of 43
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     51    code block           42     begin                          
1      2     70    code block           64     begin                          
1      3     89    code block           78     begin                          
0      4     90    true part of         90     if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin 
1      5     101   false part of        90     else begin                     
1      6     113   code block           113    get_next_value  = value;       
1      7     125   code block           117    begin                          
0      8     127   a case item of       126    `RGGEN_READ_CLEAR:  value[0]  = {WIDTH{1'b0}}; 
0      9     128   a case item of       126    `RGGEN_READ_SET:    value[0]  = {WIDTH{1'b1}}; 
1      10    129   a case item of       126    default:            value[0]  = current_value; 
1      11    132   code block           132    masked_data[0]  = write_mask & (~write_data); 
1      12    135   a case item of       134    `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1]; 
0      13    136   a case item of       134    `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]); 
0      14    137   a case item of       134    `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]); 
0      15    138   a case item of       134    `RGGEN_WRITE_CLEAR:     value[1]  = {WIDTH{1'b0}}; 
0      16    139   a case item of       134    `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0]; 
0      17    140   a case item of       134    `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1]; 
0      18    141   a case item of       134    `RGGEN_WRITE_SET:       value[1]  = {WIDTH{1'b1}}; 
0      19    142   a case item of       134    `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0]; 
0      20    143   a case item of       134    `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1]; 
0      21    144   a case item of       134    default:                value[1]  = current_value; 
1      22    147   code block           147    case (update)                  
0      23    148   a case item of       147    2'b01:    get_sw_next_value = value[0]; 
1      24    149   a case item of       147    2'b10:    get_sw_next_value = value[1]; 
1      25    150   a case item of       147    default:  get_sw_next_value = current_value; 
1      26    164   code block           155    begin                          
1      27    165   true part of         165    if (HW_SET_WIDTH == WIDTH) begin 
0      28    168   false part of        165    else begin                     
1      29    172   code block           172    if (HW_CLEAR_WIDTH == WIDTH) begin 
1      30    172   true part of         172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      31    175   false part of        172    else begin                     
1      32    179   code block           179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      33    179   true part of         179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
1      34    182   false part of        179    else begin                     
1      35    186   code block           186    get_hw_next_value = (value & (~set_clear[1])) | set_clear[0]; 
1      36    202   code block           202    assign  o_sw_read_data    = w_read_data & i_mask; 
1      37    203   code block           203    assign  o_sw_value        = w_value; 
1      38    204   code block           204    assign  o_write_trigger   = w_trigger[0]; 
1      39    205   code block           205    assign  o_read_trigger    = w_trigger[1]; 
1      40    206   code block           206    assign  o_value           = w_value & i_mask; 
1      41    207   code block           207    assign  o_value_unmasked  = w_value; 
1      42    209   code block           209    assign  w_sw_update =          
1      43    214   code block           214    assign  w_hw_update =          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.g_ECC_EN_IRQ_REG.u_bit_field.g_sw_write_done
Type name: rggen_bit_field.g_sw_write_done_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     234   code block           234    assign  w_sw_write_done = 1'b0; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.g_ECC_EN_IRQ_REG.u_bit_field.g_write_trigger
Type name: rggen_bit_field.g_write_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     253   code block           253    assign  w_trigger[0]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.g_ECC_EN_IRQ_REG.u_bit_field.g_read_trigger
Type name: rggen_bit_field.g_read_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     270   code block           270    assign  w_trigger[1]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.g_ECC_EN_IRQ_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 6 of 6
Number of uncovered blocks: 0 of 6
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     279   code block           279    assign  w_value_next  =        
1      2     284   code block           284    always @(posedge i_clk or negedge i_rst_n) begin 
1      3     285   true part of         285    if (!i_rst_n) begin            
1      4     288   false part of        285    else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin 
1      5     288   true part of         288    else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin 
1      6     293   code block           293    assign  w_value = r_value;     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.g_ECC_EN_IRQ_REG.u_bit_field.g_read_data
Type name: rggen_bit_field.g_read_data_F_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     308   code block           308    assign  w_read_data = w_value; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered blocks: 25 of 27
Number of uncovered blocks: 2 of 27
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     40    code block           40     assign  w_active  = |{1'b0, w_match}; 
0      2     59    code block           57     begin                          
0      3     68    code block           66     begin                          
1      4     81    code block           81     assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid; 
1      5     82    code block           82     assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0]; 
1      6     83    code block           83     assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0]; 
1      7     84    code block           84     assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0]; 
1      8     86    code block           86     assign  w_frontdoor_valid = i_register_valid && w_active; 
1      9     87    code block           87     assign  w_read_mask[0]    = get_mask(1'b0, READABLE, w_match, i_register_access, {BUS_BYTE_WIDTH{1'b1}}); 
1      10    88    code block           88     assign  w_write_mask[0]   = get_mask(1'b1, WRITABLE, w_match, i_register_access, i_register_strobe     ); 
1      11    89    code block           89     assign  w_write_data[0]   = {WORDS{i_register_write_data}}; 
1      12    100   code block           91     begin                          
1      13    101   code block           101    for (i = 0;i < WORDS;i = i + 1) begin 
1      14    102   code block           102    for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin 
1      15    103   true part of         103    if (accessible && (write_access == bus_access[0]) && match[i]) begin 
1      16    106   false part of        103    else begin                     
1      17    112   code block           112    get_mask  = mask;              
1      18    119   code block           119    assign  o_register_active     = w_active; 
1      19    120   code block           120    assign  o_register_ready      = (!w_backdoor_valid) && w_active; 
1      20    121   code block           121    assign  o_register_status     = 2'b00; 
1      21    122   code block           122    assign  o_register_read_data  = w_read_data; 
1      22    123   code block           123    assign  o_register_value      = i_bit_field_value; 
1      23    152   code block           152    assign  w_backdoor_valid  = 1'b0; 
1      24    153   code block           153    assign  w_pending_valid   = 1'b0; 
1      25    154   code block           154    assign  w_read_mask[1]    = {DATA_WIDTH{1'b0}}; 
1      26    155   code block           155    assign  w_write_mask[1]   = {DATA_WIDTH{1'b0}}; 
1      27    156   code block           156    assign  w_write_data[1]   = {DATA_WIDTH{1'b0}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered blocks: 7 of 14
Number of uncovered blocks: 7 of 14
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     20    code block           20     assign  w_address_match = match_address(i_address); 
1      2     21    code block           21     assign  w_access_match  = match_access(i_access); 
1      3     22    code block           22     assign  o_match         = w_address_match && w_access_match && i_additional_match; 
0      4     29    code block           24     begin                          
0      5     32    code block           32     while (value > 0) begin        
0      6     36    code block           36     clog2 = result;                
1      7     42    code block           40     begin                          
1      8     43    true part of         43     if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin 
0      9     46    false part of        43     else begin                     
1      10    56    code block           54     begin                          
1      11    57    true part of         57     if (READABLE && WRITABLE) begin 
0      12    60    false part of        57     else if (READABLE) begin       
0      13    60    true part of         60     else if (READABLE) begin       
0      14    63    false part of        60     else begin                     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.u_register.u_register_common.u_read_data_mux.g
Type name: rggen_mux.g_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           27     assign  o_data  = i_data;      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.g_ECC_ONOFF_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 27 of 43
Number of uncovered blocks: 16 of 43
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     51    code block           42     begin                          
1      2     70    code block           64     begin                          
1      3     89    code block           78     begin                          
0      4     90    true part of         90     if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin 
1      5     101   false part of        90     else begin                     
1      6     113   code block           113    get_next_value  = value;       
1      7     125   code block           117    begin                          
0      8     127   a case item of       126    `RGGEN_READ_CLEAR:  value[0]  = {WIDTH{1'b0}}; 
0      9     128   a case item of       126    `RGGEN_READ_SET:    value[0]  = {WIDTH{1'b1}}; 
1      10    129   a case item of       126    default:            value[0]  = current_value; 
1      11    132   code block           132    masked_data[0]  = write_mask & (~write_data); 
1      12    135   a case item of       134    `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1]; 
0      13    136   a case item of       134    `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]); 
0      14    137   a case item of       134    `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]); 
0      15    138   a case item of       134    `RGGEN_WRITE_CLEAR:     value[1]  = {WIDTH{1'b0}}; 
0      16    139   a case item of       134    `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0]; 
0      17    140   a case item of       134    `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1]; 
0      18    141   a case item of       134    `RGGEN_WRITE_SET:       value[1]  = {WIDTH{1'b1}}; 
0      19    142   a case item of       134    `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0]; 
0      20    143   a case item of       134    `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1]; 
0      21    144   a case item of       134    default:                value[1]  = current_value; 
1      22    147   code block           147    case (update)                  
0      23    148   a case item of       147    2'b01:    get_sw_next_value = value[0]; 
1      24    149   a case item of       147    2'b10:    get_sw_next_value = value[1]; 
1      25    150   a case item of       147    default:  get_sw_next_value = current_value; 
1      26    164   code block           155    begin                          
1      27    165   true part of         165    if (HW_SET_WIDTH == WIDTH) begin 
0      28    168   false part of        165    else begin                     
1      29    172   code block           172    if (HW_CLEAR_WIDTH == WIDTH) begin 
1      30    172   true part of         172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      31    175   false part of        172    else begin                     
1      32    179   code block           179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      33    179   true part of         179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
1      34    182   false part of        179    else begin                     
1      35    186   code block           186    get_hw_next_value = (value & (~set_clear[1])) | set_clear[0]; 
1      36    202   code block           202    assign  o_sw_read_data    = w_read_data & i_mask; 
1      37    203   code block           203    assign  o_sw_value        = w_value; 
1      38    204   code block           204    assign  o_write_trigger   = w_trigger[0]; 
1      39    205   code block           205    assign  o_read_trigger    = w_trigger[1]; 
1      40    206   code block           206    assign  o_value           = w_value & i_mask; 
1      41    207   code block           207    assign  o_value_unmasked  = w_value; 
1      42    209   code block           209    assign  w_sw_update =          
1      43    214   code block           214    assign  w_hw_update =          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.g_ECC_ONOFF_REG.u_bit_field.g_sw_write_done
Type name: rggen_bit_field.g_sw_write_done_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     234   code block           234    assign  w_sw_write_done = 1'b0; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.g_ECC_ONOFF_REG.u_bit_field.g_write_trigger
Type name: rggen_bit_field.g_write_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     253   code block           253    assign  w_trigger[0]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.g_ECC_ONOFF_REG.u_bit_field.g_read_trigger
Type name: rggen_bit_field.g_read_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     270   code block           270    assign  w_trigger[1]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.g_ECC_ONOFF_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 6 of 6
Number of uncovered blocks: 0 of 6
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     279   code block           279    assign  w_value_next  =        
1      2     284   code block           284    always @(posedge i_clk or negedge i_rst_n) begin 
1      3     285   true part of         285    if (!i_rst_n) begin            
1      4     288   false part of        285    else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin 
1      5     288   true part of         288    else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin 
1      6     293   code block           293    assign  w_value = r_value;     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.g_ECC_ONOFF_REG.u_bit_field.g_read_data
Type name: rggen_bit_field.g_read_data_F_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     308   code block           308    assign  w_read_data = w_value; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered blocks: 24 of 27
Number of uncovered blocks: 3 of 27
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     40    code block           40     assign  w_active  = |{1'b0, w_match}; 
0      2     59    code block           57     begin                          
0      3     68    code block           66     begin                          
1      4     81    code block           81     assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid; 
1      5     82    code block           82     assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0]; 
1      6     83    code block           83     assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0]; 
1      7     84    code block           84     assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0]; 
1      8     86    code block           86     assign  w_frontdoor_valid = i_register_valid && w_active; 
1      9     87    code block           87     assign  w_read_mask[0]    = get_mask(1'b0, READABLE, w_match, i_register_access, {BUS_BYTE_WIDTH{1'b1}}); 
1      10    88    code block           88     assign  w_write_mask[0]   = get_mask(1'b1, WRITABLE, w_match, i_register_access, i_register_strobe     ); 
1      11    89    code block           89     assign  w_write_data[0]   = {WORDS{i_register_write_data}}; 
1      12    100   code block           91     begin                          
1      13    101   code block           101    for (i = 0;i < WORDS;i = i + 1) begin 
1      14    102   code block           102    for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin 
0      15    103   true part of         103    if (accessible && (write_access == bus_access[0]) && match[i]) begin 
1      16    106   false part of        103    else begin                     
1      17    112   code block           112    get_mask  = mask;              
1      18    119   code block           119    assign  o_register_active     = w_active; 
1      19    120   code block           120    assign  o_register_ready      = (!w_backdoor_valid) && w_active; 
1      20    121   code block           121    assign  o_register_status     = 2'b00; 
1      21    122   code block           122    assign  o_register_read_data  = w_read_data; 
1      22    123   code block           123    assign  o_register_value      = i_bit_field_value; 
1      23    152   code block           152    assign  w_backdoor_valid  = 1'b0; 
1      24    153   code block           153    assign  w_pending_valid   = 1'b0; 
1      25    154   code block           154    assign  w_read_mask[1]    = {DATA_WIDTH{1'b0}}; 
1      26    155   code block           155    assign  w_write_mask[1]   = {DATA_WIDTH{1'b0}}; 
1      27    156   code block           156    assign  w_write_data[1]   = {DATA_WIDTH{1'b0}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered blocks: 7 of 14
Number of uncovered blocks: 7 of 14
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     20    code block           20     assign  w_address_match = match_address(i_address); 
1      2     21    code block           21     assign  w_access_match  = match_access(i_access); 
1      3     22    code block           22     assign  o_match         = w_address_match && w_access_match && i_additional_match; 
0      4     29    code block           24     begin                          
0      5     32    code block           32     while (value > 0) begin        
0      6     36    code block           36     clog2 = result;                
1      7     42    code block           40     begin                          
1      8     43    true part of         43     if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin 
0      9     46    false part of        43     else begin                     
1      10    56    code block           54     begin                          
1      11    57    true part of         57     if (READABLE && WRITABLE) begin 
0      12    60    false part of        57     else if (READABLE) begin       
0      13    60    true part of         60     else if (READABLE) begin       
0      14    63    false part of        60     else begin                     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.u_register.u_register_common.u_read_data_mux.g
Type name: rggen_mux.g_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           27     assign  o_data  = i_data;      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.g_CE_CNT_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 26 of 43
Number of uncovered blocks: 17 of 43
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     51    code block           42     begin                          
1      2     70    code block           64     begin                          
1      3     89    code block           78     begin                          
0      4     90    true part of         90     if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin 
1      5     101   false part of        90     else begin                     
1      6     113   code block           113    get_next_value  = value;       
1      7     125   code block           117    begin                          
0      8     127   a case item of       126    `RGGEN_READ_CLEAR:  value[0]  = {WIDTH{1'b0}}; 
0      9     128   a case item of       126    `RGGEN_READ_SET:    value[0]  = {WIDTH{1'b1}}; 
1      10    129   a case item of       126    default:            value[0]  = current_value; 
1      11    132   code block           132    masked_data[0]  = write_mask & (~write_data); 
1      12    135   a case item of       134    `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1]; 
0      13    136   a case item of       134    `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]); 
0      14    137   a case item of       134    `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]); 
0      15    138   a case item of       134    `RGGEN_WRITE_CLEAR:     value[1]  = {WIDTH{1'b0}}; 
0      16    139   a case item of       134    `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0]; 
0      17    140   a case item of       134    `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1]; 
0      18    141   a case item of       134    `RGGEN_WRITE_SET:       value[1]  = {WIDTH{1'b1}}; 
0      19    142   a case item of       134    `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0]; 
0      20    143   a case item of       134    `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1]; 
0      21    144   a case item of       134    default:                value[1]  = current_value; 
1      22    147   code block           147    case (update)                  
0      23    148   a case item of       147    2'b01:    get_sw_next_value = value[0]; 
0      24    149   a case item of       147    2'b10:    get_sw_next_value = value[1]; 
1      25    150   a case item of       147    default:  get_sw_next_value = current_value; 
1      26    164   code block           155    begin                          
1      27    165   true part of         165    if (HW_SET_WIDTH == WIDTH) begin 
0      28    168   false part of        165    else begin                     
1      29    172   code block           172    if (HW_CLEAR_WIDTH == WIDTH) begin 
1      30    172   true part of         172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      31    175   false part of        172    else begin                     
1      32    179   code block           179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      33    179   true part of         179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
1      34    182   false part of        179    else begin                     
1      35    186   code block           186    get_hw_next_value = (value & (~set_clear[1])) | set_clear[0]; 
1      36    202   code block           202    assign  o_sw_read_data    = w_read_data & i_mask; 
1      37    203   code block           203    assign  o_sw_value        = w_value; 
1      38    204   code block           204    assign  o_write_trigger   = w_trigger[0]; 
1      39    205   code block           205    assign  o_read_trigger    = w_trigger[1]; 
1      40    206   code block           206    assign  o_value           = w_value & i_mask; 
1      41    207   code block           207    assign  o_value_unmasked  = w_value; 
1      42    209   code block           209    assign  w_sw_update =          
1      43    214   code block           214    assign  w_hw_update =          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.g_CE_CNT_REG.u_bit_field.g_sw_write_done
Type name: rggen_bit_field.g_sw_write_done_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     234   code block           234    assign  w_sw_write_done = 1'b0; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.g_CE_CNT_REG.u_bit_field.g_write_trigger
Type name: rggen_bit_field.g_write_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     253   code block           253    assign  w_trigger[0]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.g_CE_CNT_REG.u_bit_field.g_read_trigger
Type name: rggen_bit_field.g_read_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     270   code block           270    assign  w_trigger[1]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.g_CE_CNT_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 5 of 6
Number of uncovered blocks: 1 of 6
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     279   code block           279    assign  w_value_next  =        
1      2     284   code block           284    always @(posedge i_clk or negedge i_rst_n) begin 
1      3     285   true part of         285    if (!i_rst_n) begin            
1      4     288   false part of        285    else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin 
0      5     288   true part of         288    else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin 
1      6     293   code block           293    assign  w_value = r_value;     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.g_CE_CNT_REG.u_bit_field.g_read_data
Type name: rggen_bit_field.g_read_data_F_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     308   code block           308    assign  w_read_data = w_value; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered blocks: 24 of 27
Number of uncovered blocks: 3 of 27
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     40    code block           40     assign  w_active  = |{1'b0, w_match}; 
0      2     59    code block           57     begin                          
0      3     68    code block           66     begin                          
1      4     81    code block           81     assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid; 
1      5     82    code block           82     assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0]; 
1      6     83    code block           83     assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0]; 
1      7     84    code block           84     assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0]; 
1      8     86    code block           86     assign  w_frontdoor_valid = i_register_valid && w_active; 
1      9     87    code block           87     assign  w_read_mask[0]    = get_mask(1'b0, READABLE, w_match, i_register_access, {BUS_BYTE_WIDTH{1'b1}}); 
1      10    88    code block           88     assign  w_write_mask[0]   = get_mask(1'b1, WRITABLE, w_match, i_register_access, i_register_strobe     ); 
1      11    89    code block           89     assign  w_write_data[0]   = {WORDS{i_register_write_data}}; 
1      12    100   code block           91     begin                          
1      13    101   code block           101    for (i = 0;i < WORDS;i = i + 1) begin 
1      14    102   code block           102    for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin 
0      15    103   true part of         103    if (accessible && (write_access == bus_access[0]) && match[i]) begin 
1      16    106   false part of        103    else begin                     
1      17    112   code block           112    get_mask  = mask;              
1      18    119   code block           119    assign  o_register_active     = w_active; 
1      19    120   code block           120    assign  o_register_ready      = (!w_backdoor_valid) && w_active; 
1      20    121   code block           121    assign  o_register_status     = 2'b00; 
1      21    122   code block           122    assign  o_register_read_data  = w_read_data; 
1      22    123   code block           123    assign  o_register_value      = i_bit_field_value; 
1      23    152   code block           152    assign  w_backdoor_valid  = 1'b0; 
1      24    153   code block           153    assign  w_pending_valid   = 1'b0; 
1      25    154   code block           154    assign  w_read_mask[1]    = {DATA_WIDTH{1'b0}}; 
1      26    155   code block           155    assign  w_write_mask[1]   = {DATA_WIDTH{1'b0}}; 
1      27    156   code block           156    assign  w_write_data[1]   = {DATA_WIDTH{1'b0}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered blocks: 8 of 14
Number of uncovered blocks: 6 of 14
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     20    code block           20     assign  w_address_match = match_address(i_address); 
1      2     21    code block           21     assign  w_access_match  = match_access(i_access); 
1      3     22    code block           22     assign  o_match         = w_address_match && w_access_match && i_additional_match; 
0      4     29    code block           24     begin                          
0      5     32    code block           32     while (value > 0) begin        
0      6     36    code block           36     clog2 = result;                
1      7     42    code block           40     begin                          
1      8     43    true part of         43     if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin 
0      9     46    false part of        43     else begin                     
1      10    56    code block           54     begin                          
0      11    57    true part of         57     if (READABLE && WRITABLE) begin 
1      12    60    false part of        57     else if (READABLE) begin       
1      13    60    true part of         60     else if (READABLE) begin       
0      14    63    false part of        60     else begin                     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.u_register.u_register_common.u_read_data_mux.g
Type name: rggen_mux.g_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           27     assign  o_data  = i_data;      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.g_CE_FFD_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 10 of 43
Number of uncovered blocks: 33 of 43
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     51    code block           42     begin                          
1      2     70    code block           64     begin                          
0      3     89    code block           78     begin                          
0      4     90    true part of         90     if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin 
0      5     101   false part of        90     else begin                     
0      6     113   code block           113    get_next_value  = value;       
0      7     125   code block           117    begin                          
0      8     127   a case item of       126    `RGGEN_READ_CLEAR:  value[0]  = {WIDTH{1'b0}}; 
0      9     128   a case item of       126    `RGGEN_READ_SET:    value[0]  = {WIDTH{1'b1}}; 
0      10    129   a case item of       126    default:            value[0]  = current_value; 
0      11    132   code block           132    masked_data[0]  = write_mask & (~write_data); 
0      12    135   a case item of       134    `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1]; 
0      13    136   a case item of       134    `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]); 
0      14    137   a case item of       134    `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]); 
0      15    138   a case item of       134    `RGGEN_WRITE_CLEAR:     value[1]  = {WIDTH{1'b0}}; 
0      16    139   a case item of       134    `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0]; 
0      17    140   a case item of       134    `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1]; 
0      18    141   a case item of       134    `RGGEN_WRITE_SET:       value[1]  = {WIDTH{1'b1}}; 
0      19    142   a case item of       134    `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0]; 
0      20    143   a case item of       134    `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1]; 
0      21    144   a case item of       134    default:                value[1]  = current_value; 
0      22    147   code block           147    case (update)                  
0      23    148   a case item of       147    2'b01:    get_sw_next_value = value[0]; 
0      24    149   a case item of       147    2'b10:    get_sw_next_value = value[1]; 
0      25    150   a case item of       147    default:  get_sw_next_value = current_value; 
0      26    164   code block           155    begin                          
0      27    165   true part of         165    if (HW_SET_WIDTH == WIDTH) begin 
0      28    168   false part of        165    else begin                     
0      29    172   code block           172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      30    172   true part of         172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      31    175   false part of        172    else begin                     
0      32    179   code block           179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      33    179   true part of         179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      34    182   false part of        179    else begin                     
0      35    186   code block           186    get_hw_next_value = (value & (~set_clear[1])) | set_clear[0]; 
1      36    202   code block           202    assign  o_sw_read_data    = w_read_data & i_mask; 
1      37    203   code block           203    assign  o_sw_value        = w_value; 
1      38    204   code block           204    assign  o_write_trigger   = w_trigger[0]; 
1      39    205   code block           205    assign  o_read_trigger    = w_trigger[1]; 
1      40    206   code block           206    assign  o_value           = w_value & i_mask; 
1      41    207   code block           207    assign  o_value_unmasked  = w_value; 
1      42    209   code block           209    assign  w_sw_update =          
1      43    214   code block           214    assign  w_hw_update =          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.g_CE_FFD_REG.u_bit_field.g_sw_write_done
Type name: rggen_bit_field.g_sw_write_done_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     234   code block           234    assign  w_sw_write_done = 1'b0; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.g_CE_FFD_REG.u_bit_field.g_write_trigger
Type name: rggen_bit_field.g_write_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     253   code block           253    assign  w_trigger[0]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.g_CE_FFD_REG.u_bit_field.g_read_trigger
Type name: rggen_bit_field.g_read_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     270   code block           270    assign  w_trigger[1]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.g_CE_FFD_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     296   code block           296    assign  w_value = i_value;     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.g_CE_FFD_REG.u_bit_field.g_read_data
Type name: rggen_bit_field.g_read_data_T_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     305   code block           305    assign  w_read_data = i_value; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered blocks: 24 of 27
Number of uncovered blocks: 3 of 27
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     40    code block           40     assign  w_active  = |{1'b0, w_match}; 
0      2     59    code block           57     begin                          
0      3     68    code block           66     begin                          
1      4     81    code block           81     assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid; 
1      5     82    code block           82     assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0]; 
1      6     83    code block           83     assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0]; 
1      7     84    code block           84     assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0]; 
1      8     86    code block           86     assign  w_frontdoor_valid = i_register_valid && w_active; 
1      9     87    code block           87     assign  w_read_mask[0]    = get_mask(1'b0, READABLE, w_match, i_register_access, {BUS_BYTE_WIDTH{1'b1}}); 
1      10    88    code block           88     assign  w_write_mask[0]   = get_mask(1'b1, WRITABLE, w_match, i_register_access, i_register_strobe     ); 
1      11    89    code block           89     assign  w_write_data[0]   = {WORDS{i_register_write_data}}; 
1      12    100   code block           91     begin                          
1      13    101   code block           101    for (i = 0;i < WORDS;i = i + 1) begin 
1      14    102   code block           102    for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin 
0      15    103   true part of         103    if (accessible && (write_access == bus_access[0]) && match[i]) begin 
1      16    106   false part of        103    else begin                     
1      17    112   code block           112    get_mask  = mask;              
1      18    119   code block           119    assign  o_register_active     = w_active; 
1      19    120   code block           120    assign  o_register_ready      = (!w_backdoor_valid) && w_active; 
1      20    121   code block           121    assign  o_register_status     = 2'b00; 
1      21    122   code block           122    assign  o_register_read_data  = w_read_data; 
1      22    123   code block           123    assign  o_register_value      = i_bit_field_value; 
1      23    152   code block           152    assign  w_backdoor_valid  = 1'b0; 
1      24    153   code block           153    assign  w_pending_valid   = 1'b0; 
1      25    154   code block           154    assign  w_read_mask[1]    = {DATA_WIDTH{1'b0}}; 
1      26    155   code block           155    assign  w_write_mask[1]   = {DATA_WIDTH{1'b0}}; 
1      27    156   code block           156    assign  w_write_data[1]   = {DATA_WIDTH{1'b0}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered blocks: 8 of 14
Number of uncovered blocks: 6 of 14
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     20    code block           20     assign  w_address_match = match_address(i_address); 
1      2     21    code block           21     assign  w_access_match  = match_access(i_access); 
1      3     22    code block           22     assign  o_match         = w_address_match && w_access_match && i_additional_match; 
0      4     29    code block           24     begin                          
0      5     32    code block           32     while (value > 0) begin        
0      6     36    code block           36     clog2 = result;                
1      7     42    code block           40     begin                          
1      8     43    true part of         43     if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin 
0      9     46    false part of        43     else begin                     
1      10    56    code block           54     begin                          
0      11    57    true part of         57     if (READABLE && WRITABLE) begin 
1      12    60    false part of        57     else if (READABLE) begin       
1      13    60    true part of         60     else if (READABLE) begin       
0      14    63    false part of        60     else begin                     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.u_register.u_register_common.u_read_data_mux.g
Type name: rggen_mux.g_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           27     assign  o_data  = i_data;      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.g_CE_FFE_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 10 of 43
Number of uncovered blocks: 33 of 43
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     51    code block           42     begin                          
1      2     70    code block           64     begin                          
0      3     89    code block           78     begin                          
0      4     90    true part of         90     if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin 
0      5     101   false part of        90     else begin                     
0      6     113   code block           113    get_next_value  = value;       
0      7     125   code block           117    begin                          
0      8     127   a case item of       126    `RGGEN_READ_CLEAR:  value[0]  = {WIDTH{1'b0}}; 
0      9     128   a case item of       126    `RGGEN_READ_SET:    value[0]  = {WIDTH{1'b1}}; 
0      10    129   a case item of       126    default:            value[0]  = current_value; 
0      11    132   code block           132    masked_data[0]  = write_mask & (~write_data); 
0      12    135   a case item of       134    `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1]; 
0      13    136   a case item of       134    `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]); 
0      14    137   a case item of       134    `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]); 
0      15    138   a case item of       134    `RGGEN_WRITE_CLEAR:     value[1]  = {WIDTH{1'b0}}; 
0      16    139   a case item of       134    `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0]; 
0      17    140   a case item of       134    `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1]; 
0      18    141   a case item of       134    `RGGEN_WRITE_SET:       value[1]  = {WIDTH{1'b1}}; 
0      19    142   a case item of       134    `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0]; 
0      20    143   a case item of       134    `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1]; 
0      21    144   a case item of       134    default:                value[1]  = current_value; 
0      22    147   code block           147    case (update)                  
0      23    148   a case item of       147    2'b01:    get_sw_next_value = value[0]; 
0      24    149   a case item of       147    2'b10:    get_sw_next_value = value[1]; 
0      25    150   a case item of       147    default:  get_sw_next_value = current_value; 
0      26    164   code block           155    begin                          
0      27    165   true part of         165    if (HW_SET_WIDTH == WIDTH) begin 
0      28    168   false part of        165    else begin                     
0      29    172   code block           172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      30    172   true part of         172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      31    175   false part of        172    else begin                     
0      32    179   code block           179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      33    179   true part of         179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      34    182   false part of        179    else begin                     
0      35    186   code block           186    get_hw_next_value = (value & (~set_clear[1])) | set_clear[0]; 
1      36    202   code block           202    assign  o_sw_read_data    = w_read_data & i_mask; 
1      37    203   code block           203    assign  o_sw_value        = w_value; 
1      38    204   code block           204    assign  o_write_trigger   = w_trigger[0]; 
1      39    205   code block           205    assign  o_read_trigger    = w_trigger[1]; 
1      40    206   code block           206    assign  o_value           = w_value & i_mask; 
1      41    207   code block           207    assign  o_value_unmasked  = w_value; 
1      42    209   code block           209    assign  w_sw_update =          
1      43    214   code block           214    assign  w_hw_update =          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.g_CE_FFE_REG.u_bit_field.g_sw_write_done
Type name: rggen_bit_field.g_sw_write_done_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     234   code block           234    assign  w_sw_write_done = 1'b0; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.g_CE_FFE_REG.u_bit_field.g_write_trigger
Type name: rggen_bit_field.g_write_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     253   code block           253    assign  w_trigger[0]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.g_CE_FFE_REG.u_bit_field.g_read_trigger
Type name: rggen_bit_field.g_read_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     270   code block           270    assign  w_trigger[1]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.g_CE_FFE_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     296   code block           296    assign  w_value = i_value;     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.g_CE_FFE_REG.u_bit_field.g_read_data
Type name: rggen_bit_field.g_read_data_T_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     305   code block           305    assign  w_read_data = i_value; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered blocks: 24 of 27
Number of uncovered blocks: 3 of 27
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     40    code block           40     assign  w_active  = |{1'b0, w_match}; 
0      2     59    code block           57     begin                          
0      3     68    code block           66     begin                          
1      4     81    code block           81     assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid; 
1      5     82    code block           82     assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0]; 
1      6     83    code block           83     assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0]; 
1      7     84    code block           84     assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0]; 
1      8     86    code block           86     assign  w_frontdoor_valid = i_register_valid && w_active; 
1      9     87    code block           87     assign  w_read_mask[0]    = get_mask(1'b0, READABLE, w_match, i_register_access, {BUS_BYTE_WIDTH{1'b1}}); 
1      10    88    code block           88     assign  w_write_mask[0]   = get_mask(1'b1, WRITABLE, w_match, i_register_access, i_register_strobe     ); 
1      11    89    code block           89     assign  w_write_data[0]   = {WORDS{i_register_write_data}}; 
1      12    100   code block           91     begin                          
1      13    101   code block           101    for (i = 0;i < WORDS;i = i + 1) begin 
1      14    102   code block           102    for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin 
0      15    103   true part of         103    if (accessible && (write_access == bus_access[0]) && match[i]) begin 
1      16    106   false part of        103    else begin                     
1      17    112   code block           112    get_mask  = mask;              
1      18    119   code block           119    assign  o_register_active     = w_active; 
1      19    120   code block           120    assign  o_register_ready      = (!w_backdoor_valid) && w_active; 
1      20    121   code block           121    assign  o_register_status     = 2'b00; 
1      21    122   code block           122    assign  o_register_read_data  = w_read_data; 
1      22    123   code block           123    assign  o_register_value      = i_bit_field_value; 
1      23    152   code block           152    assign  w_backdoor_valid  = 1'b0; 
1      24    153   code block           153    assign  w_pending_valid   = 1'b0; 
1      25    154   code block           154    assign  w_read_mask[1]    = {DATA_WIDTH{1'b0}}; 
1      26    155   code block           155    assign  w_write_mask[1]   = {DATA_WIDTH{1'b0}}; 
1      27    156   code block           156    assign  w_write_data[1]   = {DATA_WIDTH{1'b0}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered blocks: 8 of 14
Number of uncovered blocks: 6 of 14
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     20    code block           20     assign  w_address_match = match_address(i_address); 
1      2     21    code block           21     assign  w_access_match  = match_access(i_access); 
1      3     22    code block           22     assign  o_match         = w_address_match && w_access_match && i_additional_match; 
0      4     29    code block           24     begin                          
0      5     32    code block           32     while (value > 0) begin        
0      6     36    code block           36     clog2 = result;                
1      7     42    code block           40     begin                          
1      8     43    true part of         43     if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin 
0      9     46    false part of        43     else begin                     
1      10    56    code block           54     begin                          
0      11    57    true part of         57     if (READABLE && WRITABLE) begin 
1      12    60    false part of        57     else if (READABLE) begin       
1      13    60    true part of         60     else if (READABLE) begin       
0      14    63    false part of        60     else begin                     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.u_register.u_register_common.u_read_data_mux.g
Type name: rggen_mux.g_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           27     assign  o_data  = i_data;      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.g_UE_FFE_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 10 of 43
Number of uncovered blocks: 33 of 43
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     51    code block           42     begin                          
1      2     70    code block           64     begin                          
0      3     89    code block           78     begin                          
0      4     90    true part of         90     if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin 
0      5     101   false part of        90     else begin                     
0      6     113   code block           113    get_next_value  = value;       
0      7     125   code block           117    begin                          
0      8     127   a case item of       126    `RGGEN_READ_CLEAR:  value[0]  = {WIDTH{1'b0}}; 
0      9     128   a case item of       126    `RGGEN_READ_SET:    value[0]  = {WIDTH{1'b1}}; 
0      10    129   a case item of       126    default:            value[0]  = current_value; 
0      11    132   code block           132    masked_data[0]  = write_mask & (~write_data); 
0      12    135   a case item of       134    `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1]; 
0      13    136   a case item of       134    `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]); 
0      14    137   a case item of       134    `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]); 
0      15    138   a case item of       134    `RGGEN_WRITE_CLEAR:     value[1]  = {WIDTH{1'b0}}; 
0      16    139   a case item of       134    `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0]; 
0      17    140   a case item of       134    `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1]; 
0      18    141   a case item of       134    `RGGEN_WRITE_SET:       value[1]  = {WIDTH{1'b1}}; 
0      19    142   a case item of       134    `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0]; 
0      20    143   a case item of       134    `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1]; 
0      21    144   a case item of       134    default:                value[1]  = current_value; 
0      22    147   code block           147    case (update)                  
0      23    148   a case item of       147    2'b01:    get_sw_next_value = value[0]; 
0      24    149   a case item of       147    2'b10:    get_sw_next_value = value[1]; 
0      25    150   a case item of       147    default:  get_sw_next_value = current_value; 
0      26    164   code block           155    begin                          
0      27    165   true part of         165    if (HW_SET_WIDTH == WIDTH) begin 
0      28    168   false part of        165    else begin                     
0      29    172   code block           172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      30    172   true part of         172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      31    175   false part of        172    else begin                     
0      32    179   code block           179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      33    179   true part of         179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      34    182   false part of        179    else begin                     
0      35    186   code block           186    get_hw_next_value = (value & (~set_clear[1])) | set_clear[0]; 
1      36    202   code block           202    assign  o_sw_read_data    = w_read_data & i_mask; 
1      37    203   code block           203    assign  o_sw_value        = w_value; 
1      38    204   code block           204    assign  o_write_trigger   = w_trigger[0]; 
1      39    205   code block           205    assign  o_read_trigger    = w_trigger[1]; 
1      40    206   code block           206    assign  o_value           = w_value & i_mask; 
1      41    207   code block           207    assign  o_value_unmasked  = w_value; 
1      42    209   code block           209    assign  w_sw_update =          
1      43    214   code block           214    assign  w_hw_update =          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.g_UE_FFE_REG.u_bit_field.g_sw_write_done
Type name: rggen_bit_field.g_sw_write_done_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     234   code block           234    assign  w_sw_write_done = 1'b0; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.g_UE_FFE_REG.u_bit_field.g_write_trigger
Type name: rggen_bit_field.g_write_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     253   code block           253    assign  w_trigger[0]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.g_UE_FFE_REG.u_bit_field.g_read_trigger
Type name: rggen_bit_field.g_read_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     270   code block           270    assign  w_trigger[1]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.g_UE_FFE_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     296   code block           296    assign  w_value = i_value;     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.g_UE_FFE_REG.u_bit_field.g_read_data
Type name: rggen_bit_field.g_read_data_T_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     305   code block           305    assign  w_read_data = i_value; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered blocks: 24 of 27
Number of uncovered blocks: 3 of 27
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     40    code block           40     assign  w_active  = |{1'b0, w_match}; 
0      2     59    code block           57     begin                          
0      3     68    code block           66     begin                          
1      4     81    code block           81     assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid; 
1      5     82    code block           82     assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0]; 
1      6     83    code block           83     assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0]; 
1      7     84    code block           84     assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0]; 
1      8     86    code block           86     assign  w_frontdoor_valid = i_register_valid && w_active; 
1      9     87    code block           87     assign  w_read_mask[0]    = get_mask(1'b0, READABLE, w_match, i_register_access, {BUS_BYTE_WIDTH{1'b1}}); 
1      10    88    code block           88     assign  w_write_mask[0]   = get_mask(1'b1, WRITABLE, w_match, i_register_access, i_register_strobe     ); 
1      11    89    code block           89     assign  w_write_data[0]   = {WORDS{i_register_write_data}}; 
1      12    100   code block           91     begin                          
1      13    101   code block           101    for (i = 0;i < WORDS;i = i + 1) begin 
1      14    102   code block           102    for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin 
0      15    103   true part of         103    if (accessible && (write_access == bus_access[0]) && match[i]) begin 
1      16    106   false part of        103    else begin                     
1      17    112   code block           112    get_mask  = mask;              
1      18    119   code block           119    assign  o_register_active     = w_active; 
1      19    120   code block           120    assign  o_register_ready      = (!w_backdoor_valid) && w_active; 
1      20    121   code block           121    assign  o_register_status     = 2'b00; 
1      21    122   code block           122    assign  o_register_read_data  = w_read_data; 
1      22    123   code block           123    assign  o_register_value      = i_bit_field_value; 
1      23    152   code block           152    assign  w_backdoor_valid  = 1'b0; 
1      24    153   code block           153    assign  w_pending_valid   = 1'b0; 
1      25    154   code block           154    assign  w_read_mask[1]    = {DATA_WIDTH{1'b0}}; 
1      26    155   code block           155    assign  w_write_mask[1]   = {DATA_WIDTH{1'b0}}; 
1      27    156   code block           156    assign  w_write_data[1]   = {DATA_WIDTH{1'b0}}; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered blocks: 8 of 14
Number of uncovered blocks: 6 of 14
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     20    code block           20     assign  w_address_match = match_address(i_address); 
1      2     21    code block           21     assign  w_access_match  = match_access(i_access); 
1      3     22    code block           22     assign  o_match         = w_address_match && w_access_match && i_additional_match; 
0      4     29    code block           24     begin                          
0      5     32    code block           32     while (value > 0) begin        
0      6     36    code block           36     clog2 = result;                
1      7     42    code block           40     begin                          
1      8     43    true part of         43     if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin 
0      9     46    false part of        43     else begin                     
1      10    56    code block           54     begin                          
0      11    57    true part of         57     if (READABLE && WRITABLE) begin 
1      12    60    false part of        57     else if (READABLE) begin       
1      13    60    true part of         60     else if (READABLE) begin       
0      14    63    false part of        60     else begin                     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.u_register.u_register_common.u_read_data_mux.g
Type name: rggen_mux.g_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     27    code block           27     assign  o_data  = i_data;      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.g_UE_FFD_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 10 of 43
Number of uncovered blocks: 33 of 43
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     51    code block           42     begin                          
1      2     70    code block           64     begin                          
0      3     89    code block           78     begin                          
0      4     90    true part of         90     if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin 
0      5     101   false part of        90     else begin                     
0      6     113   code block           113    get_next_value  = value;       
0      7     125   code block           117    begin                          
0      8     127   a case item of       126    `RGGEN_READ_CLEAR:  value[0]  = {WIDTH{1'b0}}; 
0      9     128   a case item of       126    `RGGEN_READ_SET:    value[0]  = {WIDTH{1'b1}}; 
0      10    129   a case item of       126    default:            value[0]  = current_value; 
0      11    132   code block           132    masked_data[0]  = write_mask & (~write_data); 
0      12    135   a case item of       134    `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1]; 
0      13    136   a case item of       134    `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]); 
0      14    137   a case item of       134    `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]); 
0      15    138   a case item of       134    `RGGEN_WRITE_CLEAR:     value[1]  = {WIDTH{1'b0}}; 
0      16    139   a case item of       134    `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0]; 
0      17    140   a case item of       134    `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1]; 
0      18    141   a case item of       134    `RGGEN_WRITE_SET:       value[1]  = {WIDTH{1'b1}}; 
0      19    142   a case item of       134    `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0]; 
0      20    143   a case item of       134    `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1]; 
0      21    144   a case item of       134    default:                value[1]  = current_value; 
0      22    147   code block           147    case (update)                  
0      23    148   a case item of       147    2'b01:    get_sw_next_value = value[0]; 
0      24    149   a case item of       147    2'b10:    get_sw_next_value = value[1]; 
0      25    150   a case item of       147    default:  get_sw_next_value = current_value; 
0      26    164   code block           155    begin                          
0      27    165   true part of         165    if (HW_SET_WIDTH == WIDTH) begin 
0      28    168   false part of        165    else begin                     
0      29    172   code block           172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      30    172   true part of         172    if (HW_CLEAR_WIDTH == WIDTH) begin 
0      31    175   false part of        172    else begin                     
0      32    179   code block           179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      33    179   true part of         179    if (write_enable == HW_WRITE_ENABLE_POLARITY) begin 
0      34    182   false part of        179    else begin                     
0      35    186   code block           186    get_hw_next_value = (value & (~set_clear[1])) | set_clear[0]; 
1      36    202   code block           202    assign  o_sw_read_data    = w_read_data & i_mask; 
1      37    203   code block           203    assign  o_sw_value        = w_value; 
1      38    204   code block           204    assign  o_write_trigger   = w_trigger[0]; 
1      39    205   code block           205    assign  o_read_trigger    = w_trigger[1]; 
1      40    206   code block           206    assign  o_value           = w_value & i_mask; 
1      41    207   code block           207    assign  o_value_unmasked  = w_value; 
1      42    209   code block           209    assign  w_sw_update =          
1      43    214   code block           214    assign  w_hw_update =          

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.g_UE_FFD_REG.u_bit_field.g_sw_write_done
Type name: rggen_bit_field.g_sw_write_done_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     234   code block           234    assign  w_sw_write_done = 1'b0; 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.g_UE_FFD_REG.u_bit_field.g_write_trigger
Type name: rggen_bit_field.g_write_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     253   code block           253    assign  w_trigger[0]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.g_UE_FFD_REG.u_bit_field.g_read_trigger
Type name: rggen_bit_field.g_read_trigger_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     270   code block           270    assign  w_trigger[1]  = 1'b0;  

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.g_UE_FFD_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     296   code block           296    assign  w_value = i_value;     

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.g_UE_FFD_REG.u_bit_field.g_read_data
Type name: rggen_bit_field.g_read_data_T_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered blocks: 1 of 1
Number of uncovered blocks: 0 of 1
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     305   code block           305    assign  w_read_data = i_value; 

Instance name: zmc_axi4_top.dual_port_ram_inst
Type name: dual_port_ram
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/dual_port_ram.sv
Number of covered blocks: 7 of 7
Number of uncovered blocks: 0 of 7
Number of excluded blocks: 0
Number of unreachable blocks: 0

Count  Block Line  Kind                 Origin Source Code                    
------------------------------------------------------------------------------
1      1     29    code block           28     begin                          
1      2     32    true part of         31     begin                          
1      3     44    code block           43     begin                          
1      4     47    true part of         46     begin                          
1      5     51    false part of        46     else if(RAM_rd_en)             
1      6     52    true part of         51     begin                          
1      7     57    false part of        51     begin                          

Covered+Uncovered+Excluded+UNR Expression Detail Report, Instance Based
=======================================================================

Expression coverage Table Legend
---------------------
  -      don't care
  e      event for event-or expressions
  O (odd), E (even), B (both), X (not scored),
         I (marked ignore) for parity trees
  Y (covered), N (not covered), C (constant), 
  P (one or more inputs for this bit have been padded) for vector scoring, 
  d=== , b=== shows which bit differs in vector scoring 
  rval   Resulting value of the expression for coverage purposes given
         the input values
  <-n->  Shows the n-th term composition


Instance name: zmc_axi4_top
Type name: zmc_axi4_top
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/Zilla_mem_ctrl_Top.sv
Number of covered expressions: 2 of 2
Number of uncovered expressions: 0 of 2
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 94     | ! zmc_top_rstn                                     

index: 1.1 grade: 100.00% (2/2) line: 94 source: if(!zmc_top_rstn)

! zmc_top_rstn
  <----1----->

index     | hit   | <1> 
------------------------ '!'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   


Instance name: zmc_axi4_top.axi4_slave_inst
Type name: axi4_slave
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/AXI4_slave.sv
Number of covered expressions: 196 of 207
Number of uncovered expressions: 11 of 207
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 75.00% (3/4)  | 139    | awvalid ? awaddr : wr_addr_w1                      
2.1    | 100.00% (4/4) | 140    | arvalid ? arlen : arlen_reg                        
3.1    | 100.00% (4/4) | 141    | awvalid ? awlen : awlen_reg                        
4.1    | 100.00% (2/2) | 146    | ! axi4_slave_rstn                                  
5.1    | 100.00% (2/2) | 178    | ! axi4_slave_rstn                                  
6.1    | 66.67% (2/3)  | 214    | awvalid && awready                                 
7.1    | 100.00% (2/2) | 226    | wlast == 1'b1                                      
8.1    | 33.33% (1/3)  | 228    | wvalid && wready                                   
9.1    | 100.00% (3/3) | 245    | bvalid && bready                                   
10.1   | 50.00% (1/2)  | 247    | bresp == 2'b00                                     
11.1   | 100.00% (2/2) | 342    | ! axi4_slave_rstn                                  
12.1   | 100.00% (3/3) | 365    | awvalid && (awburst == 2'd0)                       
13.1   | 100.00% (3/3) | 369    | awvalid && (awburst == 2'd1)                       
13.2   | 100.00% (2/2) | 369    | (awburst == 2'd1)                                  
14.1   | 100.00% (3/3) | 373    | awvalid && (awburst == 2'd2)                       
14.2   | 100.00% (2/2) | 373    | (awburst == 2'd2)                                  
15.1   | 100.00% (2/2) | 386    | wr_down_counter == 4'd0                            
16.1   | 100.00% (2/2) | 399    | wr_down_counter == 4'd0                            
17.1   | 100.00% (2/2) | 412    | wr_down_counter == 4'd0                            
18.1   | 100.00% (2/2) | 431    | ! axi4_slave_rstn                                  
19.1   | 100.00% (2/2) | 453    | wr_down_counter == awlen_r                         
20.1   | 100.00% (2/2) | 457    | wr_down_counter != 4'd0                            
21.1   | 100.00% (2/2) | 470    | wr_down_counter == awlen_r                         
22.1   | 100.00% (2/2) | 474    | (wr_addr_r + 32'd4) == addr_n_wr                   
23.1   | 100.00% (2/2) | 478    | wr_down_counter != 4'd0                            
24.1   | 100.00% (2/2) | 497    | ! axi4_slave_rstn                                  
25.1   | 100.00% (3/3) | 507    | awvalid && (present_state_wr == 2'd0)              
26.1   | 100.00% (4/4) | 512    | ((present_state_wr == 2'd1) || (present_state_wr == 2'd2)) || (present_state_wr == 2'd3) 
26.2   | 100.00% (2/2) | 512    | (present_state_wr == 2'd1)                         
26.3   | 100.00% (2/2) | 512    | (present_state_wr == 2'd2)                         
26.4   | 100.00% (2/2) | 512    | (present_state_wr == 2'd3)                         
27.1   | 100.00% (6/6) | 528    | (awvalid && (awburst == 2'd2)) ? ((wr_addr_w / add_wr) * add_wr) : wrap_bndry_r 
27.2   | 100.00% (2/2) | 528    | (awburst == 2'd2)                                  
28.1   | 100.00% (2/2) | 533    | ! axi4_slave_rstn                                  
29.1   | 83.33% (5/6)  | 551    | (awvalid && (awburst == 2'd2)) ? (wrap_bndry + (NO_OF_BYTES * (awlen + 1'b1))) : addr_n_r 
29.2   | 100.00% (2/2) | 551    | (awburst == 2'd2)                                  
30.1   | 100.00% (2/2) | 556    | ! axi4_slave_rstn                                  
31.1   | 100.00% (4/4) | 573    | arvalid ? araddr : rd_addr_w1                      
32.1   | 100.00% (2/2) | 578    | ! axi4_slave_rstn                                  
33.1   | 100.00% (4/4) | 593    | ((present_state_rd == 2'd1) || (present_state_rd == 2'd2)) || (present_state_rd == 2'd3) 
33.2   | 100.00% (2/2) | 593    | (present_state_rd == 2'd1)                         
33.3   | 100.00% (2/2) | 593    | (present_state_rd == 2'd2)                         
33.4   | 100.00% (2/2) | 593    | (present_state_rd == 2'd3)                         
34.1   | 100.00% (4/4) | 594    | ((present_state_wr == 2'd1) || (present_state_wr == 2'd2)) || (present_state_wr == 2'd3) 
34.2   | 100.00% (2/2) | 594    | (present_state_wr == 2'd1)                         
34.3   | 100.00% (2/2) | 594    | (present_state_wr == 2'd2)                         
34.4   | 100.00% (2/2) | 594    | (present_state_wr == 2'd3)                         
35.1   | 100.00% (2/2) | 604    | ! axi4_slave_rstn                                  
36.1   | 66.67% (2/3)  | 639    | arvalid && arready                                 
37.1   | 100.00% (2/2) | 651    | rlast == 1'b1                                      
38.1   | 66.67% (2/3)  | 653    | rvalid && rready                                   
39.1   | 50.00% (1/2)  | 655    | rresp == 2'd0                                      
40.1   | 75.00% (3/4)  | 729    | (slave_rd_en_o ^ slave_rd_en_r) ? 1'b1 : 1'b0      
41.1   | 100.00% (2/2) | 755    | ! axi4_slave_rstn                                  
42.1   | 100.00% (3/3) | 778    | arvalid && (arburst == 2'd0)                       
43.1   | 100.00% (3/3) | 782    | arvalid && (arburst == 2'd1)                       
43.2   | 100.00% (2/2) | 782    | (arburst == 2'd1)                                  
44.1   | 100.00% (3/3) | 786    | arvalid && (arburst == 2'd2)                       
44.2   | 100.00% (2/2) | 786    | (arburst == 2'd2)                                  
45.1   | 100.00% (2/2) | 799    | rd_down_counter == 4'd0                            
46.1   | 100.00% (2/2) | 812    | rd_down_counter == 4'd0                            
47.1   | 100.00% (2/2) | 825    | rd_down_counter == 4'd0                            
48.1   | 100.00% (2/2) | 844    | ! axi4_slave_rstn                                  
49.1   | 100.00% (2/2) | 866    | rd_down_counter == arlen_r                         
50.1   | 100.00% (2/2) | 870    | rd_down_counter != 4'd0                            
51.1   | 100.00% (2/2) | 882    | rd_down_counter == arlen_r                         
52.1   | 100.00% (2/2) | 886    | (rd_addr_r + 32'd4) == addr_n_rd                   
53.1   | 100.00% (2/2) | 890    | rd_down_counter != 4'd0                            
54.1   | 100.00% (2/2) | 909    | ! axi4_slave_rstn                                  
55.1   | 100.00% (3/3) | 919    | arvalid && (present_state_rd == 2'd0)              
56.1   | 100.00% (4/4) | 924    | ((present_state_rd == 2'd1) || (present_state_rd == 2'd2)) || (present_state_rd == 2'd3) 
56.2   | 100.00% (2/2) | 924    | (present_state_rd == 2'd1)                         
56.3   | 100.00% (2/2) | 924    | (present_state_rd == 2'd2)                         
56.4   | 100.00% (2/2) | 924    | (present_state_rd == 2'd3)                         
57.1   | 100.00% (6/6) | 941    | (arvalid && (arburst == 2'd2)) ? ((rd_addr_w / add_rd) * add_rd) : wrap_bndry_w 
57.2   | 100.00% (2/2) | 941    | (arburst == 2'd2)                                  
58.1   | 100.00% (2/2) | 946    | ! axi4_slave_rstn                                  
59.1   | 83.33% (5/6)  | 963    | (arvalid && (arburst == 2'd2)) ? (wrap_bndry_rd + (NO_OF_BYTES * (arlen + 1'b1))) : addr_n_w 
59.2   | 100.00% (2/2) | 963    | (arburst == 2'd2)                                  
60.1   | 100.00% (2/2) | 968    | ! axi4_slave_rstn                                  

index: 1.1 grade: 75.00% (3/4) line: 139 source: assign wr_addr_w = (awvalid) ? awaddr : wr_addr_w1 ;

awvalid ? awaddr : wr_addr_w1
<--1-->   <-2-->   <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
1.1.1     | 1     | 1    | 0   -   1   
1.1.2     | 1     | 1    | 1   1   -   
1.1.3     | 1     | 0    | 0   -   0   
1.1.4     | 0     | 0    | 1   0   -   

index: 2.1 grade: 100.00% (4/4) line: 140 source: assign arlen_r   = (arvalid) ? arlen  : arlen_reg  ;

arvalid ? arlen : arlen_reg
<--1-->   <-2->   <---3--->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
2.1.1     | 1     | 1    | 0   -   1   
2.1.2     | 1     | 1    | 1   1   -   
2.1.3     | 1     | 0    | 0   -   0   
2.1.4     | 1     | 0    | 1   0   -   

index: 3.1 grade: 100.00% (4/4) line: 141 source: assign awlen_r   = (awvalid) ? awlen  : awlen_reg  ;

awvalid ? awlen : awlen_reg
<--1-->   <-2->   <---3--->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
3.1.1     | 1     | 1    | 0   -   1   
3.1.2     | 1     | 1    | 1   1   -   
3.1.3     | 1     | 0    | 0   -   0   
3.1.4     | 1     | 0    | 1   0   -   

index: 4.1 grade: 100.00% (2/2) line: 146 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
4.1.1     | 1     | 1   
4.1.2     | 1     | 0   

index: 5.1 grade: 100.00% (2/2) line: 178 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
5.1.1     | 1     | 1   
5.1.2     | 1     | 0   

index: 6.1 grade: 66.67% (2/3) line: 214 source: if(awvalid && awready)

awvalid && awready
<--1-->    <--2-->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 0     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 1     | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 226 source: if(wlast == 1'b1)

wlast == 1'b1
<-1->    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 1     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 33.33% (1/3) line: 228 source: if(wvalid && wready)

wvalid && wready
<-1-->    <-2-->

index     | hit   | <1> <2> 
---------------------------- '&&'
8.1.1     | 0     | 0   -   
8.1.2     | 0     | -   0   
8.1.3     | 1     | 1   1   

index: 9.1 grade: 100.00% (3/3) line: 245 source: if(bvalid && bready)

bvalid && bready
<-1-->    <-2-->

index     | hit   | <1> <2> 
---------------------------- '&&'
9.1.1     | 1     | 0   -   
9.1.2     | 1     | -   0   
9.1.3     | 1     | 1   1   

index: 10.1 grade: 50.00% (1/2) line: 247 source: if(bresp == 2'b00)

bresp == 2'b00
<-1->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
10.1.1    | 1     | lhs == rhs  
10.1.2    | 0     | lhs != rhs  

index: 11.1 grade: 100.00% (2/2) line: 342 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
11.1.1    | 1     | 1   
11.1.2    | 1     | 0   

index: 12.1 grade: 100.00% (3/3) line: 365 source: if(awvalid && awburst == 2'd0)

awvalid && (awburst == 2'd0)
<--1-->     <--2-->

index     | hit   | rval | <1> <2> 
-----------------------------------
12.1.1    | 1     | 1    | 1   0   
12.1.2    | 1     | 0    | -   1   
12.1.3    | 1     | 0    | 0   -   

index: 13.1 grade: 100.00% (3/3) line: 369 source: else if(awvalid && awburst == 2'd1)

awvalid && (awburst == 2'd1)
<--1-->    <-------2------->

index     | hit   | <1> <2> 
---------------------------- '&&'
13.1.1    | 1     | 0   -   
13.1.2    | 1     | -   0   
13.1.3    | 1     | 1   1   

index: 13.2 grade: 100.00% (2/2) line: 369 source: else if(awvalid && awburst == 2'd1)

(awburst == 2'd1)
 <--3-->    <4->

index     | hit   | <3>   <4>   
-------------------------------- '=='
13.2.1    | 1     | lhs == rhs  
13.2.2    | 1     | lhs != rhs  

index: 14.1 grade: 100.00% (3/3) line: 373 source: else if(awvalid && awburst == 2'd2)

awvalid && (awburst == 2'd2)
<--1-->    <-------2------->

index     | hit   | <1> <2> 
---------------------------- '&&'
14.1.1    | 1     | 0   -   
14.1.2    | 1     | -   0   
14.1.3    | 1     | 1   1   

index: 14.2 grade: 100.00% (2/2) line: 373 source: else if(awvalid && awburst == 2'd2)

(awburst == 2'd2)
 <--3-->    <4->

index     | hit   | <3>   <4>   
-------------------------------- '=='
14.2.1    | 1     | lhs == rhs  
14.2.2    | 1     | lhs != rhs  

index: 15.1 grade: 100.00% (2/2) line: 386 source: if(wr_down_counter == 4'd0)

wr_down_counter == 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
15.1.1    | 1     | lhs == rhs  
15.1.2    | 1     | lhs != rhs  

index: 16.1 grade: 100.00% (2/2) line: 399 source: if(wr_down_counter == 4'd0)

wr_down_counter == 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
16.1.1    | 1     | lhs == rhs  
16.1.2    | 1     | lhs != rhs  

index: 17.1 grade: 100.00% (2/2) line: 412 source: if(wr_down_counter == 4'd0)

wr_down_counter == 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
17.1.1    | 1     | lhs == rhs  
17.1.2    | 1     | lhs != rhs  

index: 18.1 grade: 100.00% (2/2) line: 431 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
18.1.1    | 1     | 1   
18.1.2    | 1     | 0   

index: 19.1 grade: 100.00% (2/2) line: 453 source: if(wr_down_counter == (awlen_r))

wr_down_counter == awlen_r
<------1------>    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
19.1.1    | 1     | lhs == rhs  
19.1.2    | 1     | lhs != rhs  

index: 20.1 grade: 100.00% (2/2) line: 457 source: else if(wr_down_counter != 4'd0)

wr_down_counter != 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '!='
20.1.1    | 1     | lhs == rhs  
20.1.2    | 1     | lhs != rhs  

index: 21.1 grade: 100.00% (2/2) line: 470 source: if((wr_down_counter) == (awlen_r))

wr_down_counter == awlen_r
<------1------>    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
21.1.1    | 1     | lhs == rhs  
21.1.2    | 1     | lhs != rhs  

index: 22.1 grade: 100.00% (2/2) line: 474 source: else if((wr_addr_r + 32'd4) == addr_n_wr)

(wr_addr_r + 32'd4) == addr_n_wr
<--------1-------->    <---2--->

index     | hit   | <1>   <2>   
-------------------------------- '=='
22.1.1    | 1     | lhs == rhs  
22.1.2    | 1     | lhs != rhs  

index: 23.1 grade: 100.00% (2/2) line: 478 source: else if(wr_down_counter != 4'd0)

wr_down_counter != 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '!='
23.1.1    | 1     | lhs == rhs  
23.1.2    | 1     | lhs != rhs  

index: 24.1 grade: 100.00% (2/2) line: 497 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
24.1.1    | 1     | 1   
24.1.2    | 1     | 0   

index: 25.1 grade: 100.00% (3/3) line: 507 source: else if(awvalid && (present_state_wr == 2'd0))

awvalid && (present_state_wr == 2'd0)
<--1-->     <------2------->

index     | hit   | rval | <1> <2> 
-----------------------------------
25.1.1    | 1     | 1    | 1   0   
25.1.2    | 1     | 0    | -   1   
25.1.3    | 1     | 0    | 0   -   

index: 26.1 grade: 100.00% (4/4) line: 512 source: else if((present_state_wr == 2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3))

((present_state_wr == 2'd1) || (present_state_wr == 2'd2)) || (present_state_wr == 2'd3)
 <-----------1------------>    <-----------2------------>     <-----------3------------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
26.1.1    | 1     | 1   -   -   
26.1.2    | 1     | -   1   -   
26.1.3    | 1     | -   -   1   
26.1.4    | 1     | 0   0   0   

index: 26.2 grade: 100.00% (2/2) line: 512 source: else if((present_state_wr == 2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3))

(present_state_wr == 2'd1)
 <------4------->    <5->

index     | hit   | <4>   <5>   
-------------------------------- '=='
26.2.1    | 1     | lhs == rhs  
26.2.2    | 1     | lhs != rhs  

index: 26.3 grade: 100.00% (2/2) line: 512 source: else if((present_state_wr == 2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3))

(present_state_wr == 2'd2)
 <------6------->    <7->

index     | hit   | <6>   <7>   
-------------------------------- '=='
26.3.1    | 1     | lhs == rhs  
26.3.2    | 1     | lhs != rhs  

index: 26.4 grade: 100.00% (2/2) line: 512 source: else if((present_state_wr == 2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3))

(present_state_wr == 2'd3)
 <------8------->    <9->

index     | hit   | <8>   <9>   
-------------------------------- '=='
26.4.1    | 1     | lhs == rhs  
26.4.2    | 1     | lhs != rhs  

index: 27.1 grade: 100.00% (6/6) line: 528 source: assign wrap_bndry = (awvalid && (awburst == 2'd2))  ? ((wr_addr_w/add_wr)*add_wr) : wrap_bndry_r ;

(awvalid && (awburst == 2'd2)) ? ((wr_addr_w / add_wr) * add_wr) : wrap_bndry_r
 <--1-->    <-------2------->    <--------------3-------------->   <----4----->

index     | hit   | rval | <1> <2> <3> <4> 
-------------------------------------------
27.1.1    | 1     | 1    | 1   1   1   -   
27.1.2    | 1     | 1    | -   0   -   1   
27.1.3    | 1     | 1    | 0   -   -   1   
27.1.4    | 1     | 0    | 1   1   0   -   
27.1.5    | 1     | 0    | -   0   -   0   
27.1.6    | 1     | 0    | 0   -   -   0   

index: 27.2 grade: 100.00% (2/2) line: 528 source: assign wrap_bndry = (awvalid && (awburst == 2'd2))  ? ((wr_addr_w/add_wr)*add_wr) : wrap_bndry_r ;

(awburst == 2'd2)
 <--5-->    <6->

index     | hit   | <5>   <6>   
-------------------------------- '=='
27.2.1    | 1     | lhs == rhs  
27.2.2    | 1     | lhs != rhs  

index: 28.1 grade: 100.00% (2/2) line: 533 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
28.1.1    | 1     | 1   
28.1.2    | 1     | 0   

index: 29.1 grade: 83.33% (5/6) line: 551 source: assign addr_n_wr = (awvalid && awburst == 2'd2) ? (wrap_bndry + (NO_OF_BYTES*(awlen+1'b1))) : addr_n_r  ;

(awvalid && (awburst == 2'd2)) ? (wrap_bndry + (NO_OF_BYTES * (awlen + 1'b1))) : addr_n_r
 <--1-->    <-------2------->    <---------------------3--------------------->   <--4--->

index     | hit   | rval | <1> <2> <3> <4> 
-------------------------------------------
29.1.1    | 1     | 1    | 1   1   1   -   
29.1.2    | 1     | 1    | -   0   -   1   
29.1.3    | 1     | 1    | 0   -   -   1   
29.1.4    | 0     | 0    | 1   1   0   -   
29.1.5    | 1     | 0    | -   0   -   0   
29.1.6    | 1     | 0    | 0   -   -   0   

index: 29.2 grade: 100.00% (2/2) line: 551 source: assign addr_n_wr = (awvalid && awburst == 2'd2) ? (wrap_bndry + (NO_OF_BYTES*(awlen+1'b1))) : addr_n_r  ;

(awburst == 2'd2)
 <--5-->    <6->

index     | hit   | <5>   <6>   
-------------------------------- '=='
29.2.1    | 1     | lhs == rhs  
29.2.2    | 1     | lhs != rhs  

index: 30.1 grade: 100.00% (2/2) line: 556 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
30.1.1    | 1     | 1   
30.1.2    | 1     | 0   

index: 31.1 grade: 100.00% (4/4) line: 573 source: assign rd_addr_w = (arvalid) ? araddr : rd_addr_w1 ;

arvalid ? araddr : rd_addr_w1
<--1-->   <-2-->   <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
31.1.1    | 1     | 1    | 0   -   1   
31.1.2    | 1     | 1    | 1   1   -   
31.1.3    | 1     | 0    | 0   -   0   
31.1.4    | 1     | 0    | 1   0   -   

index: 32.1 grade: 100.00% (2/2) line: 578 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
32.1.1    | 1     | 1   
32.1.2    | 1     | 0   

index: 33.1 grade: 100.00% (4/4) line: 593 source: assign rd_addr_valid = ((present_state_rd==2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3)) ;

((present_state_rd == 2'd1) || (present_state_rd == 2'd2)) || (present_state_rd == 2'd3)
 <-----------1------------>    <-----------2------------>     <-----------3------------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
33.1.1    | 1     | 1   -   -   
33.1.2    | 1     | -   1   -   
33.1.3    | 1     | -   -   1   
33.1.4    | 1     | 0   0   0   

index: 33.2 grade: 100.00% (2/2) line: 593 source: assign rd_addr_valid = ((present_state_rd==2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3)) ;

(present_state_rd == 2'd1)
 <------4------->    <5->

index     | hit   | <4>   <5>   
-------------------------------- '=='
33.2.1    | 1     | lhs == rhs  
33.2.2    | 1     | lhs != rhs  

index: 33.3 grade: 100.00% (2/2) line: 593 source: assign rd_addr_valid = ((present_state_rd==2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3)) ;

(present_state_rd == 2'd2)
 <------6------->    <7->

index     | hit   | <6>   <7>   
-------------------------------- '=='
33.3.1    | 1     | lhs == rhs  
33.3.2    | 1     | lhs != rhs  

index: 33.4 grade: 100.00% (2/2) line: 593 source: assign rd_addr_valid = ((present_state_rd==2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3)) ;

(present_state_rd == 2'd3)
 <------8------->    <9->

index     | hit   | <8>   <9>   
-------------------------------- '=='
33.4.1    | 1     | lhs == rhs  
33.4.2    | 1     | lhs != rhs  

index: 34.1 grade: 100.00% (4/4) line: 594 source: assign wr_addr_valid = ((present_state_wr==2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3)) ;

((present_state_wr == 2'd1) || (present_state_wr == 2'd2)) || (present_state_wr == 2'd3)
 <-----------1------------>    <-----------2------------>     <-----------3------------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
34.1.1    | 1     | 1   -   -   
34.1.2    | 1     | -   1   -   
34.1.3    | 1     | -   -   1   
34.1.4    | 1     | 0   0   0   

index: 34.2 grade: 100.00% (2/2) line: 594 source: assign wr_addr_valid = ((present_state_wr==2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3)) ;

(present_state_wr == 2'd1)
 <------4------->    <5->

index     | hit   | <4>   <5>   
-------------------------------- '=='
34.2.1    | 1     | lhs == rhs  
34.2.2    | 1     | lhs != rhs  

index: 34.3 grade: 100.00% (2/2) line: 594 source: assign wr_addr_valid = ((present_state_wr==2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3)) ;

(present_state_wr == 2'd2)
 <------6------->    <7->

index     | hit   | <6>   <7>   
-------------------------------- '=='
34.3.1    | 1     | lhs == rhs  
34.3.2    | 1     | lhs != rhs  

index: 34.4 grade: 100.00% (2/2) line: 594 source: assign wr_addr_valid = ((present_state_wr==2'd1)||(present_state_wr==2'd2)||(present_state_wr==2'd3)) ;

(present_state_wr == 2'd3)
 <------8------->    <9->

index     | hit   | <8>   <9>   
-------------------------------- '=='
34.4.1    | 1     | lhs == rhs  
34.4.2    | 1     | lhs != rhs  

index: 35.1 grade: 100.00% (2/2) line: 604 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
35.1.1    | 1     | 1   
35.1.2    | 1     | 0   

index: 36.1 grade: 66.67% (2/3) line: 639 source: if(arvalid && arready)

arvalid && arready
<--1-->    <--2-->

index     | hit   | <1> <2> 
---------------------------- '&&'
36.1.1    | 0     | 0   -   
36.1.2    | 1     | -   0   
36.1.3    | 1     | 1   1   

index: 37.1 grade: 100.00% (2/2) line: 651 source: if(rlast == 1'b1)

rlast == 1'b1
<-1->    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
37.1.1    | 1     | lhs == rhs  
37.1.2    | 1     | lhs != rhs  

index: 38.1 grade: 66.67% (2/3) line: 653 source: if(rvalid && rready)

rvalid && rready
<-1-->    <-2-->

index     | hit   | <1> <2> 
---------------------------- '&&'
38.1.1    | 0     | 0   -   
38.1.2    | 1     | -   0   
38.1.3    | 1     | 1   1   

index: 39.1 grade: 50.00% (1/2) line: 655 source: if(rresp == 2'd0)

rresp == 2'd0
<-1->    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
39.1.1    | 1     | lhs == rhs  
39.1.2    | 0     | lhs != rhs  

index: 40.1 grade: 75.00% (3/4) line: 729 source: rlast            =    (slave_rd_en_o ^ slave_rd_en_r) ? 1'b1 : 1'b0;

(slave_rd_en_o ^ slave_rd_en_r) ? 1'b1 : 1'b0
 <-----1----->   <-----2----->

index     | hit   | rval | <1> <2> 
-----------------------------------
40.1.1    | 0     | 1    | 1   0   
40.1.2    | 1     | 1    | 0   1   
40.1.3    | 1     | 0    | 0   0   
40.1.4    | 1     | 0    | 1   1   

index: 41.1 grade: 100.00% (2/2) line: 755 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
41.1.1    | 1     | 1   
41.1.2    | 1     | 0   

index: 42.1 grade: 100.00% (3/3) line: 778 source: if(arvalid && arburst == 2'd0)

arvalid && (arburst == 2'd0)
<--1-->     <--2-->

index     | hit   | rval | <1> <2> 
-----------------------------------
42.1.1    | 1     | 1    | 1   0   
42.1.2    | 1     | 0    | -   1   
42.1.3    | 1     | 0    | 0   -   

index: 43.1 grade: 100.00% (3/3) line: 782 source: else if(arvalid && arburst == 2'd1)

arvalid && (arburst == 2'd1)
<--1-->    <-------2------->

index     | hit   | <1> <2> 
---------------------------- '&&'
43.1.1    | 1     | 0   -   
43.1.2    | 1     | -   0   
43.1.3    | 1     | 1   1   

index: 43.2 grade: 100.00% (2/2) line: 782 source: else if(arvalid && arburst == 2'd1)

(arburst == 2'd1)
 <--3-->    <4->

index     | hit   | <3>   <4>   
-------------------------------- '=='
43.2.1    | 1     | lhs == rhs  
43.2.2    | 1     | lhs != rhs  

index: 44.1 grade: 100.00% (3/3) line: 786 source: else if(arvalid && arburst == 2'd2)

arvalid && (arburst == 2'd2)
<--1-->    <-------2------->

index     | hit   | <1> <2> 
---------------------------- '&&'
44.1.1    | 1     | 0   -   
44.1.2    | 1     | -   0   
44.1.3    | 1     | 1   1   

index: 44.2 grade: 100.00% (2/2) line: 786 source: else if(arvalid && arburst == 2'd2)

(arburst == 2'd2)
 <--3-->    <4->

index     | hit   | <3>   <4>   
-------------------------------- '=='
44.2.1    | 1     | lhs == rhs  
44.2.2    | 1     | lhs != rhs  

index: 45.1 grade: 100.00% (2/2) line: 799 source: if(rd_down_counter == 4'd0)

rd_down_counter == 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
45.1.1    | 1     | lhs == rhs  
45.1.2    | 1     | lhs != rhs  

index: 46.1 grade: 100.00% (2/2) line: 812 source: if(rd_down_counter == 4'd0)

rd_down_counter == 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
46.1.1    | 1     | lhs == rhs  
46.1.2    | 1     | lhs != rhs  

index: 47.1 grade: 100.00% (2/2) line: 825 source: if(rd_down_counter == 4'd0)

rd_down_counter == 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
47.1.1    | 1     | lhs == rhs  
47.1.2    | 1     | lhs != rhs  

index: 48.1 grade: 100.00% (2/2) line: 844 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
48.1.1    | 1     | 1   
48.1.2    | 1     | 0   

index: 49.1 grade: 100.00% (2/2) line: 866 source: if((rd_down_counter) == (arlen_r))

rd_down_counter == arlen_r
<------1------>    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
49.1.1    | 1     | lhs == rhs  
49.1.2    | 1     | lhs != rhs  

index: 50.1 grade: 100.00% (2/2) line: 870 source: else if(rd_down_counter != 4'd0)

rd_down_counter != 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '!='
50.1.1    | 1     | lhs == rhs  
50.1.2    | 1     | lhs != rhs  

index: 51.1 grade: 100.00% (2/2) line: 882 source: if((rd_down_counter) == (arlen_r))

rd_down_counter == arlen_r
<------1------>    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
51.1.1    | 1     | lhs == rhs  
51.1.2    | 1     | lhs != rhs  

index: 52.1 grade: 100.00% (2/2) line: 886 source: else if((rd_addr_r + 32'd4) == addr_n_rd)

(rd_addr_r + 32'd4) == addr_n_rd
<--------1-------->    <---2--->

index     | hit   | <1>   <2>   
-------------------------------- '=='
52.1.1    | 1     | lhs == rhs  
52.1.2    | 1     | lhs != rhs  

index: 53.1 grade: 100.00% (2/2) line: 890 source: else if(rd_down_counter != 4'd0)

rd_down_counter != 4'd0
<------1------>    <2->

index     | hit   | <1>   <2>   
-------------------------------- '!='
53.1.1    | 1     | lhs == rhs  
53.1.2    | 1     | lhs != rhs  

index: 54.1 grade: 100.00% (2/2) line: 909 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
54.1.1    | 1     | 1   
54.1.2    | 1     | 0   

index: 55.1 grade: 100.00% (3/3) line: 919 source: else if(arvalid && (present_state_rd == 2'd0))

arvalid && (present_state_rd == 2'd0)
<--1-->     <------2------->

index     | hit   | rval | <1> <2> 
-----------------------------------
55.1.1    | 1     | 1    | 1   0   
55.1.2    | 1     | 0    | -   1   
55.1.3    | 1     | 0    | 0   -   

index: 56.1 grade: 100.00% (4/4) line: 924 source: else if((present_state_rd == 2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3))

((present_state_rd == 2'd1) || (present_state_rd == 2'd2)) || (present_state_rd == 2'd3)
 <-----------1------------>    <-----------2------------>     <-----------3------------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
56.1.1    | 1     | 1   -   -   
56.1.2    | 1     | -   1   -   
56.1.3    | 1     | -   -   1   
56.1.4    | 1     | 0   0   0   

index: 56.2 grade: 100.00% (2/2) line: 924 source: else if((present_state_rd == 2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3))

(present_state_rd == 2'd1)
 <------4------->    <5->

index     | hit   | <4>   <5>   
-------------------------------- '=='
56.2.1    | 1     | lhs == rhs  
56.2.2    | 1     | lhs != rhs  

index: 56.3 grade: 100.00% (2/2) line: 924 source: else if((present_state_rd == 2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3))

(present_state_rd == 2'd2)
 <------6------->    <7->

index     | hit   | <6>   <7>   
-------------------------------- '=='
56.3.1    | 1     | lhs == rhs  
56.3.2    | 1     | lhs != rhs  

index: 56.4 grade: 100.00% (2/2) line: 924 source: else if((present_state_rd == 2'd1)||(present_state_rd==2'd2)||(present_state_rd==2'd3))

(present_state_rd == 2'd3)
 <------8------->    <9->

index     | hit   | <8>   <9>   
-------------------------------- '=='
56.4.1    | 1     | lhs == rhs  
56.4.2    | 1     | lhs != rhs  

index: 57.1 grade: 100.00% (6/6) line: 941 source: assign wrap_bndry_rd = (arvalid && (arburst == 2'd2))  ? ((rd_addr_w/add_rd)*add_rd) : wrap_bndry_w ;

(arvalid && (arburst == 2'd2)) ? ((rd_addr_w / add_rd) * add_rd) : wrap_bndry_w
 <--1-->    <-------2------->    <--------------3-------------->   <----4----->

index     | hit   | rval | <1> <2> <3> <4> 
-------------------------------------------
57.1.1    | 1     | 1    | 1   1   1   -   
57.1.2    | 1     | 1    | -   0   -   1   
57.1.3    | 1     | 1    | 0   -   -   1   
57.1.4    | 1     | 0    | 1   1   0   -   
57.1.5    | 1     | 0    | -   0   -   0   
57.1.6    | 1     | 0    | 0   -   -   0   

index: 57.2 grade: 100.00% (2/2) line: 941 source: assign wrap_bndry_rd = (arvalid && (arburst == 2'd2))  ? ((rd_addr_w/add_rd)*add_rd) : wrap_bndry_w ;

(arburst == 2'd2)
 <--5-->    <6->

index     | hit   | <5>   <6>   
-------------------------------- '=='
57.2.1    | 1     | lhs == rhs  
57.2.2    | 1     | lhs != rhs  

index: 58.1 grade: 100.00% (2/2) line: 946 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
58.1.1    | 1     | 1   
58.1.2    | 1     | 0   

index: 59.1 grade: 83.33% (5/6) line: 963 source: assign addr_n_rd = (arvalid && arburst == 2'd2) ? (wrap_bndry_rd + (NO_OF_BYTES*(arlen+1'b1))) : addr_n_w  ;

(arvalid && (arburst == 2'd2)) ? (wrap_bndry_rd + (NO_OF_BYTES * (arlen + 1'b1))) : addr_n_w
 <--1-->    <-------2------->    <----------------------3----------------------->   <--4--->

index     | hit   | rval | <1> <2> <3> <4> 
-------------------------------------------
59.1.1    | 1     | 1    | 1   1   1   -   
59.1.2    | 1     | 1    | -   0   -   1   
59.1.3    | 1     | 1    | 0   -   -   1   
59.1.4    | 0     | 0    | 1   1   0   -   
59.1.5    | 1     | 0    | -   0   -   0   
59.1.6    | 1     | 0    | 0   -   -   0   

index: 59.2 grade: 100.00% (2/2) line: 963 source: assign addr_n_rd = (arvalid && arburst == 2'd2) ? (wrap_bndry_rd + (NO_OF_BYTES*(arlen+1'b1))) : addr_n_w  ;

(arburst == 2'd2)
 <--5-->    <6->

index     | hit   | <5>   <6>   
-------------------------------- '=='
59.2.1    | 1     | lhs == rhs  
59.2.2    | 1     | lhs != rhs  

index: 60.1 grade: 100.00% (2/2) line: 968 source: if(!axi4_slave_rstn)

! axi4_slave_rstn
  <------1------>

index     | hit   | <1> 
------------------------ '!'
60.1.1    | 1     | 1   
60.1.2    | 1     | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst
Type name: mem_ctrl
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/Memory_Controller_ECC.sv
Number of covered expressions: 69 of 102
Number of uncovered expressions: 33 of 102
Number of excluded expressions: 18
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 33.33% (1/3)  | 108    | (MEM_ctrl_wr_addr_bus >= 14'd0) && (MEM_ctrl_wr_addr_bus <= 14'd16383) 
1.2    | 50.00% (1/2)  | 108    | (MEM_ctrl_wr_addr_bus >= 14'd0)                    
1.3    | 50.00% (1/2)  | 108    | (MEM_ctrl_wr_addr_bus <= 14'd16383)                
2.1    | 100.00% (2/2) | 113    | ! MEM_ctrl_rstn                                    
3.1    | 50.00% (1/2)  | 121    | ! wr_addr_valid                                    
4.1    | 66.67% (2/3)  | 132    | wr_addr_valid ? MEM_ctrl_wr_en : 1'b0              
5.1    | 66.67% (2/3/1) | 133    | wr_addr_valid ? MEM_ctrl_wr_addr_bus : {ADDR_WIDTH{1'b0}} 
6.1    | 50.00% (2/4)  | 135    | MEM_ctrl_wr_en ? wr_resp_r : wr_resp_reg           
7.1    | 100.00% (2/2) | 140    | ! MEM_ctrl_rstn                                    
8.1    | 33.33% (1/3)  | 158    | (MEM_ctrl_rd_addr_bus >= 14'd0) && (MEM_ctrl_rd_addr_bus < 14'd16383) 
8.2    | 50.00% (1/2)  | 158    | (MEM_ctrl_rd_addr_bus >= 14'd0)                    
8.3    | 50.00% (1/2)  | 158    | (MEM_ctrl_rd_addr_bus < 14'd16383)                 
9.1    | 100.00% (2/2) | 163    | ! MEM_ctrl_rstn                                    
10.1   | 50.00% (1/2)  | 171    | ! rd_addr_valid                                    
11.1   | 66.67% (2/3)  | 182    | rd_addr_valid ? MEM_ctrl_rd_en : 1'b0              
12.1   | 66.67% (2/3/1) | 183    | rd_addr_valid ? MEM_ctrl_rd_addr_bus : {ADDR_WIDTH{1'b0}} 
13.1   | 50.00% (2/4)  | 185    | MEM_ctrl_rd_en ? rd_resp_r : rd_resp_reg           
14.1   | 100.00% (2/2) | 190    | ! MEM_ctrl_rstn                                    
15.1   | 100.00% (2/2) | 209    | ! MEM_ctrl_rstn                                    
16.1   | 66.67% (2/3/2) | 217    | (((GLOBAL_MEM_INIT == 1) || (GLOBAL_MEM_INIT == 0)) && MEM_ctrl_mem_init) && (counter < DEPTH) 
16.2   | 100.00% (1/1/1) | 217    | (GLOBAL_MEM_INIT == 1)                             
16.3   | 50.00% (1/2)  | 217    | (counter < DEPTH)                                  
17.1   | 100.00% (2/2) | 233    | ! MEM_ctrl_rstn                                    
18.1   | 100.00% (2/2) | 241    | counter == 14'd16383                               
19.1   | 66.67% (2/3)  | 258    | wr_addr_valid || rd_addr_valid                     
20.1   | 66.67% (2/3/2) | 260    | (((GLOBAL_MEM_INIT == 1) || (GLOBAL_MEM_INIT == 0)) && MEM_ctrl_mem_init) && (counter < DEPTH) 
20.2   | 100.00% (1/1/1) | 260    | (GLOBAL_MEM_INIT == 1)                             
20.3   | 50.00% (1/2)  | 260    | (counter < DEPTH)                                  
21.1   | 100.00% (3/3) | 264    | BRAM_wr_en || BRAM_rd_en                           
22.1   | 66.67% (2/3/2) | 282    | (((GLOBAL_MEM_INIT == 1) || (GLOBAL_MEM_INIT == 0)) && MEM_ctrl_mem_init) && (counter < DEPTH) 
22.2   | 100.00% (1/1/1) | 282    | (GLOBAL_MEM_INIT == 1)                             
22.3   | 50.00% (1/2)  | 282    | (counter < DEPTH)                                  
23.1   | 66.67% (2/3/2) | 319    | (((GLOBAL_MEM_INIT == 1) || (GLOBAL_MEM_INIT == 0)) && MEM_ctrl_mem_init) && (counter < DEPTH) 
23.2   | 100.00% (1/1/1) | 319    | (GLOBAL_MEM_INIT == 1)                             
23.3   | 50.00% (1/2)  | 319    | (counter < DEPTH)                                  
24.1   | 66.67% (2/3/1) | 336    | ((GLOBAL_MEM_INIT == 0) && MEM_ctrl_mem_init) && (counter < DEPTH) 
24.2   | 50.00% (1/2)  | 336    | (counter < DEPTH)                                  
25.1   | 66.67% (2/3/1) | 340    | ((GLOBAL_MEM_INIT == 1) && MEM_ctrl_mem_init) && (counter < DEPTH) 
25.2   | 100.00% (1/1/1) | 340    | (GLOBAL_MEM_INIT == 1)                             
25.3   | 50.00% (1/2)  | 340    | (counter < DEPTH)                                  
26.1   | 66.67% (2/3/1) | 346    | wr_addr_valid ? BRAM_wr_data_w : {DATA_WIDTH{1'b0}} 
27.1   | 66.67% (2/3)  | 427    | i_pwrite && (i_paddr == 10'd0)                     
28.1   | 100.00% (3/3) | 431    | i_pwrite && (i_paddr != 10'd0)                     

index: 1.1 grade: 33.33% (1/3) line: 108 source: assign wr_addr_valid = ((MEM_ctrl_wr_addr_bus >= 14'd0) && (MEM_ctrl_wr_addr_bus <= 14'd16383))   ;

(MEM_ctrl_wr_addr_bus >= 14'd0) && (MEM_ctrl_wr_addr_bus <= 14'd16383)
<--------------1-------------->    <----------------2---------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
1.1.1     | 0     | 0   -   
1.1.2     | 0     | -   0   
1.1.3     | 1     | 1   1   

index: 1.2 grade: 50.00% (1/2) line: 108 source: assign wr_addr_valid = ((MEM_ctrl_wr_addr_bus >= 14'd0) && (MEM_ctrl_wr_addr_bus <= 14'd16383))   ;

(MEM_ctrl_wr_addr_bus >= 14'd0)
 <--------3--------->    <-4->

index     | hit   | <3>   <4>   
-------------------------------- '>='
1.2.1     | 0     | lhs < rhs   
1.2.2     | 1     | lhs >= rhs  

index: 1.3 grade: 50.00% (1/2) line: 108 source: assign wr_addr_valid = ((MEM_ctrl_wr_addr_bus >= 14'd0) && (MEM_ctrl_wr_addr_bus <= 14'd16383))   ;

(MEM_ctrl_wr_addr_bus <= 14'd16383)
 <--------5--------->    <---6--->

index     | hit   | <5>   <6>   
-------------------------------- '<='
1.3.1     | 0     | lhs > rhs   
1.3.2     | 1     | lhs <= rhs  

index: 2.1 grade: 100.00% (2/2) line: 113 source: if(!MEM_ctrl_rstn)

! MEM_ctrl_rstn
  <-----1----->

index     | hit   | <1> 
------------------------ '!'
2.1.1     | 1     | 1   
2.1.2     | 1     | 0   

index: 3.1 grade: 50.00% (1/2) line: 121 source: else if(!wr_addr_valid)

! wr_addr_valid
  <-----1----->

index     | hit   | <1> 
------------------------ '!'
3.1.1     | 1     | 1   
3.1.2     | 0     | 0   

index: 4.1 grade: 66.67% (2/3) line: 132 source: assign MEM_ctrl_wr_en_w       = wr_addr_valid ? MEM_ctrl_wr_en       : 1'b0                 ;

wr_addr_valid ? MEM_ctrl_wr_en : 1'b0
<-----1----->   <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
4.1.1     | 1     | 1    | 1   1   
4.1.2     | 1     | 0    | -   0   
4.1.3     | 0     | 0    | 0   -   

index: 5.1 grade: 66.67% (2/3/1) line: 133 source: assign MEM_ctrl_wr_addr_bus_w = wr_addr_valid ? MEM_ctrl_wr_addr_bus : {ADDR_WIDTH{1'b0}}   ;

wr_addr_valid ? MEM_ctrl_wr_addr_bus : {ADDR_WIDTH{1'b0}}
<-----1----->   <--------2--------->   <-------3-------->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | CONST | 1    | 0   -   1   
5.1.2     | 1     | 1    | 1   1   -   
5.1.3     | 0     | 0    | 0   -   0   
5.1.4     | 1     | 0    | 1   0   -   

index: 6.1 grade: 50.00% (2/4) line: 135 source: assign wr_resp = MEM_ctrl_wr_en ? wr_resp_r : wr_resp_reg       ;

MEM_ctrl_wr_en ? wr_resp_r : wr_resp_reg
<-----1------>   <---2--->   <----3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
6.1.1     | 0     | 1    | 0   -   1   
6.1.2     | 0     | 1    | 1   1   -   
6.1.3     | 1     | 0    | 0   -   0   
6.1.4     | 1     | 0    | 1   0   -   

index: 7.1 grade: 100.00% (2/2) line: 140 source: if(!MEM_ctrl_rstn)

! MEM_ctrl_rstn
  <-----1----->

index     | hit   | <1> 
------------------------ '!'
7.1.1     | 1     | 1   
7.1.2     | 1     | 0   

index: 8.1 grade: 33.33% (1/3) line: 158 source: assign rd_addr_valid = ((MEM_ctrl_rd_addr_bus >= 14'd0) && (MEM_ctrl_rd_addr_bus < 14'd16383))   ;

(MEM_ctrl_rd_addr_bus >= 14'd0) && (MEM_ctrl_rd_addr_bus < 14'd16383)
<--------------1-------------->    <---------------2---------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
8.1.1     | 0     | 0   -   
8.1.2     | 0     | -   0   
8.1.3     | 1     | 1   1   

index: 8.2 grade: 50.00% (1/2) line: 158 source: assign rd_addr_valid = ((MEM_ctrl_rd_addr_bus >= 14'd0) && (MEM_ctrl_rd_addr_bus < 14'd16383))   ;

(MEM_ctrl_rd_addr_bus >= 14'd0)
 <--------3--------->    <-4->

index     | hit   | <3>   <4>   
-------------------------------- '>='
8.2.1     | 0     | lhs < rhs   
8.2.2     | 1     | lhs >= rhs  

index: 8.3 grade: 50.00% (1/2) line: 158 source: assign rd_addr_valid = ((MEM_ctrl_rd_addr_bus >= 14'd0) && (MEM_ctrl_rd_addr_bus < 14'd16383))   ;

(MEM_ctrl_rd_addr_bus < 14'd16383)
 <--------5--------->   <---6--->

index     | hit   | <5>   <6>   
-------------------------------- '<'
8.3.1     | 1     | lhs < rhs   
8.3.2     | 0     | lhs >= rhs  

index: 9.1 grade: 100.00% (2/2) line: 163 source: if(!MEM_ctrl_rstn)

! MEM_ctrl_rstn
  <-----1----->

index     | hit   | <1> 
------------------------ '!'
9.1.1     | 1     | 1   
9.1.2     | 1     | 0   

index: 10.1 grade: 50.00% (1/2) line: 171 source: else if(!rd_addr_valid)

! rd_addr_valid
  <-----1----->

index     | hit   | <1> 
------------------------ '!'
10.1.1    | 1     | 1   
10.1.2    | 0     | 0   

index: 11.1 grade: 66.67% (2/3) line: 182 source: assign MEM_ctrl_rd_en_w       = rd_addr_valid ? MEM_ctrl_rd_en       : 1'b0                 ;

rd_addr_valid ? MEM_ctrl_rd_en : 1'b0
<-----1----->   <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
11.1.1    | 1     | 1    | 1   1   
11.1.2    | 1     | 0    | -   0   
11.1.3    | 0     | 0    | 0   -   

index: 12.1 grade: 66.67% (2/3/1) line: 183 source: assign MEM_ctrl_rd_addr_bus_w = rd_addr_valid ? MEM_ctrl_rd_addr_bus : {ADDR_WIDTH{1'b0}}   ;

rd_addr_valid ? MEM_ctrl_rd_addr_bus : {ADDR_WIDTH{1'b0}}
<-----1----->   <--------2--------->   <-------3-------->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
12.1.1    | CONST | 1    | 0   -   1   
12.1.2    | 1     | 1    | 1   1   -   
12.1.3    | 0     | 0    | 0   -   0   
12.1.4    | 1     | 0    | 1   0   -   

index: 13.1 grade: 50.00% (2/4) line: 185 source: assign rd_resp = MEM_ctrl_rd_en ? rd_resp_r : rd_resp_reg       ;

MEM_ctrl_rd_en ? rd_resp_r : rd_resp_reg
<-----1------>   <---2--->   <----3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
13.1.1    | 0     | 1    | 0   -   1   
13.1.2    | 0     | 1    | 1   1   -   
13.1.3    | 1     | 0    | 0   -   0   
13.1.4    | 1     | 0    | 1   0   -   

index: 14.1 grade: 100.00% (2/2) line: 190 source: if(!MEM_ctrl_rstn)

! MEM_ctrl_rstn
  <-----1----->

index     | hit   | <1> 
------------------------ '!'
14.1.1    | 1     | 1   
14.1.2    | 1     | 0   

index: 15.1 grade: 100.00% (2/2) line: 209 source: if(!MEM_ctrl_rstn)

! MEM_ctrl_rstn
  <-----1----->

index     | hit   | <1> 
------------------------ '!'
15.1.1    | 1     | 1   
15.1.2    | 1     | 0   

index: 16.1 grade: 66.67% (2/3/2) line: 217 source: else if(((GLOBAL_MEM_INIT==1) || (GLOBAL_MEM_INIT==0))  && (MEM_ctrl_mem_init) && (counter<DEPTH))

(((GLOBAL_MEM_INIT == 1) || (GLOBAL_MEM_INIT == 0)) && MEM_ctrl_mem_init) && (counter < DEPTH)
  <---------1---------->     <------2------>           <-------4------->     <-------5------->

index     | hit   | rval | <1> <2> <4> <5> 
-------------------------------------------
16.1.1    | CONST | 1    | -   0   1   1   
16.1.2    | 1     | 1    | 1   -   1   1   
16.1.3    | 0     | 0    | -   -   -   0   
16.1.4    | 1     | 0    | -   -   0   -   
16.1.5    | CONST | 0    | 0   1   -   -   

index: 16.2 grade: 100.00% (1/1/1) line: 217 source: else if(((GLOBAL_MEM_INIT==1) || (GLOBAL_MEM_INIT==0))  && (MEM_ctrl_mem_init) && (counter<DEPTH))

(GLOBAL_MEM_INIT == 1)
 <------6------>    <7>

index     | hit   | <6>   <7>   
-------------------------------- '=='
16.2.1    | 1     | lhs == rhs  
16.2.2    | CONST | lhs != rhs  

index: 16.3 grade: 50.00% (1/2) line: 217 source: else if(((GLOBAL_MEM_INIT==1) || (GLOBAL_MEM_INIT==0))  && (MEM_ctrl_mem_init) && (counter<DEPTH))

(counter < DEPTH)
 <--8-->   <-9->

index     | hit   | <8>   <9>   
-------------------------------- '<'
16.3.1    | 1     | lhs < rhs   
16.3.2    | 0     | lhs >= rhs  

index: 17.1 grade: 100.00% (2/2) line: 233 source: if(!MEM_ctrl_rstn)

! MEM_ctrl_rstn
  <-----1----->

index     | hit   | <1> 
------------------------ '!'
17.1.1    | 1     | 1   
17.1.2    | 1     | 0   

index: 18.1 grade: 100.00% (2/2) line: 241 source: else if(counter == 14'd16383)

counter == 14'd16383
<--1-->    <---2--->

index     | hit   | <1>   <2>   
-------------------------------- '=='
18.1.1    | 1     | lhs == rhs  
18.1.2    | 1     | lhs != rhs  

index: 19.1 grade: 66.67% (2/3) line: 258 source: if(wr_addr_valid || rd_addr_valid)

wr_addr_valid || rd_addr_valid
<-----1----->    <-----2----->

index     | hit   | <1> <2> 
---------------------------- '||'
19.1.1    | 1     | 1   -   
19.1.2    | 1     | -   1   
19.1.3    | 0     | 0   0   

index: 20.1 grade: 66.67% (2/3/2) line: 260 source: if(((GLOBAL_MEM_INIT==1)||(GLOBAL_MEM_INIT==0)) && (MEM_ctrl_mem_init)  && (counter<DEPTH))

(((GLOBAL_MEM_INIT == 1) || (GLOBAL_MEM_INIT == 0)) && MEM_ctrl_mem_init) && (counter < DEPTH)
  <---------1---------->     <------2------>           <-------4------->     <-------5------->

index     | hit   | rval | <1> <2> <4> <5> 
-------------------------------------------
20.1.1    | CONST | 1    | -   0   1   1   
20.1.2    | 1     | 1    | 1   -   1   1   
20.1.3    | 0     | 0    | -   -   -   0   
20.1.4    | 1     | 0    | -   -   0   -   
20.1.5    | CONST | 0    | 0   1   -   -   

index: 20.2 grade: 100.00% (1/1/1) line: 260 source: if(((GLOBAL_MEM_INIT==1)||(GLOBAL_MEM_INIT==0)) && (MEM_ctrl_mem_init)  && (counter<DEPTH))

(GLOBAL_MEM_INIT == 1)
 <------6------>    <7>

index     | hit   | <6>   <7>   
-------------------------------- '=='
20.2.1    | 1     | lhs == rhs  
20.2.2    | CONST | lhs != rhs  

index: 20.3 grade: 50.00% (1/2) line: 260 source: if(((GLOBAL_MEM_INIT==1)||(GLOBAL_MEM_INIT==0)) && (MEM_ctrl_mem_init)  && (counter<DEPTH))

(counter < DEPTH)
 <--8-->   <-9->

index     | hit   | <8>   <9>   
-------------------------------- '<'
20.3.1    | 1     | lhs < rhs   
20.3.2    | 0     | lhs >= rhs  

index: 21.1 grade: 100.00% (3/3) line: 264 source: else if(BRAM_wr_en || BRAM_rd_en)

BRAM_wr_en || BRAM_rd_en
<---1---->    <---2---->

index     | hit   | <1> <2> 
---------------------------- '||'
21.1.1    | 1     | 1   -   
21.1.2    | 1     | -   1   
21.1.3    | 1     | 0   0   

index: 22.1 grade: 66.67% (2/3/2) line: 282 source: if(((GLOBAL_MEM_INIT==1)||(GLOBAL_MEM_INIT==0)) && (MEM_ctrl_mem_init) && (counter<DEPTH))

(((GLOBAL_MEM_INIT == 1) || (GLOBAL_MEM_INIT == 0)) && MEM_ctrl_mem_init) && (counter < DEPTH)
  <---------1---------->     <------2------>           <-------4------->     <-------5------->

index     | hit   | rval | <1> <2> <4> <5> 
-------------------------------------------
22.1.1    | CONST | 1    | -   0   1   1   
22.1.2    | 1     | 1    | 1   -   1   1   
22.1.3    | 0     | 0    | -   -   -   0   
22.1.4    | 1     | 0    | -   -   0   -   
22.1.5    | CONST | 0    | 0   1   -   -   

index: 22.2 grade: 100.00% (1/1/1) line: 282 source: if(((GLOBAL_MEM_INIT==1)||(GLOBAL_MEM_INIT==0)) && (MEM_ctrl_mem_init) && (counter<DEPTH))

(GLOBAL_MEM_INIT == 1)
 <------6------>    <7>

index     | hit   | <6>   <7>   
-------------------------------- '=='
22.2.1    | 1     | lhs == rhs  
22.2.2    | CONST | lhs != rhs  

index: 22.3 grade: 50.00% (1/2) line: 282 source: if(((GLOBAL_MEM_INIT==1)||(GLOBAL_MEM_INIT==0)) && (MEM_ctrl_mem_init) && (counter<DEPTH))

(counter < DEPTH)
 <--8-->   <-9->

index     | hit   | <8>   <9>   
-------------------------------- '<'
22.3.1    | 1     | lhs < rhs   
22.3.2    | 0     | lhs >= rhs  

index: 23.1 grade: 66.67% (2/3/2) line: 319 source: if(((GLOBAL_MEM_INIT==1)||(GLOBAL_MEM_INIT==0)) && (MEM_ctrl_mem_init) && (counter<DEPTH))

(((GLOBAL_MEM_INIT == 1) || (GLOBAL_MEM_INIT == 0)) && MEM_ctrl_mem_init) && (counter < DEPTH)
  <---------1---------->     <------2------>           <-------4------->     <-------5------->

index     | hit   | rval | <1> <2> <4> <5> 
-------------------------------------------
23.1.1    | CONST | 1    | -   0   1   1   
23.1.2    | 1     | 1    | 1   -   1   1   
23.1.3    | 0     | 0    | -   -   -   0   
23.1.4    | 1     | 0    | -   -   0   -   
23.1.5    | CONST | 0    | 0   1   -   -   

index: 23.2 grade: 100.00% (1/1/1) line: 319 source: if(((GLOBAL_MEM_INIT==1)||(GLOBAL_MEM_INIT==0)) && (MEM_ctrl_mem_init) && (counter<DEPTH))

(GLOBAL_MEM_INIT == 1)
 <------6------>    <7>

index     | hit   | <6>   <7>   
-------------------------------- '=='
23.2.1    | 1     | lhs == rhs  
23.2.2    | CONST | lhs != rhs  

index: 23.3 grade: 50.00% (1/2) line: 319 source: if(((GLOBAL_MEM_INIT==1)||(GLOBAL_MEM_INIT==0)) && (MEM_ctrl_mem_init) && (counter<DEPTH))

(counter < DEPTH)
 <--8-->   <-9->

index     | hit   | <8>   <9>   
-------------------------------- '<'
23.3.1    | 1     | lhs < rhs   
23.3.2    | 0     | lhs >= rhs  

index: 24.1 grade: 66.67% (2/3/1) line: 336 source: if((GLOBAL_MEM_INIT==0) && (MEM_ctrl_mem_init) && (counter<DEPTH))

((GLOBAL_MEM_INIT == 0) && MEM_ctrl_mem_init) && (counter < DEPTH)
  <------1------>          <-------3------->     <-------4------->

index     | hit   | rval | <1> <3> <4> 
---------------------------------------
24.1.1    | CONST | 1    | 0   1   1   
24.1.2    | 0     | 0    | -   -   0   
24.1.3    | 1     | 0    | -   0   -   
24.1.4    | 1     | 0    | 1   -   -   

index: 24.2 grade: 50.00% (1/2) line: 336 source: if((GLOBAL_MEM_INIT==0) && (MEM_ctrl_mem_init) && (counter<DEPTH))

(counter < DEPTH)
 <--5-->   <-6->

index     | hit   | <5>   <6>   
-------------------------------- '<'
24.2.1    | 1     | lhs < rhs   
24.2.2    | 0     | lhs >= rhs  

index: 25.1 grade: 66.67% (2/3/1) line: 340 source: else if((GLOBAL_MEM_INIT==1) && (MEM_ctrl_mem_init) && (counter<DEPTH))

((GLOBAL_MEM_INIT == 1) && MEM_ctrl_mem_init) && (counter < DEPTH)
 <---------1---------->    <-------2------->     <-------3------->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
25.1.1    | CONST | 0   -   -   
25.1.2    | 1     | -   0   -   
25.1.3    | 0     | -   -   0   
25.1.4    | 1     | 1   1   1   

index: 25.2 grade: 100.00% (1/1/1) line: 340 source: else if((GLOBAL_MEM_INIT==1) && (MEM_ctrl_mem_init) && (counter<DEPTH))

(GLOBAL_MEM_INIT == 1)
 <------4------>    <5>

index     | hit   | <4>   <5>   
-------------------------------- '=='
25.2.1    | 1     | lhs == rhs  
25.2.2    | CONST | lhs != rhs  

index: 25.3 grade: 50.00% (1/2) line: 340 source: else if((GLOBAL_MEM_INIT==1) && (MEM_ctrl_mem_init) && (counter<DEPTH))

(counter < DEPTH)
 <--6-->   <-7->

index     | hit   | <6>   <7>   
-------------------------------- '<'
25.3.1    | 1     | lhs < rhs   
25.3.2    | 0     | lhs >= rhs  

index: 26.1 grade: 66.67% (2/3/1) line: 346 source: BRAM_wr_data   =  wr_addr_valid ? BRAM_wr_data_w   : {DATA_WIDTH{1'b0}}       ;

wr_addr_valid ? BRAM_wr_data_w : {DATA_WIDTH{1'b0}}
<-----1----->   <-----2------>   <-------3-------->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
26.1.1    | CONST | 1    | 0   -   1   
26.1.2    | 1     | 1    | 1   1   -   
26.1.3    | 0     | 0    | 0   -   0   
26.1.4    | 1     | 0    | 1   0   -   

index: 27.1 grade: 66.67% (2/3) line: 427 source: if(i_pwrite && (i_paddr==10'd0))

i_pwrite && (i_paddr == 10'd0)
<--1--->     <--2-->

index     | hit   | rval | <1> <2> 
-----------------------------------
27.1.1    | 0     | 1    | 1   0   
27.1.2    | 1     | 0    | -   1   
27.1.3    | 1     | 0    | 0   -   

index: 28.1 grade: 100.00% (3/3) line: 431 source: else if(i_pwrite && (i_paddr!=10'd0))

i_pwrite && (i_paddr != 10'd0)
<--1--->     <--2-->

index     | hit   | rval | <1> <2> 
-----------------------------------
28.1.1    | 1     | 1    | 1   1   
28.1.2    | 1     | 0    | -   0   
28.1.3    | 1     | 0    | 0   -   


Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_encoding_inst.parity_calculator_inst
Type name: parity_calculator
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/parity_calculator_wr.sv
Number of covered expressions: 188 of 195
Number of uncovered expressions: 7 of 195
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (1/2)  | 29     | wr_strobe == 4'b0001                               
2.1    | 50.00% (1/2)  | 34     | wr_strobe == 4'b0010                               
3.1    | 50.00% (1/2)  | 39     | wr_strobe == 4'b0100                               
4.1    | 50.00% (1/2)  | 44     | wr_strobe == 4'b1000                               
5.1    | 50.00% (1/2)  | 50     | wr_strobe == 4'b0011                               
6.1    | 50.00% (1/2)  | 55     | wr_strobe == 4'b0110                               
7.1    | 50.00% (1/2)  | 60     | wr_strobe == 4'b1100                               
8.1    | 100.00% (2/2) | 65     | wr_strobe == 4'b1111                               
9.1    | 100.00% (3/3) | 89     | wr_en_i && str_flag                                
10.1   | 100.00% (2/2) | 92     | ECC_en[0] == 1'b1                                  
11.1   | 100.00% (35/35) | 108    | ((((((((((((((((data_in_r[0] ^ data_in_r[1]) ^ data_in_r[3]) ^ data_in_r[4]) ^ data_in_r[6]) ^ data_in_r[8]) ^ data_in_r[10]) ^ data_in_r[11]) ^ data_in_r[13]) ^ data_in_r[15]) ^ data_in_r[17]) ^ data_in_r[19]) ^ data_in_r[21]) ^ data_in_r[23]) ^ data_in_r[25]) ^ data_in_r[26]) ^ data_in_r[28]) ^ data_in_r[30] 
12.1   | 100.00% (35/35) | 121    | ((((((((((((((((data_in_r[0] ^ data_in_r[2]) ^ data_in_r[3]) ^ data_in_r[5]) ^ data_in_r[6]) ^ data_in_r[9]) ^ data_in_r[10]) ^ data_in_r[12]) ^ data_in_r[13]) ^ data_in_r[16]) ^ data_in_r[17]) ^ data_in_r[20]) ^ data_in_r[21]) ^ data_in_r[24]) ^ data_in_r[25]) ^ data_in_r[27]) ^ data_in_r[28]) ^ data_in_r[31] 
13.1   | 100.00% (35/35) | 134    | ((((((((((((((((data_in_r[1] ^ data_in_r[2]) ^ data_in_r[3]) ^ data_in_r[7]) ^ data_in_r[8]) ^ data_in_r[9]) ^ data_in_r[10]) ^ data_in_r[14]) ^ data_in_r[15]) ^ data_in_r[16]) ^ data_in_r[17]) ^ data_in_r[22]) ^ data_in_r[23]) ^ data_in_r[24]) ^ data_in_r[25]) ^ data_in_r[29]) ^ data_in_r[30]) ^ data_in_r[31] 
14.1   | 100.00% (29/29) | 145    | (((((((((((((data_in_r[4] ^ data_in_r[19]) ^ data_in_r[5]) ^ data_in_r[20]) ^ data_in_r[6]) ^ data_in_r[21]) ^ data_in_r[7]) ^ data_in_r[22]) ^ data_in_r[8]) ^ data_in_r[23]) ^ data_in_r[9]) ^ data_in_r[24]) ^ data_in_r[10]) ^ data_in_r[25]) ^ data_in_r[18] 
15.1   | 100.00% (29/29) | 157    | (((((((((((((data_in_r[11] ^ data_in_r[19]) ^ data_in_r[12]) ^ data_in_r[20]) ^ data_in_r[13]) ^ data_in_r[21]) ^ data_in_r[14]) ^ data_in_r[22]) ^ data_in_r[15]) ^ data_in_r[23]) ^ data_in_r[16]) ^ data_in_r[24]) ^ data_in_r[17]) ^ data_in_r[25]) ^ data_in_r[18] 
16.1   | 100.00% (11/11) | 165    | ((((data_in_r[26] ^ data_in_r[29]) ^ data_in_r[27]) ^ data_in_r[30]) ^ data_in_r[28]) ^ data_in_r[31] 

index: 1.1 grade: 50.00% (1/2) line: 29 source: if(wr_strobe == 4'b0001)        // BYTE

wr_strobe == 4'b0001
<---1--->    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
1.1.1     | 0     | lhs == rhs  
1.1.2     | 1     | lhs != rhs  

index: 2.1 grade: 50.00% (1/2) line: 34 source: else if(wr_strobe == 4'b0010)    // BYTE

wr_strobe == 4'b0010
<---1--->    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
2.1.1     | 0     | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 50.00% (1/2) line: 39 source: else if(wr_strobe == 4'b0100)    // BYTE

wr_strobe == 4'b0100
<---1--->    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 0     | lhs == rhs  
3.1.2     | 1     | lhs != rhs  

index: 4.1 grade: 50.00% (1/2) line: 44 source: else if(wr_strobe == 4'b1000)    // BYTE

wr_strobe == 4'b1000
<---1--->    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
4.1.1     | 0     | lhs == rhs  
4.1.2     | 1     | lhs != rhs  

index: 5.1 grade: 50.00% (1/2) line: 50 source: else if(wr_strobe == 4'b0011)   // HALF WORD

wr_strobe == 4'b0011
<---1--->    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
5.1.1     | 0     | lhs == rhs  
5.1.2     | 1     | lhs != rhs  

index: 6.1 grade: 50.00% (1/2) line: 55 source: else if (wr_strobe == 4'b0110)  // HALF WORD

wr_strobe == 4'b0110
<---1--->    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
6.1.1     | 0     | lhs == rhs  
6.1.2     | 1     | lhs != rhs  

index: 7.1 grade: 50.00% (1/2) line: 60 source: else if (wr_strobe == 4'b1100) // HALF WORD

wr_strobe == 4'b1100
<---1--->    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 0     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 100.00% (2/2) line: 65 source: else if(wr_strobe == 4'b1111)   // FULL WORD

wr_strobe == 4'b1111
<---1--->    <--2-->

index     | hit   | <1>   <2>   
-------------------------------- '=='
8.1.1     | 1     | lhs == rhs  
8.1.2     | 1     | lhs != rhs  

index: 9.1 grade: 100.00% (3/3) line: 89 source: if(wr_en_i && str_flag)

wr_en_i && str_flag
<--1-->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
9.1.1     | 1     | 0   -   
9.1.2     | 1     | -   0   
9.1.3     | 1     | 1   1   

index: 10.1 grade: 100.00% (2/2) line: 92 source: if((ECC_en[0]==1'b1))

ECC_en[0] == 1'b1
<---1--->    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
10.1.1    | 1     | lhs == rhs  
10.1.2    | 1     | lhs != rhs  

index: 11.1 grade: 100.00% (35/35) line: 108 source: data_in_r[28] ^ data_in_r[30]

((((((((((((((((data_in_r[0] ^ data_in_r[1]) ^ data_in_r[3]) ^ data_in_r[4]) ^ data_in_r[6]) ^ data_in_r[8]) ^ data_in_r[10]) ^ data_in_r[11]) ^ data_in_r[13]) ^ data_in_r[15]) ^ data_in_r[17]) ^ data_in_r[19]) ^ data_in_r[21]) ^ data_in_r[23]) ^ data_in_r[25]) ^ data_in_r[26]) ^ data_in_r[28]) ^ data_in_r[30]
                <----1----->   <----2----->    <----3----->    <----4----->    <----5----->    <----6----->    <-----7----->    <-----8----->    <-----9----->    <----10----->    <----11----->    <----12----->    <----13----->    <----14----->    <----15----->    <----16----->    <----17----->    <----18----->

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> <17> <18> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B    B....B
   B.......B       B.......B       B........B         B.........B         B
       B...............B               B...................B              '
               B.................................B                        '
                                B.........................................'
                                                     B

index: 12.1 grade: 100.00% (35/35) line: 121 source: data_in_r[28] ^ data_in_r[31]

((((((((((((((((data_in_r[0] ^ data_in_r[2]) ^ data_in_r[3]) ^ data_in_r[5]) ^ data_in_r[6]) ^ data_in_r[9]) ^ data_in_r[10]) ^ data_in_r[12]) ^ data_in_r[13]) ^ data_in_r[16]) ^ data_in_r[17]) ^ data_in_r[20]) ^ data_in_r[21]) ^ data_in_r[24]) ^ data_in_r[25]) ^ data_in_r[27]) ^ data_in_r[28]) ^ data_in_r[31]
                <----1----->   <----2----->    <----3----->    <----4----->    <----5----->    <----6----->    <-----7----->    <-----8----->    <-----9----->    <----10----->    <----11----->    <----12----->    <----13----->    <----14----->    <----15----->    <----16----->    <----17----->    <----18----->

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> <17> <18> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B    B....B
   B.......B       B.......B       B........B         B.........B         B
       B...............B               B...................B              '
               B.................................B                        '
                                B.........................................'
                                                     B

index: 13.1 grade: 100.00% (35/35) line: 134 source: data_in_r[30] ^ data_in_r[31]

((((((((((((((((data_in_r[1] ^ data_in_r[2]) ^ data_in_r[3]) ^ data_in_r[7]) ^ data_in_r[8]) ^ data_in_r[9]) ^ data_in_r[10]) ^ data_in_r[14]) ^ data_in_r[15]) ^ data_in_r[16]) ^ data_in_r[17]) ^ data_in_r[22]) ^ data_in_r[23]) ^ data_in_r[24]) ^ data_in_r[25]) ^ data_in_r[29]) ^ data_in_r[30]) ^ data_in_r[31]
                <----1----->   <----2----->    <----3----->    <----4----->    <----5----->    <----6----->    <-----7----->    <-----8----->    <-----9----->    <----10----->    <----11----->    <----12----->    <----13----->    <----14----->    <----15----->    <----16----->    <----17----->    <----18----->

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> <17> <18> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B    B....B
   B.......B       B.......B       B........B         B.........B         B
       B...............B               B...................B              '
               B.................................B                        '
                                B.........................................'
                                                     B

index: 14.1 grade: 100.00% (29/29) line: 145 source: data_in_r[10] ^ data_in_r[25]  ^

(((((((((((((data_in_r[4] ^ data_in_r[19]) ^ data_in_r[5]) ^ data_in_r[20]) ^ data_in_r[6]) ^ data_in_r[21]) ^ data_in_r[7]) ^ data_in_r[22]) ^ data_in_r[8]) ^ data_in_r[23]) ^ data_in_r[9]) ^ data_in_r[24]) ^ data_in_r[10]) ^ data_in_r[25]) ^ data_in_r[18]
             <----1----->   <-----2----->    <----3----->    <-----4----->    <----5----->    <-----6----->    <----7----->    <-----8----->    <----9----->    <----10----->    <----11---->    <----12----->    <----13----->    <----14----->    <----15----->

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B
   B.......B       B.......B       B........B         B.......'
       B...............B               B..................B
               B................................B
                               B

index: 15.1 grade: 100.00% (29/29) line: 157 source: data_in_r[17]  ^ data_in_r[25]  ^

(((((((((((((data_in_r[11] ^ data_in_r[19]) ^ data_in_r[12]) ^ data_in_r[20]) ^ data_in_r[13]) ^ data_in_r[21]) ^ data_in_r[14]) ^ data_in_r[22]) ^ data_in_r[15]) ^ data_in_r[23]) ^ data_in_r[16]) ^ data_in_r[24]) ^ data_in_r[17]) ^ data_in_r[25]) ^ data_in_r[18]
             <-----1----->   <-----2----->    <-----3----->    <-----4----->    <-----5----->    <-----6----->    <-----7----->    <-----8----->    <-----9----->    <----10----->    <----11----->    <----12----->    <----13----->    <----14----->    <----15----->

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B
   B.......B       B.......B       B........B         B.......'
       B...............B               B..................B
               B................................B
                               B

index: 16.1 grade: 100.00% (11/11) line: 165 source: data_in_r[28]  ^ data_in_r[31]

((((data_in_r[26] ^ data_in_r[29]) ^ data_in_r[27]) ^ data_in_r[30]) ^ data_in_r[28]) ^ data_in_r[31]
    <-----1----->   <-----2----->    <-----3----->    <-----4----->    <-----5----->    <-----6----->

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> 
 B...B   B...B   B...B
   B.......B       B
       B...........'
             B


Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_encoding_inst.data_enc_inst
Type name: data_enc
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/data_encoding.sv
Number of covered expressions: 75 of 75
Number of uncovered expressions: 0 of 75
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (75/75) | 57     | ((((((((((((((((((((((((((((((((((((data_in[0] ^ data_in[16]) ^ data_in[1]) ^ data_in[17]) ^ data_in[2]) ^ data_in[18]) ^ data_in[3]) ^ data_in[19]) ^ data_in[4]) ^ data_in[20]) ^ data_in[5]) ^ data_in[21]) ^ data_in[6]) ^ data_in[22]) ^ data_in[7]) ^ data_in[23]) ^ data_in[8]) ^ data_in[24]) ^ data_in[9]) ^ data_in[25]) ^ data_in[10]) ^ data_in[26]) ^ data_in[11]) ^ data_in[27]) ^ data_in[12]) ^ data_in[28]) ^ data_in[13]) ^ data_in[29]) ^ data_in[14]) ^ data_in[30]) ^ data_in[15]) ^ data_in[31]) ^ parity_bits_in[1]) ^ parity_bits_in[2]) ^ parity_bits_in[3]) ^ parity_bits_in[4]) ^ parity_bits_in[5]) ^ parity_bits_in[6] 

index: 1.1 grade: 100.00% (75/75) line: 57 source: parity_bits_in[5] ^ parity_bits_in[6]

((((((((((((((((((((((((((((((((((((data_in[0] ^ data_in[16]) ^ data_in[1]) ^ data_in[17]) ^ data_in[2]) ^ data_in[18]) ^ data_in[3]) ^ data_in[19]) ^ data_in[4]) ^ data_in[20]) ^ data_in[5]) ^ data_in[21]) ^ data_in[6]) ^ data_in[22]) ^ data_in[7]) ^ data_in[23]) ^ data_in[8]) ^ data_in[24]) ^ data_in[9]) ^ data_in[25]) ^ data_in[10]) ^ data_in[26]) ^ data_in[11]) ^ data_in[27]) ^ data_in[12]) ^ data_in[28]) ^ data_in[13]) ^ data_in[29]) ^ data_in[14]) ^ data_in[30]) ^ data_in[15]) ^ data_in[31]) ^ parity_bits_in[1]) ^ parity_bits_in[2]) ^ parity_bits_in[3]) ^ parity_bits_in[4]) ^ parity_bits_in[5]) ^ parity_bits_in[6]
                                    <---1---->   <----2---->    <---3---->    <----4---->    <---5---->    <----6---->    <---7---->    <----8---->    <---9---->    <---10---->    <---11--->    <---12---->    <---13--->    <---14---->    <---15--->    <---16---->    <---17--->    <---18---->    <---19--->    <---20---->    <---21---->    <---22---->    <---23---->    <---24---->    <---25---->    <---26---->    <---27---->    <---28---->    <---29---->    <---30---->    <---31---->    <---32---->    <------33------->    <------34------->    <------35------->    <------36------->    <------37------->    <------38------->

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> <17> <18> <19> <20> <21> <22> <23> <24> <25> <26> <27> <28> <29> <30> <31> <32> <33> <34> <35> <36> <37> <38> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B
   B.......B       B.......B       B........B         B.........B         B.........B         B.........B         B.........B         B.........B         B.........B         B
       B...............B               B...................B                   B...................B                   B...................B                   B..............'
               B.................................B                                       B.......................................B                                    B
                                B............................................................................B                                                        '
                                                                      B...............................................................................................'
                                                                                                                      B


Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst.parity_calc_rd_inst
Type name: parity_calc_rd
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/parity_calculator_rd.sv
Number of covered expressions: 268 of 269
Number of uncovered expressions: 1 of 269
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 28     | ! parity_calc_rd_rstn                              
2.1    | 100.00% (2/2) | 55     | ! parity_calc_rd_rstn                              
3.1    | 100.00% (2/2) | 68     | ECC_en[0] == 1'b1                                  
4.1    | 100.00% (37/37) | 80     | (((((((((((((((((rd_data_i[0] ^ rd_data_i[1]) ^ rd_data_i[3]) ^ rd_data_i[4]) ^ rd_data_i[6]) ^ rd_data_i[8]) ^ rd_data_i[10]) ^ rd_data_i[11]) ^ rd_data_i[13]) ^ rd_data_i[15]) ^ rd_data_i[17]) ^ rd_data_i[19]) ^ rd_data_i[21]) ^ rd_data_i[23]) ^ rd_data_i[25]) ^ rd_data_i[26]) ^ rd_data_i[28]) ^ rd_data_i[30]) ^ parity_in_rd[1] 
5.1    | 100.00% (37/37) | 94     | (((((((((((((((((rd_data_i[0] ^ rd_data_i[2]) ^ rd_data_i[3]) ^ rd_data_i[5]) ^ rd_data_i[6]) ^ rd_data_i[9]) ^ rd_data_i[10]) ^ rd_data_i[12]) ^ rd_data_i[13]) ^ rd_data_i[16]) ^ rd_data_i[17]) ^ rd_data_i[20]) ^ rd_data_i[21]) ^ rd_data_i[24]) ^ rd_data_i[25]) ^ rd_data_i[27]) ^ rd_data_i[28]) ^ rd_data_i[31]) ^ parity_in_rd[2] 
6.1    | 100.00% (37/37) | 108    | (((((((((((((((((rd_data_i[1] ^ rd_data_i[2]) ^ rd_data_i[3]) ^ rd_data_i[7]) ^ rd_data_i[8]) ^ rd_data_i[9]) ^ rd_data_i[10]) ^ rd_data_i[14]) ^ rd_data_i[15]) ^ rd_data_i[16]) ^ rd_data_i[17]) ^ rd_data_i[22]) ^ rd_data_i[23]) ^ rd_data_i[24]) ^ rd_data_i[25]) ^ rd_data_i[29]) ^ rd_data_i[30]) ^ rd_data_i[31]) ^ parity_in_rd[3] 
7.1    | 100.00% (31/31) | 121    | ((((((((((((((rd_data_i[4] ^ rd_data_i[19]) ^ rd_data_i[5]) ^ rd_data_i[20]) ^ rd_data_i[6]) ^ rd_data_i[21]) ^ rd_data_i[7]) ^ rd_data_i[22]) ^ rd_data_i[8]) ^ rd_data_i[23]) ^ rd_data_i[9]) ^ rd_data_i[24]) ^ rd_data_i[10]) ^ rd_data_i[25]) ^ rd_data_i[18]) ^ parity_in_rd[4] 
8.1    | 100.00% (31/31) | 133    | ((((((((((((((rd_data_i[11] ^ rd_data_i[19]) ^ rd_data_i[12]) ^ rd_data_i[20]) ^ rd_data_i[13]) ^ rd_data_i[21]) ^ rd_data_i[14]) ^ rd_data_i[22]) ^ rd_data_i[15]) ^ rd_data_i[23]) ^ rd_data_i[16]) ^ rd_data_i[24]) ^ rd_data_i[17]) ^ rd_data_i[25]) ^ rd_data_i[18]) ^ parity_in_rd[5] 
9.1    | 92.31% (12/13) | 140    | (((((rd_data_i[26] ^ rd_data_i[29]) ^ rd_data_i[27]) ^ rd_data_i[30]) ^ rd_data_i[28]) ^ rd_data_i[31]) ^ parity_in_rd[6] 
10.1   | 100.00% (77/77) | 164    | (((((((((((((((((((((((((((((((((((((rd_data_i[0] ^ rd_data_i[16]) ^ rd_data_i[1]) ^ rd_data_i[17]) ^ rd_data_i[2]) ^ rd_data_i[18]) ^ rd_data_i[3]) ^ rd_data_i[19]) ^ rd_data_i[4]) ^ rd_data_i[20]) ^ rd_data_i[5]) ^ rd_data_i[21]) ^ rd_data_i[6]) ^ rd_data_i[22]) ^ rd_data_i[7]) ^ rd_data_i[23]) ^ rd_data_i[8]) ^ rd_data_i[24]) ^ rd_data_i[9]) ^ rd_data_i[25]) ^ rd_data_i[10]) ^ rd_data_i[26]) ^ rd_data_i[11]) ^ rd_data_i[27]) ^ rd_data_i[12]) ^ rd_data_i[28]) ^ rd_data_i[13]) ^ rd_data_i[29]) ^ rd_data_i[14]) ^ rd_data_i[30]) ^ rd_data_i[15]) ^ rd_data_i[31]) ^ parity_in_rd[0]) ^ parity_in_rd[4]) ^ parity_in_rd[1]) ^ parity_in_rd[5]) ^ parity_in_rd[2]) ^ parity_in_rd[6]) ^ parity_in_rd[3] 

index: 1.1 grade: 100.00% (2/2) line: 28 source: if(!parity_calc_rd_rstn)

! parity_calc_rd_rstn
  <--------1-------->

index     | hit   | <1> 
------------------------ '!'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 100.00% (2/2) line: 55 source: if(!parity_calc_rd_rstn)

! parity_calc_rd_rstn
  <--------1-------->

index     | hit   | <1> 
------------------------ '!'
2.1.1     | 1     | 1   
2.1.2     | 1     | 0   

index: 3.1 grade: 100.00% (2/2) line: 68 source: if((ECC_en[0]==1'b1))   //  IF ECC ENABLE IS SET

ECC_en[0] == 1'b1
<---1--->    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 1     | lhs == rhs  
3.1.2     | 1     | lhs != rhs  

index: 4.1 grade: 100.00% (37/37) line: 80 source: rd_data_i[28] ^ rd_data_i[30] ^

(((((((((((((((((rd_data_i[0] ^ rd_data_i[1]) ^ rd_data_i[3]) ^ rd_data_i[4]) ^ rd_data_i[6]) ^ rd_data_i[8]) ^ rd_data_i[10]) ^ rd_data_i[11]) ^ rd_data_i[13]) ^ rd_data_i[15]) ^ rd_data_i[17]) ^ rd_data_i[19]) ^ rd_data_i[21]) ^ rd_data_i[23]) ^ rd_data_i[25]) ^ rd_data_i[26]) ^ rd_data_i[28]) ^ rd_data_i[30]) ^ parity_in_rd[1]
                 <----1----->   <----2----->    <----3----->    <----4----->    <----5----->    <----6----->    <-----7----->    <-----8----->    <-----9----->    <----10----->    <----11----->    <----12----->    <----13----->    <----14----->    <----15----->    <----16----->    <----17----->    <----18----->    <-----19------>

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> <17> <18> <19> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B    B....B    B
   B.......B       B.......B       B........B         B.........B         B.......'
       B...............B               B...................B                  B
               B.................................B                            '
                                B.............................................'
                                                       B

index: 5.1 grade: 100.00% (37/37) line: 94 source: rd_data_i[28] ^ rd_data_i[31] ^

(((((((((((((((((rd_data_i[0] ^ rd_data_i[2]) ^ rd_data_i[3]) ^ rd_data_i[5]) ^ rd_data_i[6]) ^ rd_data_i[9]) ^ rd_data_i[10]) ^ rd_data_i[12]) ^ rd_data_i[13]) ^ rd_data_i[16]) ^ rd_data_i[17]) ^ rd_data_i[20]) ^ rd_data_i[21]) ^ rd_data_i[24]) ^ rd_data_i[25]) ^ rd_data_i[27]) ^ rd_data_i[28]) ^ rd_data_i[31]) ^ parity_in_rd[2]
                 <----1----->   <----2----->    <----3----->    <----4----->    <----5----->    <----6----->    <-----7----->    <-----8----->    <-----9----->    <----10----->    <----11----->    <----12----->    <----13----->    <----14----->    <----15----->    <----16----->    <----17----->    <----18----->    <-----19------>

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> <17> <18> <19> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B    B....B    B
   B.......B       B.......B       B........B         B.........B         B.......'
       B...............B               B...................B                  B
               B.................................B                            '
                                B.............................................'
                                                       B

index: 6.1 grade: 100.00% (37/37) line: 108 source: rd_data_i[30] ^ rd_data_i[31] ^

(((((((((((((((((rd_data_i[1] ^ rd_data_i[2]) ^ rd_data_i[3]) ^ rd_data_i[7]) ^ rd_data_i[8]) ^ rd_data_i[9]) ^ rd_data_i[10]) ^ rd_data_i[14]) ^ rd_data_i[15]) ^ rd_data_i[16]) ^ rd_data_i[17]) ^ rd_data_i[22]) ^ rd_data_i[23]) ^ rd_data_i[24]) ^ rd_data_i[25]) ^ rd_data_i[29]) ^ rd_data_i[30]) ^ rd_data_i[31]) ^ parity_in_rd[3]
                 <----1----->   <----2----->    <----3----->    <----4----->    <----5----->    <----6----->    <-----7----->    <-----8----->    <-----9----->    <----10----->    <----11----->    <----12----->    <----13----->    <----14----->    <----15----->    <----16----->    <----17----->    <----18----->    <-----19------>

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> <17> <18> <19> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B    B....B    B
   B.......B       B.......B       B........B         B.........B         B.......'
       B...............B               B...................B                  B
               B.................................B                            '
                                B.............................................'
                                                       B

index: 7.1 grade: 100.00% (31/31) line: 121 source: rd_data_i[18] ^ parity_in_rd[4]

((((((((((((((rd_data_i[4] ^ rd_data_i[19]) ^ rd_data_i[5]) ^ rd_data_i[20]) ^ rd_data_i[6]) ^ rd_data_i[21]) ^ rd_data_i[7]) ^ rd_data_i[22]) ^ rd_data_i[8]) ^ rd_data_i[23]) ^ rd_data_i[9]) ^ rd_data_i[24]) ^ rd_data_i[10]) ^ rd_data_i[25]) ^ rd_data_i[18]) ^ parity_in_rd[4]
              <----1----->   <-----2----->    <----3----->    <-----4----->    <----5----->    <-----6----->    <----7----->    <-----8----->    <----9----->    <----10----->    <----11---->    <----12----->    <----13----->    <----14----->    <----15----->    <-----16------>

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B
   B.......B       B.......B       B........B         B.........B
       B...............B               B...................B
               B.................................B
                                B

index: 8.1 grade: 100.00% (31/31) line: 133 source: rd_data_i[18]  ^ parity_in_rd[5]

((((((((((((((rd_data_i[11] ^ rd_data_i[19]) ^ rd_data_i[12]) ^ rd_data_i[20]) ^ rd_data_i[13]) ^ rd_data_i[21]) ^ rd_data_i[14]) ^ rd_data_i[22]) ^ rd_data_i[15]) ^ rd_data_i[23]) ^ rd_data_i[16]) ^ rd_data_i[24]) ^ rd_data_i[17]) ^ rd_data_i[25]) ^ rd_data_i[18]) ^ parity_in_rd[5]
              <-----1----->   <-----2----->    <-----3----->    <-----4----->    <-----5----->    <-----6----->    <-----7----->    <-----8----->    <-----9----->    <----10----->    <----11----->    <----12----->    <----13----->    <----14----->    <----15----->    <-----16------>

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B
   B.......B       B.......B       B........B         B.........B
       B...............B               B...................B
               B.................................B
                                B

index: 9.1 grade: 92.31% (12/13) line: 140 source: rd_data_i[28]  ^ rd_data_i[31]  ^

(((((rd_data_i[26] ^ rd_data_i[29]) ^ rd_data_i[27]) ^ rd_data_i[30]) ^ rd_data_i[28]) ^ rd_data_i[31]) ^ parity_in_rd[6]
     <-----1----->   <-----2----->    <-----3----->    <-----4----->    <-----5----->    <-----6----->    <------7------>

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> 
 B...B   B...B   B...B   B
   B.......B       B.....'
       B..............B
              E

index: 10.1 grade: 100.00% (77/77) line: 164 source: parity_in_rd[2]    ^ parity_in_rd[6]   ^

(((((((((((((((((((((((((((((((((((((rd_data_i[0] ^ rd_data_i[16]) ^ rd_data_i[1]) ^ rd_data_i[17]) ^ rd_data_i[2]) ^ rd_data_i[18]) ^ rd_data_i[3]) ^ rd_data_i[19]) ^ rd_data_i[4]) ^ rd_data_i[20]) ^ rd_data_i[5]) ^ rd_data_i[21]) ^ rd_data_i[6]) ^ rd_data_i[22]) ^ rd_data_i[7]) ^ rd_data_i[23]) ^ rd_data_i[8]) ^ rd_data_i[24]) ^ rd_data_i[9]) ^ rd_data_i[25]) ^ rd_data_i[10]) ^ rd_data_i[26]) ^ rd_data_i[11]) ^ rd_data_i[27]) ^ rd_data_i[12]) ^ rd_data_i[28]) ^ rd_data_i[13]) ^ rd_data_i[29]) ^ rd_data_i[14]) ^ rd_data_i[30]) ^ rd_data_i[15]) ^ rd_data_i[31]) ^ parity_in_rd[0]) ^ parity_in_rd[4]) ^ parity_in_rd[1]) ^ parity_in_rd[5]) ^ parity_in_rd[2]) ^ parity_in_rd[6]) ^ parity_in_rd[3]
                                     <----1----->   <-----2----->    <----3----->    <-----4----->    <----5----->    <-----6----->    <----7----->    <-----8----->    <----9----->    <----10----->    <----11---->    <----12----->    <----13---->    <----14----->    <----15---->    <----16----->    <----17---->    <----18----->    <----19---->    <----20----->    <----21----->    <----22----->    <----23----->    <----24----->    <----25----->    <----26----->    <----27----->    <----28----->    <----29----->    <----30----->    <----31----->    <----32----->    <-----33------>    <-----34------>    <-----35------>    <-----36------>    <-----37------>    <-----38------>    <-----39------>

Parity Tree for operator '^'
============================

<1> <2> <3> <4> <5> <6> <7> <8> <9> <10> <11> <12> <13> <14> <15> <16> <17> <18> <19> <20> <21> <22> <23> <24> <25> <26> <27> <28> <29> <30> <31> <32> <33> <34> <35> <36> <37> <38> <39> 
 B...B   B...B   B...B   B...B   B...B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B....B    B
   B.......B       B.......B       B........B         B.........B         B.........B         B.........B         B.........B         B.........B         B.........B         B.......'
       B...............B               B...................B                   B...................B                   B...................B                   B..................B
               B.................................B                                       B.......................................B                                      B
                                B............................................................................B                                                          '
                                                                      B.................................................................................................'
                                                                                                                       B


Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst.err_det_corr_inst
Type name: err_det_corr
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/err_det_corr.sv
Number of covered expressions: 23 of 28
Number of uncovered expressions: 5 of 28
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (3/3) | 45     | (ECC_en[0] == 1'b1) && rd_en                       
1.2    | 100.00% (2/2) | 45     | (ECC_en[0] == 1'b1)                                
2.1    | 100.00% (3/3) | 48     | (parity_rd_in[0] == 1'b0) && (parity_rd_in[6:1] == 6'd0) 
3.1    | 66.67% (2/3)  | 66     | (parity_rd_in[0] == 1'b1) && (parity_rd_in[6:1] != 6'd0) 
3.2    | 100.00% (2/2) | 66     | (parity_rd_in[0] == 1'b1)                          
4.1    | 33.33% (1/3)  | 84     | (parity_rd_in[0] == 1'b0) && (parity_rd_in[6:1] != 6'd0) 
5.1    | 100.00% (2/2) | 96     | ECC_irq_en[0] == 1'b1                              
6.1    | 75.00% (6/8)  | 153    | (bit_swap_en && (ECC_en[0] == 1'b1)) ? (rd_data_r ^ mask) : rd_data_r1 
6.2    | 100.00% (2/2) | 153    | (ECC_en[0] == 1'b1)                                

index: 1.1 grade: 100.00% (3/3) line: 45 source: if((ECC_en[0] == 1'b1) && rd_en)  // IF ECC IS NOT ENABLE

(ECC_en[0] == 1'b1) && rd_en
<--------1-------->    <-2->

index     | hit   | <1> <2> 
---------------------------- '&&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 1     | 1   1   

index: 1.2 grade: 100.00% (2/2) line: 45 source: if((ECC_en[0] == 1'b1) && rd_en)  // IF ECC IS NOT ENABLE

(ECC_en[0] == 1'b1)
 <---3--->    <4->

index     | hit   | <3>   <4>   
-------------------------------- '=='
1.2.1     | 1     | lhs == rhs  
1.2.2     | 1     | lhs != rhs  

index: 2.1 grade: 100.00% (3/3) line: 48 source: if((parity_rd_in[0]==1'b0) && (parity_rd_in[6:1]==6'd0))                // NO ERROR

(parity_rd_in[0] == 1'b0) && (parity_rd_in[6:1] == 6'd0)
 <------1------>              <-------3------->

index     | hit   | rval | <1> <3> 
-----------------------------------
2.1.1     | 1     | 1    | 0   0   
2.1.2     | 1     | 0    | -   1   
2.1.3     | 1     | 0    | 1   -   

index: 3.1 grade: 66.67% (2/3) line: 66 source: else if((parity_rd_in[0]==1'b1) && (parity_rd_in[6:1]!=6'd0))           // DETECTING SINGLE BIT ERROR

(parity_rd_in[0] == 1'b1) && (parity_rd_in[6:1] != 6'd0)
<-----------1----------->     <-------2------->

index     | hit   | rval | <1> <2> 
-----------------------------------
3.1.1     | 1     | 1    | 1   1   
3.1.2     | 0     | 0    | -   0   
3.1.3     | 1     | 0    | 0   -   

index: 3.2 grade: 100.00% (2/2) line: 66 source: else if((parity_rd_in[0]==1'b1) && (parity_rd_in[6:1]!=6'd0))           // DETECTING SINGLE BIT ERROR

(parity_rd_in[0] == 1'b1)
 <------4------>    <5->

index     | hit   | <4>   <5>   
-------------------------------- '=='
3.2.1     | 1     | lhs == rhs  
3.2.2     | 1     | lhs != rhs  

index: 4.1 grade: 33.33% (1/3) line: 84 source: else if((parity_rd_in[0]==1'b0) && (parity_rd_in[6:1]!=6'd0))           // DETECTING DOUBLE BIT ERROR

(parity_rd_in[0] == 1'b0) && (parity_rd_in[6:1] != 6'd0)
 <------1------>              <-------3------->

index     | hit   | rval | <1> <3> 
-----------------------------------
4.1.1     | 1     | 1    | 0   1   
4.1.2     | 0     | 0    | -   0   
4.1.3     | 0     | 0    | 1   -   

index: 5.1 grade: 100.00% (2/2) line: 96 source: if(ECC_irq_en[0] == 1'b1)                                               // GENERATING INTERRUPT WHEN

ECC_irq_en[0] == 1'b1
<-----1----->    <2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
5.1.1     | 1     | lhs == rhs  
5.1.2     | 1     | lhs != rhs  

index: 6.1 grade: 75.00% (6/8) line: 153 source: assign rd_data_r2 = (bit_swap_en && ECC_en[0]==1'b1) ? (rd_data_r ^ mask) : rd_data_r1   ;

(bit_swap_en && (ECC_en[0] == 1'b1)) ? (rd_data_r ^ mask) : rd_data_r1
 <----1---->    <--------2-------->     <---3--->   <4->    <---5---->

index     | hit   | rval | <1> <2> <3> <4> <5> 
-----------------------------------------------
6.1.1     | 0     | 1    | 1   1   1   0   -   
6.1.2     | 1     | 1    | 1   1   0   1   -   
6.1.3     | 1     | 1    | -   0   -   -   1   
6.1.4     | 1     | 1    | 0   -   -   -   1   
6.1.5     | 0     | 0    | 1   1   0   0   -   
6.1.6     | 1     | 0    | 1   1   1   1   -   
6.1.7     | 1     | 0    | -   0   -   -   0   
6.1.8     | 1     | 0    | 0   -   -   -   0   

index: 6.2 grade: 100.00% (2/2) line: 153 source: assign rd_data_r2 = (bit_swap_en && ECC_en[0]==1'b1) ? (rd_data_r ^ mask) : rd_data_r1   ;

(ECC_en[0] == 1'b1)
 <---6--->    <7->

index     | hit   | <6>   <7>   
-------------------------------- '=='
6.2.1     | 1     | lhs == rhs  
6.2.2     | 1     | lhs != rhs  


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter
Type name: rggen_apb_adapter
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_apb_adapter.v
Number of covered expressions: 9 of 11
Number of uncovered expressions: 2 of 11
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (3/3) | 46     | i_psel && (! r_pready)                             
2.1    | 100.00% (2/2) | 57     | ! i_rst_n                                          
3.1    | 66.67% (2/3)  | 61     | w_bus_valid && w_bus_ready                         
4.1    | 66.67% (2/3)  | 66     | w_bus_valid && w_bus_ready                         

index: 1.1 grade: 100.00% (3/3) line: 46 source: assign  w_bus_valid       = i_psel && (!r_pready);

i_psel && (! r_pready)
<-1-->       <--2--->

index     | hit   | rval | <1> <2> 
-----------------------------------
1.1.1     | 1     | 1    | 1   0   
1.1.2     | 1     | 0    | -   1   
1.1.3     | 1     | 0    | 0   -   

index: 2.1 grade: 100.00% (2/2) line: 57 source: if (!i_rst_n) begin

! i_rst_n
  <--1-->

index     | hit   | <1> 
------------------------ '!'
2.1.1     | 1     | 1   
2.1.2     | 1     | 0   

index: 3.1 grade: 66.67% (2/3) line: 61 source: r_pready  <= w_bus_valid && w_bus_ready;

w_bus_valid && w_bus_ready
<----1---->    <----2---->

index     | hit   | <1> <2> 
---------------------------- '&&'
3.1.1     | 1     | 0   -   
3.1.2     | 0     | -   0   
3.1.3     | 1     | 1   1   

index: 4.1 grade: 66.67% (2/3) line: 66 source: if (w_bus_valid && w_bus_ready) begin

w_bus_valid && w_bus_ready
<----1---->    <----2---->

index     | hit   | <1> <2> 
---------------------------- '&&'
4.1.1     | 1     | 0   -   
4.1.2     | 0     | -   0   
4.1.3     | 1     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common
Type name: rggen_adapter_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_adapter_common.v
Number of covered expressions: 12 of 31
Number of uncovered expressions: 19 of 31
Number of excluded expressions: 3
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 45     | ! i_rst_n                                          
2.1    | 50.00% (1/2/1) | 57     | (PRE_DECODE != 0) ? pre_decode() : 1'b1            
3.1    | 0.00% (0/3)   | 67     | (address >= begin_address) && (address <= end_address) 
3.2    | 0.00% (0/2)   | 67     | (address >= begin_address)                         
3.3    | 0.00% (0/2)   | 67     | (address <= end_address)                           
4.1    | 50.00% (2/4)  | 72     | (i_bus_valid && w_inside_range) && (! r_busy)      
5.1    | 33.33% (1/3/1) | 80     | w_register_inactive ? DEFAULT_STATUS : w_register_status 
6.1    | 66.67% (2/3/1) | 81     | w_register_inactive ? DEFAULT_READ_DATA : w_register_read_data 
7.1    | 33.33% (1/3)  | 83     | (i_register_active == {REGISTERS{1'b0}}) || (! w_inside_range) 
7.2    | 50.00% (1/2)  | 83     | (i_register_active == {REGISTERS{1'b0}})           
8.1    | 50.00% (1/2)  | 84     | i_register_ready != {REGISTERS{1'b0}}              
9.1    | 33.33% (1/3)  | 85     | w_register_ready || w_register_inactive            

index: 1.1 grade: 100.00% (2/2) line: 45 source: if (!i_rst_n) begin

! i_rst_n
  <--1-->

index     | hit   | <1> 
------------------------ '!'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 50.00% (1/2/1) line: 57 source: assign  w_inside_range  = (PRE_DECODE != 0) ? pre_decode(i_bus_address) : 1'b1;

(PRE_DECODE != 0) ? pre_decode() : 1'b1
 <---1---->         <----3----->

index     | hit   | rval | <1> <3> 
-----------------------------------
2.1.1     | 0     | 1    | -   1   
2.1.2     | 1     | 1    | 0   -   
2.1.3     | CONST | 0    | 1   0   

index: 3.1 grade: 0.00% (0/3) line: 67 source: pre_decode    = (address >= begin_address) && (address <= end_address);

(address >= begin_address) && (address <= end_address)
<-----------1------------>    <----------2----------->

index     | hit   | <1> <2> 
---------------------------- '&&'
3.1.1     | 0     | 0   -   
3.1.2     | 0     | -   0   
3.1.3     | 0     | 1   1   

index: 3.2 grade: 0.00% (0/2) line: 67 source: pre_decode    = (address >= begin_address) && (address <= end_address);

(address >= begin_address)
 <--3-->    <-----4----->

index     | hit   | <3>   <4>   
-------------------------------- '>='
3.2.1     | 0     | lhs < rhs   
3.2.2     | 0     | lhs >= rhs  

index: 3.3 grade: 0.00% (0/2) line: 67 source: pre_decode    = (address >= begin_address) && (address <= end_address);

(address <= end_address)
 <--5-->    <----6---->

index     | hit   | <5>   <6>   
-------------------------------- '<='
3.3.1     | 0     | lhs > rhs   
3.3.2     | 0     | lhs <= rhs  

index: 4.1 grade: 50.00% (2/4) line: 72 source: assign  o_register_valid      = i_bus_valid && w_inside_range && (!r_busy);

(i_bus_valid && w_inside_range) && (! r_busy)
 <----1---->    <-----2------>        <-3-->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 1     | 1    | 1   1   0   
4.1.2     | 0     | 0    | -   -   1   
4.1.3     | 0     | 0    | -   0   -   
4.1.4     | 1     | 0    | 0   -   -   

index: 5.1 grade: 33.33% (1/3/1) line: 80 source: assign  o_bus_status    = (w_register_inactive) ? DEFAULT_STATUS    : w_register_status;

w_register_inactive ? DEFAULT_STATUS : w_register_status
<--------1-------->   <-----2------>   <-------3------->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | 0     | 1    | 0   -   1   
5.1.2     | CONST | 1    | 1   1   -   
5.1.3     | 1     | 0    | 0   -   0   
5.1.4     | 0     | 0    | 1   0   -   

index: 6.1 grade: 66.67% (2/3/1) line: 81 source: assign  o_bus_read_data = (w_register_inactive) ? DEFAULT_READ_DATA : w_register_read_data;

w_register_inactive ? DEFAULT_READ_DATA : w_register_read_data
<--------1-------->   <-------2------->   <--------3--------->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
6.1.1     | 1     | 1    | 0   -   1   
6.1.2     | CONST | 1    | 1   1   -   
6.1.3     | 1     | 0    | 0   -   0   
6.1.4     | 0     | 0    | 1   0   -   

index: 7.1 grade: 33.33% (1/3) line: 83 source: assign  w_register_inactive = (i_register_active == {REGISTERS{1'b0}}) || (!w_inside_range);

(i_register_active == {REGISTERS{1'b0}}) || (! w_inside_range)
<------------------1------------------->       <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
7.1.1     | 0     | 1    | -   0   
7.1.2     | 0     | 1    | 1   -   
7.1.3     | 1     | 0    | 0   1   

index: 7.2 grade: 50.00% (1/2) line: 83 source: assign  w_register_inactive = (i_register_active == {REGISTERS{1'b0}}) || (!w_inside_range);

(i_register_active == {REGISTERS{1'b0}})
 <-------3------->    <-------4------->

index     | hit   | <3>   <4>   
-------------------------------- '=='
7.2.1     | 0     | lhs == rhs  
7.2.2     | 1     | lhs != rhs  

index: 8.1 grade: 50.00% (1/2) line: 84 source: assign  w_register_ready    = (i_register_ready  != {REGISTERS{1'b0}});

i_register_ready != {REGISTERS{1'b0}}
<------1------->    <-------2------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
8.1.1     | 0     | lhs == rhs  
8.1.2     | 1     | lhs != rhs  

index: 9.1 grade: 33.33% (1/3) line: 85 source: assign  w_bus_ready         = w_register_ready || w_register_inactive;

w_register_ready || w_register_inactive
<------1------->    <--------2-------->

index     | hit   | <1> <2> 
---------------------------- '||'
9.1.1     | 1     | 1   -   
9.1.2     | 0     | -   1   
9.1.3     | 0     | 0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[0]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 66.67% (2/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[1]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 66.67% (2/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[2]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 66.67% (2/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[3]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 66.67% (2/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[4]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 66.67% (2/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[5]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 66.67% (2/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[6]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 66.67% (2/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.g[7]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 66.67% (2/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 0 of 21
Number of uncovered expressions: 21 of 21
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 0.00% (0/2)   | 18     | current_n > 0                                      
2.1    | 0.00% (0/3)   | 20     | (current_n > 4) && (half_n <= 4)                   
2.2    | 0.00% (0/2)   | 20     | (current_n > 4)                                    
2.3    | 0.00% (0/2)   | 20     | (half_n <= 4)                                      
3.1    | 0.00% (0/2)   | 23     | current_n >= 4                                     
4.1    | 0.00% (0/2)   | 34     | list_index < N                                     
5.1    | 0.00% (0/2)   | 49     | i < N                                              
6.1    | 0.00% (0/2)   | 50     | i == 0                                             
7.1    | 0.00% (0/2)   | 69     | i < N                                              
8.1    | 0.00% (0/2)   | 70     | ((sub_n_list[(16 * i)+:16] != 0) ? 1 : 0)          

index: 1.1 grade: 0.00% (0/2) line: 18 source: while (current_n > 0) begin

current_n > 0
<---1--->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
1.1.1     | 0     | lhs > rhs   
1.1.2     | 0     | lhs <= rhs  

index: 2.1 grade: 0.00% (0/3) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(current_n > 4) && (half_n <= 4)
<------1------>    <-----2----->

index     | hit   | <1> <2> 
---------------------------- '&&'
2.1.1     | 0     | 0   -   
2.1.2     | 0     | -   0   
2.1.3     | 0     | 1   1   

index: 2.2 grade: 0.00% (0/2) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(current_n > 4)
 <---3--->   <4>

index     | hit   | <3>   <4>   
-------------------------------- '>'
2.2.1     | 0     | lhs > rhs   
2.2.2     | 0     | lhs <= rhs  

index: 2.3 grade: 0.00% (0/2) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(half_n <= 4)
 <-5-->    <6>

index     | hit   | <5>   <6>   
-------------------------------- '<='
2.3.1     | 0     | lhs > rhs   
2.3.2     | 0     | lhs <= rhs  

index: 3.1 grade: 0.00% (0/2) line: 23 source: else if (current_n >= 4) begin

current_n >= 4
<---1--->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '>='
3.1.1     | 0     | lhs < rhs   
3.1.2     | 0     | lhs >= rhs  

index: 4.1 grade: 0.00% (0/2) line: 34 source: while (list_index < N) begin

list_index < N
<---1---->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
4.1.1     | 0     | lhs < rhs   
4.1.2     | 0     | lhs >= rhs  

index: 5.1 grade: 0.00% (0/2) line: 49 source: for (i = 0;i < N;i = i + 1) begin

i < N
<1> <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
5.1.1     | 0     | lhs < rhs   
5.1.2     | 0     | lhs >= rhs  

index: 6.1 grade: 0.00% (0/2) line: 50 source: if (i == 0) begin

i == 0
<1>  <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
6.1.1     | 0     | lhs == rhs  
6.1.2     | 0     | lhs != rhs  

index: 7.1 grade: 0.00% (0/2) line: 69 source: for (i = 0;i < N;i = i + 1) begin

i < N
<1> <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 0     | lhs < rhs   
7.1.2     | 0     | lhs >= rhs  

index: 8.1 grade: 0.00% (0/2) line: 70 source: next_n  = next_n + ((sub_n_list[16*i+:16] != 0) ? 1 : 0);

((sub_n_list[(16 * i)+:16] != 0) ? 1 : 0)
  <----------1----------->

index     | hit   | rval | <1> 
-------------------------------
8.1.1     | 0     | 1    | 1   
8.1.2     | 0     | 0    | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_or_loop[0].g
Type name: rggen_or_reducer.g_or_loop.g_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 1 of 5
Number of uncovered expressions: 4 of 5
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 20.00% (1/5)  | 88     | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]) | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 2))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 3))+:WIDTH]) 

index: 1.1 grade: 20.00% (1/5) line: 88 source: | (i_data[WIDTH*(OFFSET_LIST[16*i+:16]+2)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+3)+:WIDTH]);

(i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]) | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 2))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 3))+:WIDTH])
 <--------------------------1--------------------------->   <--------------------------2--------------------------->     <--------------------------3--------------------------->   <--------------------------4--------------------------->

index     | hit   | <1> <2> <3> <4> 
------------------------------------ '|'
1.1.1     | 0     | 1   -   -   -   
1.1.2     | 0     | -   1   -   -   
1.1.3     | 0     | -   -   1   -   
1.1.4     | 0     | -   -   -   1   
1.1.5     | 1     | 0   0   0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_or_loop[1].g
Type name: rggen_or_reducer.g_or_loop.g_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 1 of 5
Number of uncovered expressions: 4 of 5
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 20.00% (1/5)  | 88     | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]) | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 2))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 3))+:WIDTH]) 

index: 1.1 grade: 20.00% (1/5) line: 88 source: | (i_data[WIDTH*(OFFSET_LIST[16*i+:16]+2)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+3)+:WIDTH]);

(i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]) | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 2))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 3))+:WIDTH])
 <--------------------------1--------------------------->   <--------------------------2--------------------------->     <--------------------------3--------------------------->   <--------------------------4--------------------------->

index     | hit   | <1> <2> <3> <4> 
------------------------------------ '|'
1.1.1     | 0     | 1   -   -   -   
1.1.2     | 0     | -   1   -   -   
1.1.3     | 0     | -   -   1   -   
1.1.4     | 0     | -   -   -   1   
1.1.5     | 1     | 0   0   0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_reduce.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 0 of 21
Number of uncovered expressions: 21 of 21
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 0.00% (0/2)   | 18     | current_n > 0                                      
2.1    | 0.00% (0/3)   | 20     | (current_n > 4) && (half_n <= 4)                   
2.2    | 0.00% (0/2)   | 20     | (current_n > 4)                                    
2.3    | 0.00% (0/2)   | 20     | (half_n <= 4)                                      
3.1    | 0.00% (0/2)   | 23     | current_n >= 4                                     
4.1    | 0.00% (0/2)   | 34     | list_index < N                                     
5.1    | 0.00% (0/2)   | 49     | i < N                                              
6.1    | 0.00% (0/2)   | 50     | i == 0                                             
7.1    | 0.00% (0/2)   | 69     | i < N                                              
8.1    | 0.00% (0/2)   | 70     | ((sub_n_list[(16 * i)+:16] != 0) ? 1 : 0)          

index: 1.1 grade: 0.00% (0/2) line: 18 source: while (current_n > 0) begin

current_n > 0
<---1--->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
1.1.1     | 0     | lhs > rhs   
1.1.2     | 0     | lhs <= rhs  

index: 2.1 grade: 0.00% (0/3) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(current_n > 4) && (half_n <= 4)
<------1------>    <-----2----->

index     | hit   | <1> <2> 
---------------------------- '&&'
2.1.1     | 0     | 0   -   
2.1.2     | 0     | -   0   
2.1.3     | 0     | 1   1   

index: 2.2 grade: 0.00% (0/2) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(current_n > 4)
 <---3--->   <4>

index     | hit   | <3>   <4>   
-------------------------------- '>'
2.2.1     | 0     | lhs > rhs   
2.2.2     | 0     | lhs <= rhs  

index: 2.3 grade: 0.00% (0/2) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(half_n <= 4)
 <-5-->    <6>

index     | hit   | <5>   <6>   
-------------------------------- '<='
2.3.1     | 0     | lhs > rhs   
2.3.2     | 0     | lhs <= rhs  

index: 3.1 grade: 0.00% (0/2) line: 23 source: else if (current_n >= 4) begin

current_n >= 4
<---1--->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '>='
3.1.1     | 0     | lhs < rhs   
3.1.2     | 0     | lhs >= rhs  

index: 4.1 grade: 0.00% (0/2) line: 34 source: while (list_index < N) begin

list_index < N
<---1---->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
4.1.1     | 0     | lhs < rhs   
4.1.2     | 0     | lhs >= rhs  

index: 5.1 grade: 0.00% (0/2) line: 49 source: for (i = 0;i < N;i = i + 1) begin

i < N
<1> <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
5.1.1     | 0     | lhs < rhs   
5.1.2     | 0     | lhs >= rhs  

index: 6.1 grade: 0.00% (0/2) line: 50 source: if (i == 0) begin

i == 0
<1>  <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
6.1.1     | 0     | lhs == rhs  
6.1.2     | 0     | lhs != rhs  

index: 7.1 grade: 0.00% (0/2) line: 69 source: for (i = 0;i < N;i = i + 1) begin

i < N
<1> <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 0     | lhs < rhs   
7.1.2     | 0     | lhs >= rhs  

index: 8.1 grade: 0.00% (0/2) line: 70 source: next_n  = next_n + ((sub_n_list[16*i+:16] != 0) ? 1 : 0);

((sub_n_list[(16 * i)+:16] != 0) ? 1 : 0)
  <----------1----------->

index     | hit   | rval | <1> 
-------------------------------
8.1.1     | 0     | 1    | 1   
8.1.2     | 0     | 0    | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_reduce.u_reducer.g_or_loop[0].g
Type name: rggen_or_reducer.g_or_loop.g_T_F_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 1 of 3
Number of uncovered expressions: 2 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 33.33% (1/3)  | 95     | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH] 

index: 1.1 grade: 33.33% (1/3) line: 95 source: assign  next_data[WIDTH*i+:WIDTH] = i_data[WIDTH*(OFFSET_LIST[16*i+:16]+0)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+1)+:WIDTH];

i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]
<--------------------------1--------------------------->   <--------------------------2--------------------------->

index     | hit   | <1> <2> 
---------------------------- '|'
1.1.1     | 0     | 1   -   
1.1.2     | 0     | -   1   
1.1.3     | 1     | 0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[0]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 3 of 3
Number of uncovered expressions: 0 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (3/3) | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 100.00% (3/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 1     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[1]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 3 of 3
Number of uncovered expressions: 0 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (3/3) | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 100.00% (3/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 1     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[2]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 3 of 3
Number of uncovered expressions: 0 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (3/3) | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 100.00% (3/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 1     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[3]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 66.67% (2/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 1     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[4]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 1 of 3
Number of uncovered expressions: 2 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 33.33% (1/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 33.33% (1/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 0     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[5]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 1 of 3
Number of uncovered expressions: 2 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 33.33% (1/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 33.33% (1/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 0     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[6]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 1 of 3
Number of uncovered expressions: 2 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 33.33% (1/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 33.33% (1/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 0     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.g[7]
Type name: rggen_mux.g_T.g
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered expressions: 1 of 3
Number of uncovered expressions: 2 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 33.33% (1/3)  | 15     | i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}  

index: 1.1 grade: 33.33% (1/3) line: 15 source: assign  masked_data[WIDTH*i+:WIDTH] = i_data[WIDTH*i+:WIDTH] & {WIDTH{i_select[i]}};

i_data[(WIDTH * i)+:WIDTH] & {WIDTH{i_select[i]}}
<-----------1------------>   <--------2--------->

index     | hit   | <1> <2> 
---------------------------- '&'
1.1.1     | 0     | 0   -   
1.1.2     | 1     | -   0   
1.1.3     | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 0 of 21
Number of uncovered expressions: 21 of 21
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 0.00% (0/2)   | 18     | current_n > 0                                      
2.1    | 0.00% (0/3)   | 20     | (current_n > 4) && (half_n <= 4)                   
2.2    | 0.00% (0/2)   | 20     | (current_n > 4)                                    
2.3    | 0.00% (0/2)   | 20     | (half_n <= 4)                                      
3.1    | 0.00% (0/2)   | 23     | current_n >= 4                                     
4.1    | 0.00% (0/2)   | 34     | list_index < N                                     
5.1    | 0.00% (0/2)   | 49     | i < N                                              
6.1    | 0.00% (0/2)   | 50     | i == 0                                             
7.1    | 0.00% (0/2)   | 69     | i < N                                              
8.1    | 0.00% (0/2)   | 70     | ((sub_n_list[(16 * i)+:16] != 0) ? 1 : 0)          

index: 1.1 grade: 0.00% (0/2) line: 18 source: while (current_n > 0) begin

current_n > 0
<---1--->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
1.1.1     | 0     | lhs > rhs   
1.1.2     | 0     | lhs <= rhs  

index: 2.1 grade: 0.00% (0/3) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(current_n > 4) && (half_n <= 4)
<------1------>    <-----2----->

index     | hit   | <1> <2> 
---------------------------- '&&'
2.1.1     | 0     | 0   -   
2.1.2     | 0     | -   0   
2.1.3     | 0     | 1   1   

index: 2.2 grade: 0.00% (0/2) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(current_n > 4)
 <---3--->   <4>

index     | hit   | <3>   <4>   
-------------------------------- '>'
2.2.1     | 0     | lhs > rhs   
2.2.2     | 0     | lhs <= rhs  

index: 2.3 grade: 0.00% (0/2) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(half_n <= 4)
 <-5-->    <6>

index     | hit   | <5>   <6>   
-------------------------------- '<='
2.3.1     | 0     | lhs > rhs   
2.3.2     | 0     | lhs <= rhs  

index: 3.1 grade: 0.00% (0/2) line: 23 source: else if (current_n >= 4) begin

current_n >= 4
<---1--->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '>='
3.1.1     | 0     | lhs < rhs   
3.1.2     | 0     | lhs >= rhs  

index: 4.1 grade: 0.00% (0/2) line: 34 source: while (list_index < N) begin

list_index < N
<---1---->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
4.1.1     | 0     | lhs < rhs   
4.1.2     | 0     | lhs >= rhs  

index: 5.1 grade: 0.00% (0/2) line: 49 source: for (i = 0;i < N;i = i + 1) begin

i < N
<1> <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
5.1.1     | 0     | lhs < rhs   
5.1.2     | 0     | lhs >= rhs  

index: 6.1 grade: 0.00% (0/2) line: 50 source: if (i == 0) begin

i == 0
<1>  <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
6.1.1     | 0     | lhs == rhs  
6.1.2     | 0     | lhs != rhs  

index: 7.1 grade: 0.00% (0/2) line: 69 source: for (i = 0;i < N;i = i + 1) begin

i < N
<1> <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 0     | lhs < rhs   
7.1.2     | 0     | lhs >= rhs  

index: 8.1 grade: 0.00% (0/2) line: 70 source: next_n  = next_n + ((sub_n_list[16*i+:16] != 0) ? 1 : 0);

((sub_n_list[(16 * i)+:16] != 0) ? 1 : 0)
  <----------1----------->

index     | hit   | rval | <1> 
-------------------------------
8.1.1     | 0     | 1    | 1   
8.1.2     | 0     | 0    | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_or_loop[0].g
Type name: rggen_or_reducer.g_or_loop.g_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 4 of 5
Number of uncovered expressions: 1 of 5
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 80.00% (4/5)  | 88     | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]) | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 2))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 3))+:WIDTH]) 

index: 1.1 grade: 80.00% (4/5) line: 88 source: | (i_data[WIDTH*(OFFSET_LIST[16*i+:16]+2)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+3)+:WIDTH]);

(i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]) | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 2))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 3))+:WIDTH])
 <--------------------------1--------------------------->   <--------------------------2--------------------------->     <--------------------------3--------------------------->   <--------------------------4--------------------------->

index     | hit   | <1> <2> <3> <4> 
------------------------------------ '|'
1.1.1     | 1     | 1   -   -   -   
1.1.2     | 1     | -   1   -   -   
1.1.3     | 1     | -   -   1   -   
1.1.4     | 0     | -   -   -   1   
1.1.5     | 1     | 0   0   0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_or_loop[1].g
Type name: rggen_or_reducer.g_or_loop.g_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 1 of 5
Number of uncovered expressions: 4 of 5
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 20.00% (1/5)  | 88     | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]) | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 2))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 3))+:WIDTH]) 

index: 1.1 grade: 20.00% (1/5) line: 88 source: | (i_data[WIDTH*(OFFSET_LIST[16*i+:16]+2)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+3)+:WIDTH]);

(i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]) | (i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 2))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 3))+:WIDTH])
 <--------------------------1--------------------------->   <--------------------------2--------------------------->     <--------------------------3--------------------------->   <--------------------------4--------------------------->

index     | hit   | <1> <2> <3> <4> 
------------------------------------ '|'
1.1.1     | 0     | 1   -   -   -   
1.1.2     | 0     | -   1   -   -   
1.1.3     | 0     | -   -   1   -   
1.1.4     | 0     | -   -   -   1   
1.1.5     | 1     | 0   0   0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_reduce.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 0 of 21
Number of uncovered expressions: 21 of 21
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 0.00% (0/2)   | 18     | current_n > 0                                      
2.1    | 0.00% (0/3)   | 20     | (current_n > 4) && (half_n <= 4)                   
2.2    | 0.00% (0/2)   | 20     | (current_n > 4)                                    
2.3    | 0.00% (0/2)   | 20     | (half_n <= 4)                                      
3.1    | 0.00% (0/2)   | 23     | current_n >= 4                                     
4.1    | 0.00% (0/2)   | 34     | list_index < N                                     
5.1    | 0.00% (0/2)   | 49     | i < N                                              
6.1    | 0.00% (0/2)   | 50     | i == 0                                             
7.1    | 0.00% (0/2)   | 69     | i < N                                              
8.1    | 0.00% (0/2)   | 70     | ((sub_n_list[(16 * i)+:16] != 0) ? 1 : 0)          

index: 1.1 grade: 0.00% (0/2) line: 18 source: while (current_n > 0) begin

current_n > 0
<---1--->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
1.1.1     | 0     | lhs > rhs   
1.1.2     | 0     | lhs <= rhs  

index: 2.1 grade: 0.00% (0/3) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(current_n > 4) && (half_n <= 4)
<------1------>    <-----2----->

index     | hit   | <1> <2> 
---------------------------- '&&'
2.1.1     | 0     | 0   -   
2.1.2     | 0     | -   0   
2.1.3     | 0     | 1   1   

index: 2.2 grade: 0.00% (0/2) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(current_n > 4)
 <---3--->   <4>

index     | hit   | <3>   <4>   
-------------------------------- '>'
2.2.1     | 0     | lhs > rhs   
2.2.2     | 0     | lhs <= rhs  

index: 2.3 grade: 0.00% (0/2) line: 20 source: if ((current_n > 4) && (half_n <= 4)) begin

(half_n <= 4)
 <-5-->    <6>

index     | hit   | <5>   <6>   
-------------------------------- '<='
2.3.1     | 0     | lhs > rhs   
2.3.2     | 0     | lhs <= rhs  

index: 3.1 grade: 0.00% (0/2) line: 23 source: else if (current_n >= 4) begin

current_n >= 4
<---1--->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '>='
3.1.1     | 0     | lhs < rhs   
3.1.2     | 0     | lhs >= rhs  

index: 4.1 grade: 0.00% (0/2) line: 34 source: while (list_index < N) begin

list_index < N
<---1---->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
4.1.1     | 0     | lhs < rhs   
4.1.2     | 0     | lhs >= rhs  

index: 5.1 grade: 0.00% (0/2) line: 49 source: for (i = 0;i < N;i = i + 1) begin

i < N
<1> <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
5.1.1     | 0     | lhs < rhs   
5.1.2     | 0     | lhs >= rhs  

index: 6.1 grade: 0.00% (0/2) line: 50 source: if (i == 0) begin

i == 0
<1>  <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
6.1.1     | 0     | lhs == rhs  
6.1.2     | 0     | lhs != rhs  

index: 7.1 grade: 0.00% (0/2) line: 69 source: for (i = 0;i < N;i = i + 1) begin

i < N
<1> <2>

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 0     | lhs < rhs   
7.1.2     | 0     | lhs >= rhs  

index: 8.1 grade: 0.00% (0/2) line: 70 source: next_n  = next_n + ((sub_n_list[16*i+:16] != 0) ? 1 : 0);

((sub_n_list[(16 * i)+:16] != 0) ? 1 : 0)
  <----------1----------->

index     | hit   | rval | <1> 
-------------------------------
8.1.1     | 0     | 1    | 1   
8.1.2     | 0     | 0    | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_reduce.u_reducer.g_or_loop[0].g
Type name: rggen_or_reducer.g_or_loop.g_T_F_F
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered expressions: 2 of 3
Number of uncovered expressions: 1 of 3
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 66.67% (2/3)  | 95     | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH] 

index: 1.1 grade: 66.67% (2/3) line: 95 source: assign  next_data[WIDTH*i+:WIDTH] = i_data[WIDTH*(OFFSET_LIST[16*i+:16]+0)+:WIDTH] | i_data[WIDTH*(OFFSET_LIST[16*i+:16]+1)+:WIDTH];

i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 0))+:WIDTH] | i_data[(WIDTH * (OFFSET_LIST[(16 * i)+:16] + 1))+:WIDTH]
<--------------------------1--------------------------->   <--------------------------2--------------------------->

index     | hit   | <1> <2> 
---------------------------- '|'
1.1.1     | 1     | 1   -   
1.1.2     | 0     | -   1   
1.1.3     | 1     | 0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered expressions: 24 of 34
Number of uncovered expressions: 10 of 34
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 40     | | {1'b0,w_match}                                   
2.1    | 50.00% (2/4)  | 81     | (w_frontdoor_valid || w_backdoor_valid) || w_pending_valid 
3.1    | 50.00% (2/4)  | 82     | w_backdoor_valid ? w_read_mask[1] : w_read_mask[0] 
4.1    | 50.00% (2/4)  | 83     | w_backdoor_valid ? w_write_mask[1] : w_write_mask[0] 
5.1    | 50.00% (2/4)  | 84     | w_backdoor_valid ? w_write_data[1] : w_write_data[0] 
6.1    | 100.00% (3/3) | 86     | i_register_valid && w_active                       
7.1    | 100.00% (2/2) | 101    | i < WORDS                                          
8.1    | 100.00% (2/2) | 102    | j < BUS_BYTE_WIDTH                                 
9.1    | 75.00% (3/4)  | 103    | (accessible && (write_access == bus_access[0])) && match[i] 
9.2    | 100.00% (2/2) | 103    | (write_access == bus_access[0])                    
10.1   | 66.67% (2/3)  | 120    | (! w_backdoor_valid) && w_active                   

index: 1.1 grade: 100.00% (2/2) line: 40 source: assign  w_active  = |{1'b0, w_match};

| {1'b0,w_match}
<------1------->

index     | hit   | <1> 
------------------------ '|'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 50.00% (2/4) line: 81 source: assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid;

(w_frontdoor_valid || w_backdoor_valid) || w_pending_valid
 <-------1------->    <------2------->     <------3------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 1     | 1   -   -   
2.1.2     | 0     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   

index: 3.1 grade: 50.00% (2/4) line: 82 source: assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0];

w_backdoor_valid ? w_read_mask[1] : w_read_mask[0]
<------1------->   <-----2------>   <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
3.1.1     | 1     | 1    | 0   -   1   
3.1.2     | 0     | 1    | 1   1   -   
3.1.3     | 1     | 0    | 0   -   0   
3.1.4     | 0     | 0    | 1   0   -   

index: 4.1 grade: 50.00% (2/4) line: 83 source: assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0];

w_backdoor_valid ? w_write_mask[1] : w_write_mask[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 1     | 1    | 0   -   1   
4.1.2     | 0     | 1    | 1   1   -   
4.1.3     | 1     | 0    | 0   -   0   
4.1.4     | 0     | 0    | 1   0   -   

index: 5.1 grade: 50.00% (2/4) line: 84 source: assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0];

w_backdoor_valid ? w_write_data[1] : w_write_data[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | 1     | 1    | 0   -   1   
5.1.2     | 0     | 1    | 1   1   -   
5.1.3     | 1     | 0    | 0   -   0   
5.1.4     | 0     | 0    | 1   0   -   

index: 6.1 grade: 100.00% (3/3) line: 86 source: assign  w_frontdoor_valid = i_register_valid && w_active;

i_register_valid && w_active
<------1------->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 1     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 1     | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 101 source: for (i = 0;i < WORDS;i = i + 1) begin

i < WORDS
<1> <-2->

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 1     | lhs < rhs   
7.1.2     | 1     | lhs >= rhs  

index: 8.1 grade: 100.00% (2/2) line: 102 source: for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin

j < BUS_BYTE_WIDTH
<1> <-----2------>

index     | hit   | <1>   <2>   
-------------------------------- '<'
8.1.1     | 1     | lhs < rhs   
8.1.2     | 1     | lhs >= rhs  

index: 9.1 grade: 75.00% (3/4) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(accessible && (write_access == bus_access[0])) && match[i]
 <---1---->    <--------------2-------------->     <--3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
9.1.1     | 0     | 0   -   -   
9.1.2     | 1     | -   0   -   
9.1.3     | 1     | -   -   0   
9.1.4     | 1     | 1   1   1   

index: 9.2 grade: 100.00% (2/2) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(write_access == bus_access[0])
 <----4----->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '=='
9.2.1     | 1     | lhs == rhs  
9.2.2     | 1     | lhs != rhs  

index: 10.1 grade: 66.67% (2/3) line: 120 source: assign  o_register_ready      = (!w_backdoor_valid) && w_active;

(! w_backdoor_valid) && w_active
   <------1------->     <--2--->

index     | hit   | rval | <1> <2> 
-----------------------------------
10.1.1    | 1     | 1    | 0   1   
10.1.2    | 1     | 0    | -   0   
10.1.3    | 0     | 0    | 1   -   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered expressions: 6 of 19
Number of uncovered expressions: 13 of 19
Number of excluded expressions: 3
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (2/4)  | 22     | (w_address_match && w_access_match) && i_additional_match 
2.1    | 0.00% (0/2)   | 32     | value > 0                                          
3.1    | 100.00% (1/1/1) | 43     | START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB] 
4.1    | 100.00% (2/2) | 44     | address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB] 
5.1    | 0.00% (0/3)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
5.2    | 0.00% (0/2)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) 
5.3    | 0.00% (0/2)   | 49     | (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
6.1    | 100.00% (1/1/2) | 57     | READABLE && WRITABLE                               
7.1    | 0.00% (0/2)   | 61     | ! access[ACCESS_BIT]                               

index: 1.1 grade: 50.00% (2/4) line: 22 source: assign  o_match         = w_address_match && w_access_match && i_additional_match;

(w_address_match && w_access_match) && i_additional_match
 <------1------>    <-----2------>     <-------3-------->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
1.1.1     | 1     | 0   -   -   
1.1.2     | 0     | -   0   -   
1.1.3     | 0     | -   -   0   
1.1.4     | 1     | 1   1   1   

index: 2.1 grade: 0.00% (0/2) line: 32 source: while (value > 0) begin

value > 0
<-1->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
2.1.1     | 0     | lhs > rhs   
2.1.2     | 0     | lhs <= rhs  

index: 3.1 grade: 100.00% (1/1/1) line: 43 source: if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin

START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB]
<-------------1-------------->    <------------2------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 1     | lhs == rhs  
3.1.2     | CONST | lhs != rhs  

index: 4.1 grade: 100.00% (2/2) line: 44 source: match_address = (address[WIDTH-1:LSB] == START_ADDRESS[WIDTH-1:LSB]);

address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB]
<----------1----------->    <-------------2-------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
4.1.1     | 1     | lhs == rhs  
4.1.2     | 1     | lhs != rhs  

index: 5.1 grade: 0.00% (0/3) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
<----------------------------1----------------------------->    <---------------------------2---------------------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
5.1.1     | 0     | 0   -   
5.1.2     | 0     | -   0   
5.1.3     | 0     | 1   1   

index: 5.2 grade: 0.00% (0/2) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB])
 <----------3----------->    <-------------4-------------->

index     | hit   | <3>   <4>   
-------------------------------- '>='
5.2.1     | 0     | lhs < rhs   
5.2.2     | 0     | lhs >= rhs  

index: 5.3 grade: 0.00% (0/2) line: 49 source: (address[WIDTH-1:LSB] <= END_ADDRESS[WIDTH-1:LSB]  );

(address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
 <----------5----------->    <------------6------------->

index     | hit   | <5>   <6>   
-------------------------------- '<='
5.3.1     | 0     | lhs > rhs   
5.3.2     | 0     | lhs <= rhs  

index: 6.1 grade: 100.00% (1/1/2) line: 57 source: if (READABLE && WRITABLE) begin

READABLE && WRITABLE
<--1--->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | CONST | 0   -   
6.1.2     | CONST | -   0   
6.1.3     | 1     | 1   1   

index: 7.1 grade: 0.00% (0/2) line: 61 source: match_access  = !access[ACCESS_BIT];

! access[ACCESS_BIT]
  <-------1-------->

index     | hit   | <1> 
------------------------ '!'
7.1.1     | 0     | 1   
7.1.2     | 0     | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.g_ECC_STATUS.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 41 of 77
Number of uncovered expressions: 36 of 77
Number of excluded expressions: 8
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (1/1/2) | 52     | (SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)     
1.2    | 100.00% (1/1/1) | 52     | (SW_READ_ACTION == 2)                              
1.3    | 100.00% (1/1/1) | 53     | (SW_READ_ACTION == 3)                              
2.1    | 100.00% (1/1/1) | 54     | SW_WRITE_ACTION != 0                               
3.1    | 100.00% (2/2) | 56     | read_mask != {WIDTH{1'b0}}                         
4.1    | 50.00% (2/4)  | 57     | ((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done) 
4.2    | 100.00% (2/2) | 57     | (write_mask != {WIDTH{1'b0}})                      
4.3    | 50.00% (1/2)  | 57     | (write_enable == SW_WRITE_ENABLE_POLARITY)         
5.1    | 75.00% (3/4)  | 59     | (valid && action[0]) && access[0]                  
6.1    | 75.00% (3/4)  | 60     | (valid && action[1]) && access[1]                  
7.1    | 50.00% (1/2)  | 71     | write_enable == HW_WRITE_ENABLE_POLARITY           
8.1    | 50.00% (1/2)  | 72     | set != {HW_SET_WIDTH{1'b0}}                        
9.1    | 50.00% (1/2)  | 73     | clear != {HW_CLEAR_WIDTH{1'b0}}                    
10.1   | 25.00% (1/4)  | 74     | (update[0] || update[1]) || update[2]              
11.1   | 100.00% (1/1/1) | 90     | PRECEDENCE_ACCESS == 0                             
12.1   | 100.00% (3/3) | 132    | write_mask & (~ write_data)                        
13.1   | 100.00% (3/3) | 133    | write_mask & write_data                            
14.1   | 100.00% (4/4) | 135    | (current_value & (~ write_mask)) | masked_data[1]  
15.1   | 0.00% (0/3)   | 136    | current_value & (~ masked_data[0])                 
16.1   | 0.00% (0/3)   | 137    | current_value & (~ masked_data[1])                 
17.1   | 0.00% (0/3)   | 139    | current_value | masked_data[0]                     
18.1   | 0.00% (0/3)   | 140    | current_value | masked_data[1]                     
19.1   | 0.00% (0/4)   | 142    | current_value ^ masked_data[0]                     
20.1   | 0.00% (0/4)   | 143    | current_value ^ masked_data[1]                     
21.1   | 100.00% (1/1/1) | 165    | HW_SET_WIDTH == WIDTH                              
22.1   | 100.00% (1/1/1) | 172    | HW_CLEAR_WIDTH == WIDTH                            
23.1   | 50.00% (1/2)  | 179    | write_enable == HW_WRITE_ENABLE_POLARITY           
24.1   | 50.00% (2/4)  | 186    | (value & (~ set_clear[1])) | set_clear[0]          
25.1   | 66.67% (2/3)  | 202    | w_read_data & i_mask                               
26.1   | 66.67% (2/3)  | 206    | w_value & i_mask                                   

index: 1.1 grade: 100.00% (1/1/2) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)
<---------1--------->    <---------2--------->

index     | hit   | <1> <2> 
---------------------------- '||'
1.1.1     | CONST | 1   -   
1.1.2     | CONST | -   1   
1.1.3     | 1     | 0   0   

index: 1.2 grade: 100.00% (1/1/1) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2)
 <-----3------>    <4>

index     | hit   | <3>   <4>   
-------------------------------- '=='
1.2.1     | CONST | lhs == rhs  
1.2.2     | 1     | lhs != rhs  

index: 1.3 grade: 100.00% (1/1/1) line: 53 source: (SW_READ_ACTION  == `RGGEN_READ_SET  );

(SW_READ_ACTION == 3)
 <-----5------>    <6>

index     | hit   | <5>   <6>   
-------------------------------- '=='
1.3.1     | CONST | lhs == rhs  
1.3.2     | 1     | lhs != rhs  

index: 2.1 grade: 100.00% (1/1/1) line: 54 source: action[1] = (SW_WRITE_ACTION != `RGGEN_WRITE_NONE);

SW_WRITE_ACTION != 0
<------1------>    <2>

index     | hit   | <1>   <2>   
-------------------------------- '!='
2.1.1     | CONST | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 100.00% (2/2) line: 56 source: access[0] = (read_mask  != {WIDTH{1'b0}});

read_mask != {WIDTH{1'b0}}
<---1--->    <-----2----->

index     | hit   | <1>   <2>   
-------------------------------- '!='
3.1.1     | 1     | lhs == rhs  
3.1.2     | 1     | lhs != rhs  

index: 4.1 grade: 50.00% (2/4) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done)
 <-------------1------------->    <-------------------2-------------------->        <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 1     | 1    | 1   1   0   
4.1.2     | 0     | 0    | -   -   1   
4.1.3     | 0     | 0    | -   0   -   
4.1.4     | 1     | 0    | 0   -   -   

index: 4.2 grade: 100.00% (2/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_mask != {WIDTH{1'b0}})
 <---4---->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '!='
4.2.1     | 1     | lhs == rhs  
4.2.2     | 1     | lhs != rhs  

index: 4.3 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_enable == SW_WRITE_ENABLE_POLARITY)
 <----6----->    <----------7----------->

index     | hit   | <6>   <7>   
-------------------------------- '=='
4.3.1     | 1     | lhs == rhs  
4.3.2     | 0     | lhs != rhs  

index: 5.1 grade: 75.00% (3/4) line: 59 source: get_sw_update[0]  = valid && action[0] && access[0];

(valid && action[0]) && access[0]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
5.1.1     | 1     | 0   -   -   
5.1.2     | 1     | -   0   -   
5.1.3     | 1     | -   -   0   
5.1.4     | 0     | 1   1   1   

index: 6.1 grade: 75.00% (3/4) line: 60 source: get_sw_update[1]  = valid && action[1] && access[1];

(valid && action[1]) && access[1]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
6.1.1     | 1     | 0   -   -   
6.1.2     | 0     | -   0   -   
6.1.3     | 1     | -   -   0   
6.1.4     | 1     | 1   1   1   

index: 7.1 grade: 50.00% (1/2) line: 71 source: update[0]     = write_enable == HW_WRITE_ENABLE_POLARITY;

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 0     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 50.00% (1/2) line: 72 source: update[1]     = set   != {HW_SET_WIDTH{1'b0}};

set != {HW_SET_WIDTH{1'b0}}
<1>    <--------2--------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
8.1.1     | 1     | lhs == rhs  
8.1.2     | 0     | lhs != rhs  

index: 9.1 grade: 50.00% (1/2) line: 73 source: update[2]     = clear != {HW_CLEAR_WIDTH{1'b0}};

clear != {HW_CLEAR_WIDTH{1'b0}}
<-1->    <---------2---------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
9.1.1     | 1     | lhs == rhs  
9.1.2     | 0     | lhs != rhs  

index: 10.1 grade: 25.00% (1/4) line: 74 source: get_hw_update = update[0] || update[1] || update[2];

(update[0] || update[1]) || update[2]
 <---1--->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
10.1.1    | 0     | 1   -   -   
10.1.2    | 0     | -   1   -   
10.1.3    | 0     | -   -   1   
10.1.4    | 1     | 0   0   0   

index: 11.1 grade: 100.00% (1/1/1) line: 90 source: if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin

PRECEDENCE_ACCESS == 0
<-------1------->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
11.1.1    | CONST | lhs == rhs  
11.1.2    | 1     | lhs != rhs  

index: 12.1 grade: 100.00% (3/3) line: 132 source: masked_data[0]  = write_mask & (~write_data);

write_mask & (~ write_data)
<---1---->      <---2---->

index     | hit   | rval | <1> <2> 
-----------------------------------
12.1.1    | 1     | 1    | 1   0   
12.1.2    | 1     | 0    | -   1   
12.1.3    | 1     | 0    | 0   -   

index: 13.1 grade: 100.00% (3/3) line: 133 source: masked_data[1]  = write_mask & ( write_data);

write_mask & write_data
<---1---->   <---2---->

index     | hit   | <1> <2> 
---------------------------- '&'
13.1.1    | 1     | 0   -   
13.1.2    | 1     | -   0   
13.1.3    | 1     | 1   1   

index: 14.1 grade: 100.00% (4/4) line: 135 source: `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1];

(current_value & (~ write_mask)) | masked_data[1]
 <-----1----->      <---2---->     <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
14.1.1    | 1     | 1    | -   -   1   
14.1.2    | 1     | 1    | 1   0   -   
14.1.3    | 1     | 0    | -   1   0   
14.1.4    | 1     | 0    | 0   -   0   

index: 15.1 grade: 0.00% (0/3) line: 136 source: `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]);

current_value & (~ masked_data[0])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
15.1.1    | 0     | 1    | 1   0   
15.1.2    | 0     | 0    | -   1   
15.1.3    | 0     | 0    | 0   -   

index: 16.1 grade: 0.00% (0/3) line: 137 source: `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]);

current_value & (~ masked_data[1])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
16.1.1    | 0     | 1    | 1   0   
16.1.2    | 0     | 0    | -   1   
16.1.3    | 0     | 0    | 0   -   

index: 17.1 grade: 0.00% (0/3) line: 139 source: `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0];

current_value | masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
17.1.1    | 0     | 1   -   
17.1.2    | 0     | -   1   
17.1.3    | 0     | 0   0   

index: 18.1 grade: 0.00% (0/3) line: 140 source: `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1];

current_value | masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
18.1.1    | 0     | 1   -   
18.1.2    | 0     | -   1   
18.1.3    | 0     | 0   0   

index: 19.1 grade: 0.00% (0/4) line: 142 source: `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0];

current_value ^ masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
19.1.1    | 0     | 0   0   
19.1.2    | 0     | 0   1   
19.1.3    | 0     | 1   0   
19.1.4    | 0     | 1   1   

index: 20.1 grade: 0.00% (0/4) line: 143 source: `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1];

current_value ^ masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
20.1.1    | 0     | 0   0   
20.1.2    | 0     | 0   1   
20.1.3    | 0     | 1   0   
20.1.4    | 0     | 1   1   

index: 21.1 grade: 100.00% (1/1/1) line: 165 source: if (HW_SET_WIDTH == WIDTH) begin

HW_SET_WIDTH == WIDTH
<----1----->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
21.1.1    | 1     | lhs == rhs  
21.1.2    | CONST | lhs != rhs  

index: 22.1 grade: 100.00% (1/1/1) line: 172 source: if (HW_CLEAR_WIDTH == WIDTH) begin

HW_CLEAR_WIDTH == WIDTH
<-----1------>    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
22.1.1    | CONST | lhs == rhs  
22.1.2    | 1     | lhs != rhs  

index: 23.1 grade: 50.00% (1/2) line: 179 source: if (write_enable == HW_WRITE_ENABLE_POLARITY) begin

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
23.1.1    | 0     | lhs == rhs  
23.1.2    | 1     | lhs != rhs  

index: 24.1 grade: 50.00% (2/4) line: 186 source: get_hw_next_value = (value & (~set_clear[1])) | set_clear[0];

(value & (~ set_clear[1])) | set_clear[0]
 <-1->      <----2----->     <----3----->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
24.1.1    | 0     | 1    | -   -   1   
24.1.2    | 1     | 1    | 1   0   -   
24.1.3    | 0     | 0    | -   1   0   
24.1.4    | 1     | 0    | 0   -   0   

index: 25.1 grade: 66.67% (2/3) line: 202 source: assign  o_sw_read_data    = w_read_data & i_mask;

w_read_data & i_mask
<----1---->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
25.1.1    | 1     | 0   -   
25.1.2    | 0     | -   0   
25.1.3    | 1     | 1   1   

index: 26.1 grade: 66.67% (2/3) line: 206 source: assign  o_value           = w_value & i_mask;

w_value & i_mask
<--1-->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
26.1.1    | 1     | 0   -   
26.1.2    | 0     | -   0   
26.1.3    | 1     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.g_ECC_STATUS.u_bit_field.g_value
Type name: rggen_bit_field.g_value_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 4 of 6
Number of uncovered expressions: 2 of 6
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 285    | ! i_rst_n                                          
2.1    | 50.00% (2/4)  | 288    | (w_sw_update[0] || w_sw_update[1]) || w_hw_update  

index: 1.1 grade: 100.00% (2/2) line: 285 source: if (!i_rst_n) begin

! i_rst_n
  <--1-->

index     | hit   | <1> 
------------------------ '!'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 50.00% (2/4) line: 288 source: else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin

(w_sw_update[0] || w_sw_update[1]) || w_hw_update
 <-----1------>    <-----2------>     <----3---->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 0     | 1   -   -   
2.1.2     | 1     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered expressions: 24 of 34
Number of uncovered expressions: 10 of 34
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 40     | | {1'b0,w_match}                                   
2.1    | 50.00% (2/4)  | 81     | (w_frontdoor_valid || w_backdoor_valid) || w_pending_valid 
3.1    | 50.00% (2/4)  | 82     | w_backdoor_valid ? w_read_mask[1] : w_read_mask[0] 
4.1    | 50.00% (2/4)  | 83     | w_backdoor_valid ? w_write_mask[1] : w_write_mask[0] 
5.1    | 50.00% (2/4)  | 84     | w_backdoor_valid ? w_write_data[1] : w_write_data[0] 
6.1    | 100.00% (3/3) | 86     | i_register_valid && w_active                       
7.1    | 100.00% (2/2) | 101    | i < WORDS                                          
8.1    | 100.00% (2/2) | 102    | j < BUS_BYTE_WIDTH                                 
9.1    | 75.00% (3/4)  | 103    | (accessible && (write_access == bus_access[0])) && match[i] 
9.2    | 100.00% (2/2) | 103    | (write_access == bus_access[0])                    
10.1   | 66.67% (2/3)  | 120    | (! w_backdoor_valid) && w_active                   

index: 1.1 grade: 100.00% (2/2) line: 40 source: assign  w_active  = |{1'b0, w_match};

| {1'b0,w_match}
<------1------->

index     | hit   | <1> 
------------------------ '|'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 50.00% (2/4) line: 81 source: assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid;

(w_frontdoor_valid || w_backdoor_valid) || w_pending_valid
 <-------1------->    <------2------->     <------3------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 1     | 1   -   -   
2.1.2     | 0     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   

index: 3.1 grade: 50.00% (2/4) line: 82 source: assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0];

w_backdoor_valid ? w_read_mask[1] : w_read_mask[0]
<------1------->   <-----2------>   <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
3.1.1     | 1     | 1    | 0   -   1   
3.1.2     | 0     | 1    | 1   1   -   
3.1.3     | 1     | 0    | 0   -   0   
3.1.4     | 0     | 0    | 1   0   -   

index: 4.1 grade: 50.00% (2/4) line: 83 source: assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0];

w_backdoor_valid ? w_write_mask[1] : w_write_mask[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 1     | 1    | 0   -   1   
4.1.2     | 0     | 1    | 1   1   -   
4.1.3     | 1     | 0    | 0   -   0   
4.1.4     | 0     | 0    | 1   0   -   

index: 5.1 grade: 50.00% (2/4) line: 84 source: assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0];

w_backdoor_valid ? w_write_data[1] : w_write_data[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | 1     | 1    | 0   -   1   
5.1.2     | 0     | 1    | 1   1   -   
5.1.3     | 1     | 0    | 0   -   0   
5.1.4     | 0     | 0    | 1   0   -   

index: 6.1 grade: 100.00% (3/3) line: 86 source: assign  w_frontdoor_valid = i_register_valid && w_active;

i_register_valid && w_active
<------1------->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 1     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 1     | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 101 source: for (i = 0;i < WORDS;i = i + 1) begin

i < WORDS
<1> <-2->

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 1     | lhs < rhs   
7.1.2     | 1     | lhs >= rhs  

index: 8.1 grade: 100.00% (2/2) line: 102 source: for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin

j < BUS_BYTE_WIDTH
<1> <-----2------>

index     | hit   | <1>   <2>   
-------------------------------- '<'
8.1.1     | 1     | lhs < rhs   
8.1.2     | 1     | lhs >= rhs  

index: 9.1 grade: 75.00% (3/4) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(accessible && (write_access == bus_access[0])) && match[i]
 <---1---->    <--------------2-------------->     <--3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
9.1.1     | 0     | 0   -   -   
9.1.2     | 1     | -   0   -   
9.1.3     | 1     | -   -   0   
9.1.4     | 1     | 1   1   1   

index: 9.2 grade: 100.00% (2/2) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(write_access == bus_access[0])
 <----4----->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '=='
9.2.1     | 1     | lhs == rhs  
9.2.2     | 1     | lhs != rhs  

index: 10.1 grade: 66.67% (2/3) line: 120 source: assign  o_register_ready      = (!w_backdoor_valid) && w_active;

(! w_backdoor_valid) && w_active
   <------1------->     <--2--->

index     | hit   | rval | <1> <2> 
-----------------------------------
10.1.1    | 1     | 1    | 0   1   
10.1.2    | 1     | 0    | -   0   
10.1.3    | 0     | 0    | 1   -   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered expressions: 6 of 19
Number of uncovered expressions: 13 of 19
Number of excluded expressions: 3
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (2/4)  | 22     | (w_address_match && w_access_match) && i_additional_match 
2.1    | 0.00% (0/2)   | 32     | value > 0                                          
3.1    | 100.00% (1/1/1) | 43     | START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB] 
4.1    | 100.00% (2/2) | 44     | address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB] 
5.1    | 0.00% (0/3)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
5.2    | 0.00% (0/2)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) 
5.3    | 0.00% (0/2)   | 49     | (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
6.1    | 100.00% (1/1/2) | 57     | READABLE && WRITABLE                               
7.1    | 0.00% (0/2)   | 61     | ! access[ACCESS_BIT]                               

index: 1.1 grade: 50.00% (2/4) line: 22 source: assign  o_match         = w_address_match && w_access_match && i_additional_match;

(w_address_match && w_access_match) && i_additional_match
 <------1------>    <-----2------>     <-------3-------->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
1.1.1     | 1     | 0   -   -   
1.1.2     | 0     | -   0   -   
1.1.3     | 0     | -   -   0   
1.1.4     | 1     | 1   1   1   

index: 2.1 grade: 0.00% (0/2) line: 32 source: while (value > 0) begin

value > 0
<-1->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
2.1.1     | 0     | lhs > rhs   
2.1.2     | 0     | lhs <= rhs  

index: 3.1 grade: 100.00% (1/1/1) line: 43 source: if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin

START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB]
<-------------1-------------->    <------------2------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 1     | lhs == rhs  
3.1.2     | CONST | lhs != rhs  

index: 4.1 grade: 100.00% (2/2) line: 44 source: match_address = (address[WIDTH-1:LSB] == START_ADDRESS[WIDTH-1:LSB]);

address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB]
<----------1----------->    <-------------2-------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
4.1.1     | 1     | lhs == rhs  
4.1.2     | 1     | lhs != rhs  

index: 5.1 grade: 0.00% (0/3) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
<----------------------------1----------------------------->    <---------------------------2---------------------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
5.1.1     | 0     | 0   -   
5.1.2     | 0     | -   0   
5.1.3     | 0     | 1   1   

index: 5.2 grade: 0.00% (0/2) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB])
 <----------3----------->    <-------------4-------------->

index     | hit   | <3>   <4>   
-------------------------------- '>='
5.2.1     | 0     | lhs < rhs   
5.2.2     | 0     | lhs >= rhs  

index: 5.3 grade: 0.00% (0/2) line: 49 source: (address[WIDTH-1:LSB] <= END_ADDRESS[WIDTH-1:LSB]  );

(address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
 <----------5----------->    <------------6------------->

index     | hit   | <5>   <6>   
-------------------------------- '<='
5.3.1     | 0     | lhs > rhs   
5.3.2     | 0     | lhs <= rhs  

index: 6.1 grade: 100.00% (1/1/2) line: 57 source: if (READABLE && WRITABLE) begin

READABLE && WRITABLE
<--1--->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | CONST | 0   -   
6.1.2     | CONST | -   0   
6.1.3     | 1     | 1   1   

index: 7.1 grade: 0.00% (0/2) line: 61 source: match_access  = !access[ACCESS_BIT];

! access[ACCESS_BIT]
  <-------1-------->

index     | hit   | <1> 
------------------------ '!'
7.1.1     | 0     | 1   
7.1.2     | 0     | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.g_ECC_EN_IRQ_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 41 of 77
Number of uncovered expressions: 36 of 77
Number of excluded expressions: 8
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (1/1/2) | 52     | (SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)     
1.2    | 100.00% (1/1/1) | 52     | (SW_READ_ACTION == 2)                              
1.3    | 100.00% (1/1/1) | 53     | (SW_READ_ACTION == 3)                              
2.1    | 100.00% (1/1/1) | 54     | SW_WRITE_ACTION != 0                               
3.1    | 100.00% (2/2) | 56     | read_mask != {WIDTH{1'b0}}                         
4.1    | 50.00% (2/4)  | 57     | ((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done) 
4.2    | 100.00% (2/2) | 57     | (write_mask != {WIDTH{1'b0}})                      
4.3    | 50.00% (1/2)  | 57     | (write_enable == SW_WRITE_ENABLE_POLARITY)         
5.1    | 75.00% (3/4)  | 59     | (valid && action[0]) && access[0]                  
6.1    | 75.00% (3/4)  | 60     | (valid && action[1]) && access[1]                  
7.1    | 50.00% (1/2)  | 71     | write_enable == HW_WRITE_ENABLE_POLARITY           
8.1    | 50.00% (1/2)  | 72     | set != {HW_SET_WIDTH{1'b0}}                        
9.1    | 50.00% (1/2)  | 73     | clear != {HW_CLEAR_WIDTH{1'b0}}                    
10.1   | 25.00% (1/4)  | 74     | (update[0] || update[1]) || update[2]              
11.1   | 100.00% (1/1/1) | 90     | PRECEDENCE_ACCESS == 0                             
12.1   | 100.00% (3/3) | 132    | write_mask & (~ write_data)                        
13.1   | 100.00% (3/3) | 133    | write_mask & write_data                            
14.1   | 100.00% (4/4) | 135    | (current_value & (~ write_mask)) | masked_data[1]  
15.1   | 0.00% (0/3)   | 136    | current_value & (~ masked_data[0])                 
16.1   | 0.00% (0/3)   | 137    | current_value & (~ masked_data[1])                 
17.1   | 0.00% (0/3)   | 139    | current_value | masked_data[0]                     
18.1   | 0.00% (0/3)   | 140    | current_value | masked_data[1]                     
19.1   | 0.00% (0/4)   | 142    | current_value ^ masked_data[0]                     
20.1   | 0.00% (0/4)   | 143    | current_value ^ masked_data[1]                     
21.1   | 100.00% (1/1/1) | 165    | HW_SET_WIDTH == WIDTH                              
22.1   | 100.00% (1/1/1) | 172    | HW_CLEAR_WIDTH == WIDTH                            
23.1   | 50.00% (1/2)  | 179    | write_enable == HW_WRITE_ENABLE_POLARITY           
24.1   | 50.00% (2/4)  | 186    | (value & (~ set_clear[1])) | set_clear[0]          
25.1   | 66.67% (2/3)  | 202    | w_read_data & i_mask                               
26.1   | 66.67% (2/3)  | 206    | w_value & i_mask                                   

index: 1.1 grade: 100.00% (1/1/2) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)
<---------1--------->    <---------2--------->

index     | hit   | <1> <2> 
---------------------------- '||'
1.1.1     | CONST | 1   -   
1.1.2     | CONST | -   1   
1.1.3     | 1     | 0   0   

index: 1.2 grade: 100.00% (1/1/1) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2)
 <-----3------>    <4>

index     | hit   | <3>   <4>   
-------------------------------- '=='
1.2.1     | CONST | lhs == rhs  
1.2.2     | 1     | lhs != rhs  

index: 1.3 grade: 100.00% (1/1/1) line: 53 source: (SW_READ_ACTION  == `RGGEN_READ_SET  );

(SW_READ_ACTION == 3)
 <-----5------>    <6>

index     | hit   | <5>   <6>   
-------------------------------- '=='
1.3.1     | CONST | lhs == rhs  
1.3.2     | 1     | lhs != rhs  

index: 2.1 grade: 100.00% (1/1/1) line: 54 source: action[1] = (SW_WRITE_ACTION != `RGGEN_WRITE_NONE);

SW_WRITE_ACTION != 0
<------1------>    <2>

index     | hit   | <1>   <2>   
-------------------------------- '!='
2.1.1     | CONST | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 100.00% (2/2) line: 56 source: access[0] = (read_mask  != {WIDTH{1'b0}});

read_mask != {WIDTH{1'b0}}
<---1--->    <-----2----->

index     | hit   | <1>   <2>   
-------------------------------- '!='
3.1.1     | 1     | lhs == rhs  
3.1.2     | 1     | lhs != rhs  

index: 4.1 grade: 50.00% (2/4) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done)
 <-------------1------------->    <-------------------2-------------------->        <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 1     | 1    | 1   1   0   
4.1.2     | 0     | 0    | -   -   1   
4.1.3     | 0     | 0    | -   0   -   
4.1.4     | 1     | 0    | 0   -   -   

index: 4.2 grade: 100.00% (2/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_mask != {WIDTH{1'b0}})
 <---4---->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '!='
4.2.1     | 1     | lhs == rhs  
4.2.2     | 1     | lhs != rhs  

index: 4.3 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_enable == SW_WRITE_ENABLE_POLARITY)
 <----6----->    <----------7----------->

index     | hit   | <6>   <7>   
-------------------------------- '=='
4.3.1     | 1     | lhs == rhs  
4.3.2     | 0     | lhs != rhs  

index: 5.1 grade: 75.00% (3/4) line: 59 source: get_sw_update[0]  = valid && action[0] && access[0];

(valid && action[0]) && access[0]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
5.1.1     | 1     | 0   -   -   
5.1.2     | 1     | -   0   -   
5.1.3     | 1     | -   -   0   
5.1.4     | 0     | 1   1   1   

index: 6.1 grade: 75.00% (3/4) line: 60 source: get_sw_update[1]  = valid && action[1] && access[1];

(valid && action[1]) && access[1]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
6.1.1     | 1     | 0   -   -   
6.1.2     | 0     | -   0   -   
6.1.3     | 1     | -   -   0   
6.1.4     | 1     | 1   1   1   

index: 7.1 grade: 50.00% (1/2) line: 71 source: update[0]     = write_enable == HW_WRITE_ENABLE_POLARITY;

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 0     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 50.00% (1/2) line: 72 source: update[1]     = set   != {HW_SET_WIDTH{1'b0}};

set != {HW_SET_WIDTH{1'b0}}
<1>    <--------2--------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
8.1.1     | 1     | lhs == rhs  
8.1.2     | 0     | lhs != rhs  

index: 9.1 grade: 50.00% (1/2) line: 73 source: update[2]     = clear != {HW_CLEAR_WIDTH{1'b0}};

clear != {HW_CLEAR_WIDTH{1'b0}}
<-1->    <---------2---------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
9.1.1     | 1     | lhs == rhs  
9.1.2     | 0     | lhs != rhs  

index: 10.1 grade: 25.00% (1/4) line: 74 source: get_hw_update = update[0] || update[1] || update[2];

(update[0] || update[1]) || update[2]
 <---1--->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
10.1.1    | 0     | 1   -   -   
10.1.2    | 0     | -   1   -   
10.1.3    | 0     | -   -   1   
10.1.4    | 1     | 0   0   0   

index: 11.1 grade: 100.00% (1/1/1) line: 90 source: if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin

PRECEDENCE_ACCESS == 0
<-------1------->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
11.1.1    | CONST | lhs == rhs  
11.1.2    | 1     | lhs != rhs  

index: 12.1 grade: 100.00% (3/3) line: 132 source: masked_data[0]  = write_mask & (~write_data);

write_mask & (~ write_data)
<---1---->      <---2---->

index     | hit   | rval | <1> <2> 
-----------------------------------
12.1.1    | 1     | 1    | 1   0   
12.1.2    | 1     | 0    | -   1   
12.1.3    | 1     | 0    | 0   -   

index: 13.1 grade: 100.00% (3/3) line: 133 source: masked_data[1]  = write_mask & ( write_data);

write_mask & write_data
<---1---->   <---2---->

index     | hit   | <1> <2> 
---------------------------- '&'
13.1.1    | 1     | 0   -   
13.1.2    | 1     | -   0   
13.1.3    | 1     | 1   1   

index: 14.1 grade: 100.00% (4/4) line: 135 source: `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1];

(current_value & (~ write_mask)) | masked_data[1]
 <-----1----->      <---2---->     <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
14.1.1    | 1     | 1    | -   -   1   
14.1.2    | 1     | 1    | 1   0   -   
14.1.3    | 1     | 0    | -   1   0   
14.1.4    | 1     | 0    | 0   -   0   

index: 15.1 grade: 0.00% (0/3) line: 136 source: `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]);

current_value & (~ masked_data[0])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
15.1.1    | 0     | 1    | 1   0   
15.1.2    | 0     | 0    | -   1   
15.1.3    | 0     | 0    | 0   -   

index: 16.1 grade: 0.00% (0/3) line: 137 source: `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]);

current_value & (~ masked_data[1])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
16.1.1    | 0     | 1    | 1   0   
16.1.2    | 0     | 0    | -   1   
16.1.3    | 0     | 0    | 0   -   

index: 17.1 grade: 0.00% (0/3) line: 139 source: `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0];

current_value | masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
17.1.1    | 0     | 1   -   
17.1.2    | 0     | -   1   
17.1.3    | 0     | 0   0   

index: 18.1 grade: 0.00% (0/3) line: 140 source: `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1];

current_value | masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
18.1.1    | 0     | 1   -   
18.1.2    | 0     | -   1   
18.1.3    | 0     | 0   0   

index: 19.1 grade: 0.00% (0/4) line: 142 source: `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0];

current_value ^ masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
19.1.1    | 0     | 0   0   
19.1.2    | 0     | 0   1   
19.1.3    | 0     | 1   0   
19.1.4    | 0     | 1   1   

index: 20.1 grade: 0.00% (0/4) line: 143 source: `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1];

current_value ^ masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
20.1.1    | 0     | 0   0   
20.1.2    | 0     | 0   1   
20.1.3    | 0     | 1   0   
20.1.4    | 0     | 1   1   

index: 21.1 grade: 100.00% (1/1/1) line: 165 source: if (HW_SET_WIDTH == WIDTH) begin

HW_SET_WIDTH == WIDTH
<----1----->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
21.1.1    | 1     | lhs == rhs  
21.1.2    | CONST | lhs != rhs  

index: 22.1 grade: 100.00% (1/1/1) line: 172 source: if (HW_CLEAR_WIDTH == WIDTH) begin

HW_CLEAR_WIDTH == WIDTH
<-----1------>    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
22.1.1    | 1     | lhs == rhs  
22.1.2    | CONST | lhs != rhs  

index: 23.1 grade: 50.00% (1/2) line: 179 source: if (write_enable == HW_WRITE_ENABLE_POLARITY) begin

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
23.1.1    | 0     | lhs == rhs  
23.1.2    | 1     | lhs != rhs  

index: 24.1 grade: 50.00% (2/4) line: 186 source: get_hw_next_value = (value & (~set_clear[1])) | set_clear[0];

(value & (~ set_clear[1])) | set_clear[0]
 <-1->      <----2----->     <----3----->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
24.1.1    | 0     | 1    | -   -   1   
24.1.2    | 1     | 1    | 1   0   -   
24.1.3    | 0     | 0    | -   1   0   
24.1.4    | 1     | 0    | 0   -   0   

index: 25.1 grade: 66.67% (2/3) line: 202 source: assign  o_sw_read_data    = w_read_data & i_mask;

w_read_data & i_mask
<----1---->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
25.1.1    | 1     | 0   -   
25.1.2    | 0     | -   0   
25.1.3    | 1     | 1   1   

index: 26.1 grade: 66.67% (2/3) line: 206 source: assign  o_value           = w_value & i_mask;

w_value & i_mask
<--1-->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
26.1.1    | 1     | 0   -   
26.1.2    | 0     | -   0   
26.1.3    | 1     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.g_ECC_EN_IRQ_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 4 of 6
Number of uncovered expressions: 2 of 6
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 285    | ! i_rst_n                                          
2.1    | 50.00% (2/4)  | 288    | (w_sw_update[0] || w_sw_update[1]) || w_hw_update  

index: 1.1 grade: 100.00% (2/2) line: 285 source: if (!i_rst_n) begin

! i_rst_n
  <--1-->

index     | hit   | <1> 
------------------------ '!'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 50.00% (2/4) line: 288 source: else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin

(w_sw_update[0] || w_sw_update[1]) || w_hw_update
 <-----1------>    <-----2------>     <----3---->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 0     | 1   -   -   
2.1.2     | 1     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered expressions: 24 of 34
Number of uncovered expressions: 10 of 34
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 40     | | {1'b0,w_match}                                   
2.1    | 50.00% (2/4)  | 81     | (w_frontdoor_valid || w_backdoor_valid) || w_pending_valid 
3.1    | 50.00% (2/4)  | 82     | w_backdoor_valid ? w_read_mask[1] : w_read_mask[0] 
4.1    | 50.00% (2/4)  | 83     | w_backdoor_valid ? w_write_mask[1] : w_write_mask[0] 
5.1    | 50.00% (2/4)  | 84     | w_backdoor_valid ? w_write_data[1] : w_write_data[0] 
6.1    | 100.00% (3/3) | 86     | i_register_valid && w_active                       
7.1    | 100.00% (2/2) | 101    | i < WORDS                                          
8.1    | 100.00% (2/2) | 102    | j < BUS_BYTE_WIDTH                                 
9.1    | 75.00% (3/4)  | 103    | (accessible && (write_access == bus_access[0])) && match[i] 
9.2    | 100.00% (2/2) | 103    | (write_access == bus_access[0])                    
10.1   | 66.67% (2/3)  | 120    | (! w_backdoor_valid) && w_active                   

index: 1.1 grade: 100.00% (2/2) line: 40 source: assign  w_active  = |{1'b0, w_match};

| {1'b0,w_match}
<------1------->

index     | hit   | <1> 
------------------------ '|'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 50.00% (2/4) line: 81 source: assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid;

(w_frontdoor_valid || w_backdoor_valid) || w_pending_valid
 <-------1------->    <------2------->     <------3------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 1     | 1   -   -   
2.1.2     | 0     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   

index: 3.1 grade: 50.00% (2/4) line: 82 source: assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0];

w_backdoor_valid ? w_read_mask[1] : w_read_mask[0]
<------1------->   <-----2------>   <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
3.1.1     | 1     | 1    | 0   -   1   
3.1.2     | 0     | 1    | 1   1   -   
3.1.3     | 1     | 0    | 0   -   0   
3.1.4     | 0     | 0    | 1   0   -   

index: 4.1 grade: 50.00% (2/4) line: 83 source: assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0];

w_backdoor_valid ? w_write_mask[1] : w_write_mask[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 1     | 1    | 0   -   1   
4.1.2     | 0     | 1    | 1   1   -   
4.1.3     | 1     | 0    | 0   -   0   
4.1.4     | 0     | 0    | 1   0   -   

index: 5.1 grade: 50.00% (2/4) line: 84 source: assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0];

w_backdoor_valid ? w_write_data[1] : w_write_data[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | 1     | 1    | 0   -   1   
5.1.2     | 0     | 1    | 1   1   -   
5.1.3     | 1     | 0    | 0   -   0   
5.1.4     | 0     | 0    | 1   0   -   

index: 6.1 grade: 100.00% (3/3) line: 86 source: assign  w_frontdoor_valid = i_register_valid && w_active;

i_register_valid && w_active
<------1------->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 1     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 1     | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 101 source: for (i = 0;i < WORDS;i = i + 1) begin

i < WORDS
<1> <-2->

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 1     | lhs < rhs   
7.1.2     | 1     | lhs >= rhs  

index: 8.1 grade: 100.00% (2/2) line: 102 source: for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin

j < BUS_BYTE_WIDTH
<1> <-----2------>

index     | hit   | <1>   <2>   
-------------------------------- '<'
8.1.1     | 1     | lhs < rhs   
8.1.2     | 1     | lhs >= rhs  

index: 9.1 grade: 75.00% (3/4) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(accessible && (write_access == bus_access[0])) && match[i]
 <---1---->    <--------------2-------------->     <--3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
9.1.1     | 0     | 0   -   -   
9.1.2     | 1     | -   0   -   
9.1.3     | 1     | -   -   0   
9.1.4     | 1     | 1   1   1   

index: 9.2 grade: 100.00% (2/2) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(write_access == bus_access[0])
 <----4----->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '=='
9.2.1     | 1     | lhs == rhs  
9.2.2     | 1     | lhs != rhs  

index: 10.1 grade: 66.67% (2/3) line: 120 source: assign  o_register_ready      = (!w_backdoor_valid) && w_active;

(! w_backdoor_valid) && w_active
   <------1------->     <--2--->

index     | hit   | rval | <1> <2> 
-----------------------------------
10.1.1    | 1     | 1    | 0   1   
10.1.2    | 1     | 0    | -   0   
10.1.3    | 0     | 0    | 1   -   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered expressions: 6 of 19
Number of uncovered expressions: 13 of 19
Number of excluded expressions: 3
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (2/4)  | 22     | (w_address_match && w_access_match) && i_additional_match 
2.1    | 0.00% (0/2)   | 32     | value > 0                                          
3.1    | 100.00% (1/1/1) | 43     | START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB] 
4.1    | 100.00% (2/2) | 44     | address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB] 
5.1    | 0.00% (0/3)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
5.2    | 0.00% (0/2)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) 
5.3    | 0.00% (0/2)   | 49     | (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
6.1    | 100.00% (1/1/2) | 57     | READABLE && WRITABLE                               
7.1    | 0.00% (0/2)   | 61     | ! access[ACCESS_BIT]                               

index: 1.1 grade: 50.00% (2/4) line: 22 source: assign  o_match         = w_address_match && w_access_match && i_additional_match;

(w_address_match && w_access_match) && i_additional_match
 <------1------>    <-----2------>     <-------3-------->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
1.1.1     | 1     | 0   -   -   
1.1.2     | 0     | -   0   -   
1.1.3     | 0     | -   -   0   
1.1.4     | 1     | 1   1   1   

index: 2.1 grade: 0.00% (0/2) line: 32 source: while (value > 0) begin

value > 0
<-1->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
2.1.1     | 0     | lhs > rhs   
2.1.2     | 0     | lhs <= rhs  

index: 3.1 grade: 100.00% (1/1/1) line: 43 source: if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin

START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB]
<-------------1-------------->    <------------2------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 1     | lhs == rhs  
3.1.2     | CONST | lhs != rhs  

index: 4.1 grade: 100.00% (2/2) line: 44 source: match_address = (address[WIDTH-1:LSB] == START_ADDRESS[WIDTH-1:LSB]);

address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB]
<----------1----------->    <-------------2-------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
4.1.1     | 1     | lhs == rhs  
4.1.2     | 1     | lhs != rhs  

index: 5.1 grade: 0.00% (0/3) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
<----------------------------1----------------------------->    <---------------------------2---------------------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
5.1.1     | 0     | 0   -   
5.1.2     | 0     | -   0   
5.1.3     | 0     | 1   1   

index: 5.2 grade: 0.00% (0/2) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB])
 <----------3----------->    <-------------4-------------->

index     | hit   | <3>   <4>   
-------------------------------- '>='
5.2.1     | 0     | lhs < rhs   
5.2.2     | 0     | lhs >= rhs  

index: 5.3 grade: 0.00% (0/2) line: 49 source: (address[WIDTH-1:LSB] <= END_ADDRESS[WIDTH-1:LSB]  );

(address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
 <----------5----------->    <------------6------------->

index     | hit   | <5>   <6>   
-------------------------------- '<='
5.3.1     | 0     | lhs > rhs   
5.3.2     | 0     | lhs <= rhs  

index: 6.1 grade: 100.00% (1/1/2) line: 57 source: if (READABLE && WRITABLE) begin

READABLE && WRITABLE
<--1--->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | CONST | 0   -   
6.1.2     | CONST | -   0   
6.1.3     | 1     | 1   1   

index: 7.1 grade: 0.00% (0/2) line: 61 source: match_access  = !access[ACCESS_BIT];

! access[ACCESS_BIT]
  <-------1-------->

index     | hit   | <1> 
------------------------ '!'
7.1.1     | 0     | 1   
7.1.2     | 0     | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.g_ECC_ONOFF_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 41 of 77
Number of uncovered expressions: 36 of 77
Number of excluded expressions: 8
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (1/1/2) | 52     | (SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)     
1.2    | 100.00% (1/1/1) | 52     | (SW_READ_ACTION == 2)                              
1.3    | 100.00% (1/1/1) | 53     | (SW_READ_ACTION == 3)                              
2.1    | 100.00% (1/1/1) | 54     | SW_WRITE_ACTION != 0                               
3.1    | 100.00% (2/2) | 56     | read_mask != {WIDTH{1'b0}}                         
4.1    | 50.00% (2/4)  | 57     | ((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done) 
4.2    | 100.00% (2/2) | 57     | (write_mask != {WIDTH{1'b0}})                      
4.3    | 50.00% (1/2)  | 57     | (write_enable == SW_WRITE_ENABLE_POLARITY)         
5.1    | 75.00% (3/4)  | 59     | (valid && action[0]) && access[0]                  
6.1    | 75.00% (3/4)  | 60     | (valid && action[1]) && access[1]                  
7.1    | 50.00% (1/2)  | 71     | write_enable == HW_WRITE_ENABLE_POLARITY           
8.1    | 50.00% (1/2)  | 72     | set != {HW_SET_WIDTH{1'b0}}                        
9.1    | 50.00% (1/2)  | 73     | clear != {HW_CLEAR_WIDTH{1'b0}}                    
10.1   | 25.00% (1/4)  | 74     | (update[0] || update[1]) || update[2]              
11.1   | 100.00% (1/1/1) | 90     | PRECEDENCE_ACCESS == 0                             
12.1   | 100.00% (3/3) | 132    | write_mask & (~ write_data)                        
13.1   | 100.00% (3/3) | 133    | write_mask & write_data                            
14.1   | 100.00% (4/4) | 135    | (current_value & (~ write_mask)) | masked_data[1]  
15.1   | 0.00% (0/3)   | 136    | current_value & (~ masked_data[0])                 
16.1   | 0.00% (0/3)   | 137    | current_value & (~ masked_data[1])                 
17.1   | 0.00% (0/3)   | 139    | current_value | masked_data[0]                     
18.1   | 0.00% (0/3)   | 140    | current_value | masked_data[1]                     
19.1   | 0.00% (0/4)   | 142    | current_value ^ masked_data[0]                     
20.1   | 0.00% (0/4)   | 143    | current_value ^ masked_data[1]                     
21.1   | 100.00% (1/1/1) | 165    | HW_SET_WIDTH == WIDTH                              
22.1   | 100.00% (1/1/1) | 172    | HW_CLEAR_WIDTH == WIDTH                            
23.1   | 50.00% (1/2)  | 179    | write_enable == HW_WRITE_ENABLE_POLARITY           
24.1   | 50.00% (2/4)  | 186    | (value & (~ set_clear[1])) | set_clear[0]          
25.1   | 66.67% (2/3)  | 202    | w_read_data & i_mask                               
26.1   | 66.67% (2/3)  | 206    | w_value & i_mask                                   

index: 1.1 grade: 100.00% (1/1/2) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)
<---------1--------->    <---------2--------->

index     | hit   | <1> <2> 
---------------------------- '||'
1.1.1     | CONST | 1   -   
1.1.2     | CONST | -   1   
1.1.3     | 1     | 0   0   

index: 1.2 grade: 100.00% (1/1/1) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2)
 <-----3------>    <4>

index     | hit   | <3>   <4>   
-------------------------------- '=='
1.2.1     | CONST | lhs == rhs  
1.2.2     | 1     | lhs != rhs  

index: 1.3 grade: 100.00% (1/1/1) line: 53 source: (SW_READ_ACTION  == `RGGEN_READ_SET  );

(SW_READ_ACTION == 3)
 <-----5------>    <6>

index     | hit   | <5>   <6>   
-------------------------------- '=='
1.3.1     | CONST | lhs == rhs  
1.3.2     | 1     | lhs != rhs  

index: 2.1 grade: 100.00% (1/1/1) line: 54 source: action[1] = (SW_WRITE_ACTION != `RGGEN_WRITE_NONE);

SW_WRITE_ACTION != 0
<------1------>    <2>

index     | hit   | <1>   <2>   
-------------------------------- '!='
2.1.1     | CONST | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 100.00% (2/2) line: 56 source: access[0] = (read_mask  != {WIDTH{1'b0}});

read_mask != {WIDTH{1'b0}}
<---1--->    <-----2----->

index     | hit   | <1>   <2>   
-------------------------------- '!='
3.1.1     | 1     | lhs == rhs  
3.1.2     | 1     | lhs != rhs  

index: 4.1 grade: 50.00% (2/4) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done)
 <-------------1------------->    <-------------------2-------------------->        <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 1     | 1    | 1   1   0   
4.1.2     | 0     | 0    | -   -   1   
4.1.3     | 0     | 0    | -   0   -   
4.1.4     | 1     | 0    | 0   -   -   

index: 4.2 grade: 100.00% (2/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_mask != {WIDTH{1'b0}})
 <---4---->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '!='
4.2.1     | 1     | lhs == rhs  
4.2.2     | 1     | lhs != rhs  

index: 4.3 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_enable == SW_WRITE_ENABLE_POLARITY)
 <----6----->    <----------7----------->

index     | hit   | <6>   <7>   
-------------------------------- '=='
4.3.1     | 1     | lhs == rhs  
4.3.2     | 0     | lhs != rhs  

index: 5.1 grade: 75.00% (3/4) line: 59 source: get_sw_update[0]  = valid && action[0] && access[0];

(valid && action[0]) && access[0]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
5.1.1     | 1     | 0   -   -   
5.1.2     | 1     | -   0   -   
5.1.3     | 1     | -   -   0   
5.1.4     | 0     | 1   1   1   

index: 6.1 grade: 75.00% (3/4) line: 60 source: get_sw_update[1]  = valid && action[1] && access[1];

(valid && action[1]) && access[1]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
6.1.1     | 1     | 0   -   -   
6.1.2     | 0     | -   0   -   
6.1.3     | 1     | -   -   0   
6.1.4     | 1     | 1   1   1   

index: 7.1 grade: 50.00% (1/2) line: 71 source: update[0]     = write_enable == HW_WRITE_ENABLE_POLARITY;

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 0     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 50.00% (1/2) line: 72 source: update[1]     = set   != {HW_SET_WIDTH{1'b0}};

set != {HW_SET_WIDTH{1'b0}}
<1>    <--------2--------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
8.1.1     | 1     | lhs == rhs  
8.1.2     | 0     | lhs != rhs  

index: 9.1 grade: 50.00% (1/2) line: 73 source: update[2]     = clear != {HW_CLEAR_WIDTH{1'b0}};

clear != {HW_CLEAR_WIDTH{1'b0}}
<-1->    <---------2---------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
9.1.1     | 1     | lhs == rhs  
9.1.2     | 0     | lhs != rhs  

index: 10.1 grade: 25.00% (1/4) line: 74 source: get_hw_update = update[0] || update[1] || update[2];

(update[0] || update[1]) || update[2]
 <---1--->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
10.1.1    | 0     | 1   -   -   
10.1.2    | 0     | -   1   -   
10.1.3    | 0     | -   -   1   
10.1.4    | 1     | 0   0   0   

index: 11.1 grade: 100.00% (1/1/1) line: 90 source: if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin

PRECEDENCE_ACCESS == 0
<-------1------->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
11.1.1    | CONST | lhs == rhs  
11.1.2    | 1     | lhs != rhs  

index: 12.1 grade: 100.00% (3/3) line: 132 source: masked_data[0]  = write_mask & (~write_data);

write_mask & (~ write_data)
<---1---->      <---2---->

index     | hit   | rval | <1> <2> 
-----------------------------------
12.1.1    | 1     | 1    | 1   0   
12.1.2    | 1     | 0    | -   1   
12.1.3    | 1     | 0    | 0   -   

index: 13.1 grade: 100.00% (3/3) line: 133 source: masked_data[1]  = write_mask & ( write_data);

write_mask & write_data
<---1---->   <---2---->

index     | hit   | <1> <2> 
---------------------------- '&'
13.1.1    | 1     | 0   -   
13.1.2    | 1     | -   0   
13.1.3    | 1     | 1   1   

index: 14.1 grade: 100.00% (4/4) line: 135 source: `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1];

(current_value & (~ write_mask)) | masked_data[1]
 <-----1----->      <---2---->     <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
14.1.1    | 1     | 1    | -   -   1   
14.1.2    | 1     | 1    | 1   0   -   
14.1.3    | 1     | 0    | -   1   0   
14.1.4    | 1     | 0    | 0   -   0   

index: 15.1 grade: 0.00% (0/3) line: 136 source: `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]);

current_value & (~ masked_data[0])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
15.1.1    | 0     | 1    | 1   0   
15.1.2    | 0     | 0    | -   1   
15.1.3    | 0     | 0    | 0   -   

index: 16.1 grade: 0.00% (0/3) line: 137 source: `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]);

current_value & (~ masked_data[1])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
16.1.1    | 0     | 1    | 1   0   
16.1.2    | 0     | 0    | -   1   
16.1.3    | 0     | 0    | 0   -   

index: 17.1 grade: 0.00% (0/3) line: 139 source: `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0];

current_value | masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
17.1.1    | 0     | 1   -   
17.1.2    | 0     | -   1   
17.1.3    | 0     | 0   0   

index: 18.1 grade: 0.00% (0/3) line: 140 source: `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1];

current_value | masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
18.1.1    | 0     | 1   -   
18.1.2    | 0     | -   1   
18.1.3    | 0     | 0   0   

index: 19.1 grade: 0.00% (0/4) line: 142 source: `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0];

current_value ^ masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
19.1.1    | 0     | 0   0   
19.1.2    | 0     | 0   1   
19.1.3    | 0     | 1   0   
19.1.4    | 0     | 1   1   

index: 20.1 grade: 0.00% (0/4) line: 143 source: `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1];

current_value ^ masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
20.1.1    | 0     | 0   0   
20.1.2    | 0     | 0   1   
20.1.3    | 0     | 1   0   
20.1.4    | 0     | 1   1   

index: 21.1 grade: 100.00% (1/1/1) line: 165 source: if (HW_SET_WIDTH == WIDTH) begin

HW_SET_WIDTH == WIDTH
<----1----->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
21.1.1    | 1     | lhs == rhs  
21.1.2    | CONST | lhs != rhs  

index: 22.1 grade: 100.00% (1/1/1) line: 172 source: if (HW_CLEAR_WIDTH == WIDTH) begin

HW_CLEAR_WIDTH == WIDTH
<-----1------>    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
22.1.1    | 1     | lhs == rhs  
22.1.2    | CONST | lhs != rhs  

index: 23.1 grade: 50.00% (1/2) line: 179 source: if (write_enable == HW_WRITE_ENABLE_POLARITY) begin

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
23.1.1    | 0     | lhs == rhs  
23.1.2    | 1     | lhs != rhs  

index: 24.1 grade: 50.00% (2/4) line: 186 source: get_hw_next_value = (value & (~set_clear[1])) | set_clear[0];

(value & (~ set_clear[1])) | set_clear[0]
 <-1->      <----2----->     <----3----->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
24.1.1    | 0     | 1    | -   -   1   
24.1.2    | 1     | 1    | 1   0   -   
24.1.3    | 0     | 0    | -   1   0   
24.1.4    | 1     | 0    | 0   -   0   

index: 25.1 grade: 66.67% (2/3) line: 202 source: assign  o_sw_read_data    = w_read_data & i_mask;

w_read_data & i_mask
<----1---->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
25.1.1    | 1     | 0   -   
25.1.2    | 0     | -   0   
25.1.3    | 1     | 1   1   

index: 26.1 grade: 66.67% (2/3) line: 206 source: assign  o_value           = w_value & i_mask;

w_value & i_mask
<--1-->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
26.1.1    | 1     | 0   -   
26.1.2    | 0     | -   0   
26.1.3    | 1     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.g_ECC_ONOFF_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 4 of 6
Number of uncovered expressions: 2 of 6
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 285    | ! i_rst_n                                          
2.1    | 50.00% (2/4)  | 288    | (w_sw_update[0] || w_sw_update[1]) || w_hw_update  

index: 1.1 grade: 100.00% (2/2) line: 285 source: if (!i_rst_n) begin

! i_rst_n
  <--1-->

index     | hit   | <1> 
------------------------ '!'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 50.00% (2/4) line: 288 source: else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin

(w_sw_update[0] || w_sw_update[1]) || w_hw_update
 <-----1------>    <-----2------>     <----3---->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 0     | 1   -   -   
2.1.2     | 1     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered expressions: 17 of 34
Number of uncovered expressions: 17 of 34
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (1/2)  | 40     | | {1'b0,w_match}                                   
2.1    | 25.00% (1/4)  | 81     | (w_frontdoor_valid || w_backdoor_valid) || w_pending_valid 
3.1    | 25.00% (1/4)  | 82     | w_backdoor_valid ? w_read_mask[1] : w_read_mask[0] 
4.1    | 25.00% (1/4)  | 83     | w_backdoor_valid ? w_write_mask[1] : w_write_mask[0] 
5.1    | 50.00% (2/4)  | 84     | w_backdoor_valid ? w_write_data[1] : w_write_data[0] 
6.1    | 66.67% (2/3)  | 86     | i_register_valid && w_active                       
7.1    | 100.00% (2/2) | 101    | i < WORDS                                          
8.1    | 100.00% (2/2) | 102    | j < BUS_BYTE_WIDTH                                 
9.1    | 50.00% (2/4)  | 103    | (accessible && (write_access == bus_access[0])) && match[i] 
9.2    | 100.00% (2/2) | 103    | (write_access == bus_access[0])                    
10.1   | 33.33% (1/3)  | 120    | (! w_backdoor_valid) && w_active                   

index: 1.1 grade: 50.00% (1/2) line: 40 source: assign  w_active  = |{1'b0, w_match};

| {1'b0,w_match}
<------1------->

index     | hit   | <1> 
------------------------ '|'
1.1.1     | 0     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 25.00% (1/4) line: 81 source: assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid;

(w_frontdoor_valid || w_backdoor_valid) || w_pending_valid
 <-------1------->    <------2------->     <------3------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 0     | 1   -   -   
2.1.2     | 0     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   

index: 3.1 grade: 25.00% (1/4) line: 82 source: assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0];

w_backdoor_valid ? w_read_mask[1] : w_read_mask[0]
<------1------->   <-----2------>   <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
3.1.1     | 0     | 1    | 0   -   1   
3.1.2     | 0     | 1    | 1   1   -   
3.1.3     | 1     | 0    | 0   -   0   
3.1.4     | 0     | 0    | 1   0   -   

index: 4.1 grade: 25.00% (1/4) line: 83 source: assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0];

w_backdoor_valid ? w_write_mask[1] : w_write_mask[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 0   -   1   
4.1.2     | 0     | 1    | 1   1   -   
4.1.3     | 1     | 0    | 0   -   0   
4.1.4     | 0     | 0    | 1   0   -   

index: 5.1 grade: 50.00% (2/4) line: 84 source: assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0];

w_backdoor_valid ? w_write_data[1] : w_write_data[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | 1     | 1    | 0   -   1   
5.1.2     | 0     | 1    | 1   1   -   
5.1.3     | 1     | 0    | 0   -   0   
5.1.4     | 0     | 0    | 1   0   -   

index: 6.1 grade: 66.67% (2/3) line: 86 source: assign  w_frontdoor_valid = i_register_valid && w_active;

i_register_valid && w_active
<------1------->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 1     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 0     | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 101 source: for (i = 0;i < WORDS;i = i + 1) begin

i < WORDS
<1> <-2->

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 1     | lhs < rhs   
7.1.2     | 1     | lhs >= rhs  

index: 8.1 grade: 100.00% (2/2) line: 102 source: for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin

j < BUS_BYTE_WIDTH
<1> <-----2------>

index     | hit   | <1>   <2>   
-------------------------------- '<'
8.1.1     | 1     | lhs < rhs   
8.1.2     | 1     | lhs >= rhs  

index: 9.1 grade: 50.00% (2/4) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(accessible && (write_access == bus_access[0])) && match[i]
 <---1---->    <--------------2-------------->     <--3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
9.1.1     | 0     | 0   -   -   
9.1.2     | 1     | -   0   -   
9.1.3     | 1     | -   -   0   
9.1.4     | 0     | 1   1   1   

index: 9.2 grade: 100.00% (2/2) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(write_access == bus_access[0])
 <----4----->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '=='
9.2.1     | 1     | lhs == rhs  
9.2.2     | 1     | lhs != rhs  

index: 10.1 grade: 33.33% (1/3) line: 120 source: assign  o_register_ready      = (!w_backdoor_valid) && w_active;

(! w_backdoor_valid) && w_active
   <------1------->     <--2--->

index     | hit   | rval | <1> <2> 
-----------------------------------
10.1.1    | 0     | 1    | 0   1   
10.1.2    | 1     | 0    | -   0   
10.1.3    | 0     | 0    | 1   -   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered expressions: 4 of 19
Number of uncovered expressions: 15 of 19
Number of excluded expressions: 3
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 25.00% (1/4)  | 22     | (w_address_match && w_access_match) && i_additional_match 
2.1    | 0.00% (0/2)   | 32     | value > 0                                          
3.1    | 100.00% (1/1/1) | 43     | START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB] 
4.1    | 50.00% (1/2)  | 44     | address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB] 
5.1    | 0.00% (0/3)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
5.2    | 0.00% (0/2)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) 
5.3    | 0.00% (0/2)   | 49     | (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
6.1    | 100.00% (1/1/2) | 57     | READABLE && WRITABLE                               
7.1    | 0.00% (0/2)   | 61     | ! access[ACCESS_BIT]                               

index: 1.1 grade: 25.00% (1/4) line: 22 source: assign  o_match         = w_address_match && w_access_match && i_additional_match;

(w_address_match && w_access_match) && i_additional_match
 <------1------>    <-----2------>     <-------3-------->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
1.1.1     | 1     | 0   -   -   
1.1.2     | 0     | -   0   -   
1.1.3     | 0     | -   -   0   
1.1.4     | 0     | 1   1   1   

index: 2.1 grade: 0.00% (0/2) line: 32 source: while (value > 0) begin

value > 0
<-1->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
2.1.1     | 0     | lhs > rhs   
2.1.2     | 0     | lhs <= rhs  

index: 3.1 grade: 100.00% (1/1/1) line: 43 source: if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin

START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB]
<-------------1-------------->    <------------2------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 1     | lhs == rhs  
3.1.2     | CONST | lhs != rhs  

index: 4.1 grade: 50.00% (1/2) line: 44 source: match_address = (address[WIDTH-1:LSB] == START_ADDRESS[WIDTH-1:LSB]);

address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB]
<----------1----------->    <-------------2-------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
4.1.1     | 0     | lhs == rhs  
4.1.2     | 1     | lhs != rhs  

index: 5.1 grade: 0.00% (0/3) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
<----------------------------1----------------------------->    <---------------------------2---------------------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
5.1.1     | 0     | 0   -   
5.1.2     | 0     | -   0   
5.1.3     | 0     | 1   1   

index: 5.2 grade: 0.00% (0/2) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB])
 <----------3----------->    <-------------4-------------->

index     | hit   | <3>   <4>   
-------------------------------- '>='
5.2.1     | 0     | lhs < rhs   
5.2.2     | 0     | lhs >= rhs  

index: 5.3 grade: 0.00% (0/2) line: 49 source: (address[WIDTH-1:LSB] <= END_ADDRESS[WIDTH-1:LSB]  );

(address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
 <----------5----------->    <------------6------------->

index     | hit   | <5>   <6>   
-------------------------------- '<='
5.3.1     | 0     | lhs > rhs   
5.3.2     | 0     | lhs <= rhs  

index: 6.1 grade: 100.00% (1/1/2) line: 57 source: if (READABLE && WRITABLE) begin

READABLE && WRITABLE
<--1--->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | CONST | 0   -   
6.1.2     | CONST | -   0   
6.1.3     | 1     | 1   1   

index: 7.1 grade: 0.00% (0/2) line: 61 source: match_access  = !access[ACCESS_BIT];

! access[ACCESS_BIT]
  <-------1-------->

index     | hit   | <1> 
------------------------ '!'
7.1.1     | 0     | 1   
7.1.2     | 0     | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.g_CE_CNT_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 29 of 77
Number of uncovered expressions: 48 of 77
Number of excluded expressions: 8
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (1/1/2) | 52     | (SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)     
1.2    | 100.00% (1/1/1) | 52     | (SW_READ_ACTION == 2)                              
1.3    | 100.00% (1/1/1) | 53     | (SW_READ_ACTION == 3)                              
2.1    | 100.00% (1/1/1) | 54     | SW_WRITE_ACTION != 0                               
3.1    | 50.00% (1/2)  | 56     | read_mask != {WIDTH{1'b0}}                         
4.1    | 25.00% (1/4)  | 57     | ((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done) 
4.2    | 50.00% (1/2)  | 57     | (write_mask != {WIDTH{1'b0}})                      
4.3    | 50.00% (1/2)  | 57     | (write_enable == SW_WRITE_ENABLE_POLARITY)         
5.1    | 75.00% (3/4)  | 59     | (valid && action[0]) && access[0]                  
6.1    | 50.00% (2/4)  | 60     | (valid && action[1]) && access[1]                  
7.1    | 50.00% (1/2)  | 71     | write_enable == HW_WRITE_ENABLE_POLARITY           
8.1    | 50.00% (1/2)  | 72     | set != {HW_SET_WIDTH{1'b0}}                        
9.1    | 50.00% (1/2)  | 73     | clear != {HW_CLEAR_WIDTH{1'b0}}                    
10.1   | 25.00% (1/4)  | 74     | (update[0] || update[1]) || update[2]              
11.1   | 100.00% (1/1/1) | 90     | PRECEDENCE_ACCESS == 0                             
12.1   | 66.67% (2/3)  | 132    | write_mask & (~ write_data)                        
13.1   | 66.67% (2/3)  | 133    | write_mask & write_data                            
14.1   | 25.00% (1/4)  | 135    | (current_value & (~ write_mask)) | masked_data[1]  
15.1   | 0.00% (0/3)   | 136    | current_value & (~ masked_data[0])                 
16.1   | 0.00% (0/3)   | 137    | current_value & (~ masked_data[1])                 
17.1   | 0.00% (0/3)   | 139    | current_value | masked_data[0]                     
18.1   | 0.00% (0/3)   | 140    | current_value | masked_data[1]                     
19.1   | 0.00% (0/4)   | 142    | current_value ^ masked_data[0]                     
20.1   | 0.00% (0/4)   | 143    | current_value ^ masked_data[1]                     
21.1   | 100.00% (1/1/1) | 165    | HW_SET_WIDTH == WIDTH                              
22.1   | 100.00% (1/1/1) | 172    | HW_CLEAR_WIDTH == WIDTH                            
23.1   | 50.00% (1/2)  | 179    | write_enable == HW_WRITE_ENABLE_POLARITY           
24.1   | 25.00% (1/4)  | 186    | (value & (~ set_clear[1])) | set_clear[0]          
25.1   | 33.33% (1/3)  | 202    | w_read_data & i_mask                               
26.1   | 33.33% (1/3)  | 206    | w_value & i_mask                                   

index: 1.1 grade: 100.00% (1/1/2) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)
<---------1--------->    <---------2--------->

index     | hit   | <1> <2> 
---------------------------- '||'
1.1.1     | CONST | 1   -   
1.1.2     | CONST | -   1   
1.1.3     | 1     | 0   0   

index: 1.2 grade: 100.00% (1/1/1) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2)
 <-----3------>    <4>

index     | hit   | <3>   <4>   
-------------------------------- '=='
1.2.1     | CONST | lhs == rhs  
1.2.2     | 1     | lhs != rhs  

index: 1.3 grade: 100.00% (1/1/1) line: 53 source: (SW_READ_ACTION  == `RGGEN_READ_SET  );

(SW_READ_ACTION == 3)
 <-----5------>    <6>

index     | hit   | <5>   <6>   
-------------------------------- '=='
1.3.1     | CONST | lhs == rhs  
1.3.2     | 1     | lhs != rhs  

index: 2.1 grade: 100.00% (1/1/1) line: 54 source: action[1] = (SW_WRITE_ACTION != `RGGEN_WRITE_NONE);

SW_WRITE_ACTION != 0
<------1------>    <2>

index     | hit   | <1>   <2>   
-------------------------------- '!='
2.1.1     | CONST | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 50.00% (1/2) line: 56 source: access[0] = (read_mask  != {WIDTH{1'b0}});

read_mask != {WIDTH{1'b0}}
<---1--->    <-----2----->

index     | hit   | <1>   <2>   
-------------------------------- '!='
3.1.1     | 1     | lhs == rhs  
3.1.2     | 0     | lhs != rhs  

index: 4.1 grade: 25.00% (1/4) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done)
 <-------------1------------->    <-------------------2-------------------->        <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 1   1   0   
4.1.2     | 0     | 0    | -   -   1   
4.1.3     | 0     | 0    | -   0   -   
4.1.4     | 1     | 0    | 0   -   -   

index: 4.2 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_mask != {WIDTH{1'b0}})
 <---4---->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '!='
4.2.1     | 1     | lhs == rhs  
4.2.2     | 0     | lhs != rhs  

index: 4.3 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_enable == SW_WRITE_ENABLE_POLARITY)
 <----6----->    <----------7----------->

index     | hit   | <6>   <7>   
-------------------------------- '=='
4.3.1     | 1     | lhs == rhs  
4.3.2     | 0     | lhs != rhs  

index: 5.1 grade: 75.00% (3/4) line: 59 source: get_sw_update[0]  = valid && action[0] && access[0];

(valid && action[0]) && access[0]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
5.1.1     | 1     | 0   -   -   
5.1.2     | 1     | -   0   -   
5.1.3     | 1     | -   -   0   
5.1.4     | 0     | 1   1   1   

index: 6.1 grade: 50.00% (2/4) line: 60 source: get_sw_update[1]  = valid && action[1] && access[1];

(valid && action[1]) && access[1]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
6.1.1     | 1     | 0   -   -   
6.1.2     | 0     | -   0   -   
6.1.3     | 1     | -   -   0   
6.1.4     | 0     | 1   1   1   

index: 7.1 grade: 50.00% (1/2) line: 71 source: update[0]     = write_enable == HW_WRITE_ENABLE_POLARITY;

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 0     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 50.00% (1/2) line: 72 source: update[1]     = set   != {HW_SET_WIDTH{1'b0}};

set != {HW_SET_WIDTH{1'b0}}
<1>    <--------2--------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
8.1.1     | 1     | lhs == rhs  
8.1.2     | 0     | lhs != rhs  

index: 9.1 grade: 50.00% (1/2) line: 73 source: update[2]     = clear != {HW_CLEAR_WIDTH{1'b0}};

clear != {HW_CLEAR_WIDTH{1'b0}}
<-1->    <---------2---------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
9.1.1     | 1     | lhs == rhs  
9.1.2     | 0     | lhs != rhs  

index: 10.1 grade: 25.00% (1/4) line: 74 source: get_hw_update = update[0] || update[1] || update[2];

(update[0] || update[1]) || update[2]
 <---1--->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
10.1.1    | 0     | 1   -   -   
10.1.2    | 0     | -   1   -   
10.1.3    | 0     | -   -   1   
10.1.4    | 1     | 0   0   0   

index: 11.1 grade: 100.00% (1/1/1) line: 90 source: if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin

PRECEDENCE_ACCESS == 0
<-------1------->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
11.1.1    | CONST | lhs == rhs  
11.1.2    | 1     | lhs != rhs  

index: 12.1 grade: 66.67% (2/3) line: 132 source: masked_data[0]  = write_mask & (~write_data);

write_mask & (~ write_data)
<---1---->      <---2---->

index     | hit   | rval | <1> <2> 
-----------------------------------
12.1.1    | 0     | 1    | 1   0   
12.1.2    | 1     | 0    | -   1   
12.1.3    | 1     | 0    | 0   -   

index: 13.1 grade: 66.67% (2/3) line: 133 source: masked_data[1]  = write_mask & ( write_data);

write_mask & write_data
<---1---->   <---2---->

index     | hit   | <1> <2> 
---------------------------- '&'
13.1.1    | 1     | 0   -   
13.1.2    | 1     | -   0   
13.1.3    | 0     | 1   1   

index: 14.1 grade: 25.00% (1/4) line: 135 source: `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1];

(current_value & (~ write_mask)) | masked_data[1]
 <-----1----->      <---2---->     <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
14.1.1    | 0     | 1    | -   -   1   
14.1.2    | 0     | 1    | 1   0   -   
14.1.3    | 0     | 0    | -   1   0   
14.1.4    | 1     | 0    | 0   -   0   

index: 15.1 grade: 0.00% (0/3) line: 136 source: `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]);

current_value & (~ masked_data[0])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
15.1.1    | 0     | 1    | 1   0   
15.1.2    | 0     | 0    | -   1   
15.1.3    | 0     | 0    | 0   -   

index: 16.1 grade: 0.00% (0/3) line: 137 source: `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]);

current_value & (~ masked_data[1])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
16.1.1    | 0     | 1    | 1   0   
16.1.2    | 0     | 0    | -   1   
16.1.3    | 0     | 0    | 0   -   

index: 17.1 grade: 0.00% (0/3) line: 139 source: `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0];

current_value | masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
17.1.1    | 0     | 1   -   
17.1.2    | 0     | -   1   
17.1.3    | 0     | 0   0   

index: 18.1 grade: 0.00% (0/3) line: 140 source: `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1];

current_value | masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
18.1.1    | 0     | 1   -   
18.1.2    | 0     | -   1   
18.1.3    | 0     | 0   0   

index: 19.1 grade: 0.00% (0/4) line: 142 source: `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0];

current_value ^ masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
19.1.1    | 0     | 0   0   
19.1.2    | 0     | 0   1   
19.1.3    | 0     | 1   0   
19.1.4    | 0     | 1   1   

index: 20.1 grade: 0.00% (0/4) line: 143 source: `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1];

current_value ^ masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
20.1.1    | 0     | 0   0   
20.1.2    | 0     | 0   1   
20.1.3    | 0     | 1   0   
20.1.4    | 0     | 1   1   

index: 21.1 grade: 100.00% (1/1/1) line: 165 source: if (HW_SET_WIDTH == WIDTH) begin

HW_SET_WIDTH == WIDTH
<----1----->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
21.1.1    | 1     | lhs == rhs  
21.1.2    | CONST | lhs != rhs  

index: 22.1 grade: 100.00% (1/1/1) line: 172 source: if (HW_CLEAR_WIDTH == WIDTH) begin

HW_CLEAR_WIDTH == WIDTH
<-----1------>    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
22.1.1    | 1     | lhs == rhs  
22.1.2    | CONST | lhs != rhs  

index: 23.1 grade: 50.00% (1/2) line: 179 source: if (write_enable == HW_WRITE_ENABLE_POLARITY) begin

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
23.1.1    | 0     | lhs == rhs  
23.1.2    | 1     | lhs != rhs  

index: 24.1 grade: 25.00% (1/4) line: 186 source: get_hw_next_value = (value & (~set_clear[1])) | set_clear[0];

(value & (~ set_clear[1])) | set_clear[0]
 <-1->      <----2----->     <----3----->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
24.1.1    | 0     | 1    | -   -   1   
24.1.2    | 0     | 1    | 1   0   -   
24.1.3    | 0     | 0    | -   1   0   
24.1.4    | 1     | 0    | 0   -   0   

index: 25.1 grade: 33.33% (1/3) line: 202 source: assign  o_sw_read_data    = w_read_data & i_mask;

w_read_data & i_mask
<----1---->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
25.1.1    | 1     | 0   -   
25.1.2    | 0     | -   0   
25.1.3    | 0     | 1   1   

index: 26.1 grade: 33.33% (1/3) line: 206 source: assign  o_value           = w_value & i_mask;

w_value & i_mask
<--1-->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
26.1.1    | 1     | 0   -   
26.1.2    | 0     | -   0   
26.1.3    | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.g_CE_CNT_REG.u_bit_field.g_value
Type name: rggen_bit_field.g_value_T
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 3 of 6
Number of uncovered expressions: 3 of 6
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 285    | ! i_rst_n                                          
2.1    | 25.00% (1/4)  | 288    | (w_sw_update[0] || w_sw_update[1]) || w_hw_update  

index: 1.1 grade: 100.00% (2/2) line: 285 source: if (!i_rst_n) begin

! i_rst_n
  <--1-->

index     | hit   | <1> 
------------------------ '!'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 25.00% (1/4) line: 288 source: else if (w_sw_update[0] || w_sw_update[1] || w_hw_update) begin

(w_sw_update[0] || w_sw_update[1]) || w_hw_update
 <-----1------>    <-----2------>     <----3---->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 0     | 1   -   -   
2.1.2     | 0     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered expressions: 18 of 34
Number of uncovered expressions: 16 of 34
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (1/2)  | 40     | | {1'b0,w_match}                                   
2.1    | 25.00% (1/4)  | 81     | (w_frontdoor_valid || w_backdoor_valid) || w_pending_valid 
3.1    | 25.00% (1/4)  | 82     | w_backdoor_valid ? w_read_mask[1] : w_read_mask[0] 
4.1    | 25.00% (1/4)  | 83     | w_backdoor_valid ? w_write_mask[1] : w_write_mask[0] 
5.1    | 50.00% (2/4)  | 84     | w_backdoor_valid ? w_write_data[1] : w_write_data[0] 
6.1    | 66.67% (2/3)  | 86     | i_register_valid && w_active                       
7.1    | 100.00% (2/2) | 101    | i < WORDS                                          
8.1    | 100.00% (2/2) | 102    | j < BUS_BYTE_WIDTH                                 
9.1    | 75.00% (3/4)  | 103    | (accessible && (write_access == bus_access[0])) && match[i] 
9.2    | 100.00% (2/2) | 103    | (write_access == bus_access[0])                    
10.1   | 33.33% (1/3)  | 120    | (! w_backdoor_valid) && w_active                   

index: 1.1 grade: 50.00% (1/2) line: 40 source: assign  w_active  = |{1'b0, w_match};

| {1'b0,w_match}
<------1------->

index     | hit   | <1> 
------------------------ '|'
1.1.1     | 0     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 25.00% (1/4) line: 81 source: assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid;

(w_frontdoor_valid || w_backdoor_valid) || w_pending_valid
 <-------1------->    <------2------->     <------3------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 0     | 1   -   -   
2.1.2     | 0     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   

index: 3.1 grade: 25.00% (1/4) line: 82 source: assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0];

w_backdoor_valid ? w_read_mask[1] : w_read_mask[0]
<------1------->   <-----2------>   <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
3.1.1     | 0     | 1    | 0   -   1   
3.1.2     | 0     | 1    | 1   1   -   
3.1.3     | 1     | 0    | 0   -   0   
3.1.4     | 0     | 0    | 1   0   -   

index: 4.1 grade: 25.00% (1/4) line: 83 source: assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0];

w_backdoor_valid ? w_write_mask[1] : w_write_mask[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 0   -   1   
4.1.2     | 0     | 1    | 1   1   -   
4.1.3     | 1     | 0    | 0   -   0   
4.1.4     | 0     | 0    | 1   0   -   

index: 5.1 grade: 50.00% (2/4) line: 84 source: assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0];

w_backdoor_valid ? w_write_data[1] : w_write_data[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | 1     | 1    | 0   -   1   
5.1.2     | 0     | 1    | 1   1   -   
5.1.3     | 1     | 0    | 0   -   0   
5.1.4     | 0     | 0    | 1   0   -   

index: 6.1 grade: 66.67% (2/3) line: 86 source: assign  w_frontdoor_valid = i_register_valid && w_active;

i_register_valid && w_active
<------1------->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 1     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 0     | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 101 source: for (i = 0;i < WORDS;i = i + 1) begin

i < WORDS
<1> <-2->

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 1     | lhs < rhs   
7.1.2     | 1     | lhs >= rhs  

index: 8.1 grade: 100.00% (2/2) line: 102 source: for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin

j < BUS_BYTE_WIDTH
<1> <-----2------>

index     | hit   | <1>   <2>   
-------------------------------- '<'
8.1.1     | 1     | lhs < rhs   
8.1.2     | 1     | lhs >= rhs  

index: 9.1 grade: 75.00% (3/4) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(accessible && (write_access == bus_access[0])) && match[i]
 <---1---->    <--------------2-------------->     <--3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
9.1.1     | 1     | 0   -   -   
9.1.2     | 1     | -   0   -   
9.1.3     | 1     | -   -   0   
9.1.4     | 0     | 1   1   1   

index: 9.2 grade: 100.00% (2/2) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(write_access == bus_access[0])
 <----4----->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '=='
9.2.1     | 1     | lhs == rhs  
9.2.2     | 1     | lhs != rhs  

index: 10.1 grade: 33.33% (1/3) line: 120 source: assign  o_register_ready      = (!w_backdoor_valid) && w_active;

(! w_backdoor_valid) && w_active
   <------1------->     <--2--->

index     | hit   | rval | <1> <2> 
-----------------------------------
10.1.1    | 0     | 1    | 0   1   
10.1.2    | 1     | 0    | -   0   
10.1.3    | 0     | 0    | 1   -   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered expressions: 7 of 19
Number of uncovered expressions: 12 of 19
Number of excluded expressions: 3
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (2/4)  | 22     | (w_address_match && w_access_match) && i_additional_match 
2.1    | 0.00% (0/2)   | 32     | value > 0                                          
3.1    | 100.00% (1/1/1) | 43     | START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB] 
4.1    | 50.00% (1/2)  | 44     | address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB] 
5.1    | 0.00% (0/3)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
5.2    | 0.00% (0/2)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) 
5.3    | 0.00% (0/2)   | 49     | (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
6.1    | 100.00% (1/1/2) | 57     | READABLE && WRITABLE                               
7.1    | 100.00% (2/2) | 61     | ! access[ACCESS_BIT]                               

index: 1.1 grade: 50.00% (2/4) line: 22 source: assign  o_match         = w_address_match && w_access_match && i_additional_match;

(w_address_match && w_access_match) && i_additional_match
 <------1------>    <-----2------>     <-------3-------->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
1.1.1     | 1     | 0   -   -   
1.1.2     | 1     | -   0   -   
1.1.3     | 0     | -   -   0   
1.1.4     | 0     | 1   1   1   

index: 2.1 grade: 0.00% (0/2) line: 32 source: while (value > 0) begin

value > 0
<-1->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
2.1.1     | 0     | lhs > rhs   
2.1.2     | 0     | lhs <= rhs  

index: 3.1 grade: 100.00% (1/1/1) line: 43 source: if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin

START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB]
<-------------1-------------->    <------------2------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 1     | lhs == rhs  
3.1.2     | CONST | lhs != rhs  

index: 4.1 grade: 50.00% (1/2) line: 44 source: match_address = (address[WIDTH-1:LSB] == START_ADDRESS[WIDTH-1:LSB]);

address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB]
<----------1----------->    <-------------2-------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
4.1.1     | 0     | lhs == rhs  
4.1.2     | 1     | lhs != rhs  

index: 5.1 grade: 0.00% (0/3) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
<----------------------------1----------------------------->    <---------------------------2---------------------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
5.1.1     | 0     | 0   -   
5.1.2     | 0     | -   0   
5.1.3     | 0     | 1   1   

index: 5.2 grade: 0.00% (0/2) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB])
 <----------3----------->    <-------------4-------------->

index     | hit   | <3>   <4>   
-------------------------------- '>='
5.2.1     | 0     | lhs < rhs   
5.2.2     | 0     | lhs >= rhs  

index: 5.3 grade: 0.00% (0/2) line: 49 source: (address[WIDTH-1:LSB] <= END_ADDRESS[WIDTH-1:LSB]  );

(address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
 <----------5----------->    <------------6------------->

index     | hit   | <5>   <6>   
-------------------------------- '<='
5.3.1     | 0     | lhs > rhs   
5.3.2     | 0     | lhs <= rhs  

index: 6.1 grade: 100.00% (1/1/2) line: 57 source: if (READABLE && WRITABLE) begin

READABLE && WRITABLE
<--1--->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | CONST | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | CONST | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 61 source: match_access  = !access[ACCESS_BIT];

! access[ACCESS_BIT]
  <-------1-------->

index     | hit   | <1> 
------------------------ '!'
7.1.1     | 1     | 1   
7.1.2     | 1     | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.g_CE_FFD_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 18 of 77
Number of uncovered expressions: 59 of 77
Number of excluded expressions: 8
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (1/1/2) | 52     | (SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)     
1.2    | 100.00% (1/1/1) | 52     | (SW_READ_ACTION == 2)                              
1.3    | 100.00% (1/1/1) | 53     | (SW_READ_ACTION == 3)                              
2.1    | 100.00% (1/1/1) | 54     | SW_WRITE_ACTION != 0                               
3.1    | 50.00% (1/2)  | 56     | read_mask != {WIDTH{1'b0}}                         
4.1    | 50.00% (2/4)  | 57     | ((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done) 
4.2    | 50.00% (1/2)  | 57     | (write_mask != {WIDTH{1'b0}})                      
4.3    | 50.00% (1/2)  | 57     | (write_enable == SW_WRITE_ENABLE_POLARITY)         
5.1    | 75.00% (3/4)  | 59     | (valid && action[0]) && access[0]                  
6.1    | 50.00% (2/4)  | 60     | (valid && action[1]) && access[1]                  
7.1    | 50.00% (1/2)  | 71     | write_enable == HW_WRITE_ENABLE_POLARITY           
8.1    | 50.00% (1/2)  | 72     | set != {HW_SET_WIDTH{1'b0}}                        
9.1    | 50.00% (1/2)  | 73     | clear != {HW_CLEAR_WIDTH{1'b0}}                    
10.1   | 25.00% (1/4)  | 74     | (update[0] || update[1]) || update[2]              
11.1   | 0.00% (0/1/1) | 90     | PRECEDENCE_ACCESS == 0                             
12.1   | 0.00% (0/3)   | 132    | write_mask & (~ write_data)                        
13.1   | 0.00% (0/3)   | 133    | write_mask & write_data                            
14.1   | 0.00% (0/4)   | 135    | (current_value & (~ write_mask)) | masked_data[1]  
15.1   | 0.00% (0/3)   | 136    | current_value & (~ masked_data[0])                 
16.1   | 0.00% (0/3)   | 137    | current_value & (~ masked_data[1])                 
17.1   | 0.00% (0/3)   | 139    | current_value | masked_data[0]                     
18.1   | 0.00% (0/3)   | 140    | current_value | masked_data[1]                     
19.1   | 0.00% (0/4)   | 142    | current_value ^ masked_data[0]                     
20.1   | 0.00% (0/4)   | 143    | current_value ^ masked_data[1]                     
21.1   | 0.00% (0/1/1) | 165    | HW_SET_WIDTH == WIDTH                              
22.1   | 0.00% (0/1/1) | 172    | HW_CLEAR_WIDTH == WIDTH                            
23.1   | 0.00% (0/2)   | 179    | write_enable == HW_WRITE_ENABLE_POLARITY           
24.1   | 0.00% (0/4)   | 186    | (value & (~ set_clear[1])) | set_clear[0]          
25.1   | 0.00% (0/3)   | 202    | w_read_data & i_mask                               
26.1   | 0.00% (0/3)   | 206    | w_value & i_mask                                   

index: 1.1 grade: 100.00% (1/1/2) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)
<---------1--------->    <---------2--------->

index     | hit   | <1> <2> 
---------------------------- '||'
1.1.1     | CONST | 1   -   
1.1.2     | CONST | -   1   
1.1.3     | 1     | 0   0   

index: 1.2 grade: 100.00% (1/1/1) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2)
 <-----3------>    <4>

index     | hit   | <3>   <4>   
-------------------------------- '=='
1.2.1     | CONST | lhs == rhs  
1.2.2     | 1     | lhs != rhs  

index: 1.3 grade: 100.00% (1/1/1) line: 53 source: (SW_READ_ACTION  == `RGGEN_READ_SET  );

(SW_READ_ACTION == 3)
 <-----5------>    <6>

index     | hit   | <5>   <6>   
-------------------------------- '=='
1.3.1     | CONST | lhs == rhs  
1.3.2     | 1     | lhs != rhs  

index: 2.1 grade: 100.00% (1/1/1) line: 54 source: action[1] = (SW_WRITE_ACTION != `RGGEN_WRITE_NONE);

SW_WRITE_ACTION != 0
<------1------>    <2>

index     | hit   | <1>   <2>   
-------------------------------- '!='
2.1.1     | CONST | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 50.00% (1/2) line: 56 source: access[0] = (read_mask  != {WIDTH{1'b0}});

read_mask != {WIDTH{1'b0}}
<---1--->    <-----2----->

index     | hit   | <1>   <2>   
-------------------------------- '!='
3.1.1     | 1     | lhs == rhs  
3.1.2     | 0     | lhs != rhs  

index: 4.1 grade: 50.00% (2/4) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done)
 <-------------1------------->    <-------------------2-------------------->        <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 1   1   0   
4.1.2     | 0     | 0    | -   -   1   
4.1.3     | 1     | 0    | -   0   -   
4.1.4     | 1     | 0    | 0   -   -   

index: 4.2 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_mask != {WIDTH{1'b0}})
 <---4---->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '!='
4.2.1     | 1     | lhs == rhs  
4.2.2     | 0     | lhs != rhs  

index: 4.3 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_enable == SW_WRITE_ENABLE_POLARITY)
 <----6----->    <----------7----------->

index     | hit   | <6>   <7>   
-------------------------------- '=='
4.3.1     | 0     | lhs == rhs  
4.3.2     | 1     | lhs != rhs  

index: 5.1 grade: 75.00% (3/4) line: 59 source: get_sw_update[0]  = valid && action[0] && access[0];

(valid && action[0]) && access[0]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
5.1.1     | 1     | 0   -   -   
5.1.2     | 1     | -   0   -   
5.1.3     | 1     | -   -   0   
5.1.4     | 0     | 1   1   1   

index: 6.1 grade: 50.00% (2/4) line: 60 source: get_sw_update[1]  = valid && action[1] && access[1];

(valid && action[1]) && access[1]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
6.1.1     | 1     | 0   -   -   
6.1.2     | 0     | -   0   -   
6.1.3     | 1     | -   -   0   
6.1.4     | 0     | 1   1   1   

index: 7.1 grade: 50.00% (1/2) line: 71 source: update[0]     = write_enable == HW_WRITE_ENABLE_POLARITY;

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 0     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 50.00% (1/2) line: 72 source: update[1]     = set   != {HW_SET_WIDTH{1'b0}};

set != {HW_SET_WIDTH{1'b0}}
<1>    <--------2--------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
8.1.1     | 1     | lhs == rhs  
8.1.2     | 0     | lhs != rhs  

index: 9.1 grade: 50.00% (1/2) line: 73 source: update[2]     = clear != {HW_CLEAR_WIDTH{1'b0}};

clear != {HW_CLEAR_WIDTH{1'b0}}
<-1->    <---------2---------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
9.1.1     | 1     | lhs == rhs  
9.1.2     | 0     | lhs != rhs  

index: 10.1 grade: 25.00% (1/4) line: 74 source: get_hw_update = update[0] || update[1] || update[2];

(update[0] || update[1]) || update[2]
 <---1--->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
10.1.1    | 0     | 1   -   -   
10.1.2    | 0     | -   1   -   
10.1.3    | 0     | -   -   1   
10.1.4    | 1     | 0   0   0   

index: 11.1 grade: 0.00% (0/1/1) line: 90 source: if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin

PRECEDENCE_ACCESS == 0
<-------1------->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
11.1.1    | CONST | lhs == rhs  
11.1.2    | 0     | lhs != rhs  

index: 12.1 grade: 0.00% (0/3) line: 132 source: masked_data[0]  = write_mask & (~write_data);

write_mask & (~ write_data)
<---1---->      <---2---->

index     | hit   | rval | <1> <2> 
-----------------------------------
12.1.1    | 0     | 1    | 1   0   
12.1.2    | 0     | 0    | -   1   
12.1.3    | 0     | 0    | 0   -   

index: 13.1 grade: 0.00% (0/3) line: 133 source: masked_data[1]  = write_mask & ( write_data);

write_mask & write_data
<---1---->   <---2---->

index     | hit   | <1> <2> 
---------------------------- '&'
13.1.1    | 0     | 0   -   
13.1.2    | 0     | -   0   
13.1.3    | 0     | 1   1   

index: 14.1 grade: 0.00% (0/4) line: 135 source: `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1];

(current_value & (~ write_mask)) | masked_data[1]
 <-----1----->      <---2---->     <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
14.1.1    | 0     | 1    | -   -   1   
14.1.2    | 0     | 1    | 1   0   -   
14.1.3    | 0     | 0    | -   1   0   
14.1.4    | 0     | 0    | 0   -   0   

index: 15.1 grade: 0.00% (0/3) line: 136 source: `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]);

current_value & (~ masked_data[0])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
15.1.1    | 0     | 1    | 1   0   
15.1.2    | 0     | 0    | -   1   
15.1.3    | 0     | 0    | 0   -   

index: 16.1 grade: 0.00% (0/3) line: 137 source: `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]);

current_value & (~ masked_data[1])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
16.1.1    | 0     | 1    | 1   0   
16.1.2    | 0     | 0    | -   1   
16.1.3    | 0     | 0    | 0   -   

index: 17.1 grade: 0.00% (0/3) line: 139 source: `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0];

current_value | masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
17.1.1    | 0     | 1   -   
17.1.2    | 0     | -   1   
17.1.3    | 0     | 0   0   

index: 18.1 grade: 0.00% (0/3) line: 140 source: `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1];

current_value | masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
18.1.1    | 0     | 1   -   
18.1.2    | 0     | -   1   
18.1.3    | 0     | 0   0   

index: 19.1 grade: 0.00% (0/4) line: 142 source: `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0];

current_value ^ masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
19.1.1    | 0     | 0   0   
19.1.2    | 0     | 0   1   
19.1.3    | 0     | 1   0   
19.1.4    | 0     | 1   1   

index: 20.1 grade: 0.00% (0/4) line: 143 source: `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1];

current_value ^ masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
20.1.1    | 0     | 0   0   
20.1.2    | 0     | 0   1   
20.1.3    | 0     | 1   0   
20.1.4    | 0     | 1   1   

index: 21.1 grade: 0.00% (0/1/1) line: 165 source: if (HW_SET_WIDTH == WIDTH) begin

HW_SET_WIDTH == WIDTH
<----1----->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
21.1.1    | 0     | lhs == rhs  
21.1.2    | CONST | lhs != rhs  

index: 22.1 grade: 0.00% (0/1/1) line: 172 source: if (HW_CLEAR_WIDTH == WIDTH) begin

HW_CLEAR_WIDTH == WIDTH
<-----1------>    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
22.1.1    | 0     | lhs == rhs  
22.1.2    | CONST | lhs != rhs  

index: 23.1 grade: 0.00% (0/2) line: 179 source: if (write_enable == HW_WRITE_ENABLE_POLARITY) begin

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
23.1.1    | 0     | lhs == rhs  
23.1.2    | 0     | lhs != rhs  

index: 24.1 grade: 0.00% (0/4) line: 186 source: get_hw_next_value = (value & (~set_clear[1])) | set_clear[0];

(value & (~ set_clear[1])) | set_clear[0]
 <-1->      <----2----->     <----3----->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
24.1.1    | 0     | 1    | -   -   1   
24.1.2    | 0     | 1    | 1   0   -   
24.1.3    | 0     | 0    | -   1   0   
24.1.4    | 0     | 0    | 0   -   0   

index: 25.1 grade: 0.00% (0/3) line: 202 source: assign  o_sw_read_data    = w_read_data & i_mask;

w_read_data & i_mask
<----1---->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
25.1.1    | 0     | 0   -   
25.1.2    | 0     | -   0   
25.1.3    | 0     | 1   1   

index: 26.1 grade: 0.00% (0/3) line: 206 source: assign  o_value           = w_value & i_mask;

w_value & i_mask
<--1-->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
26.1.1    | 0     | 0   -   
26.1.2    | 0     | -   0   
26.1.3    | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered expressions: 18 of 34
Number of uncovered expressions: 16 of 34
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (1/2)  | 40     | | {1'b0,w_match}                                   
2.1    | 25.00% (1/4)  | 81     | (w_frontdoor_valid || w_backdoor_valid) || w_pending_valid 
3.1    | 25.00% (1/4)  | 82     | w_backdoor_valid ? w_read_mask[1] : w_read_mask[0] 
4.1    | 25.00% (1/4)  | 83     | w_backdoor_valid ? w_write_mask[1] : w_write_mask[0] 
5.1    | 50.00% (2/4)  | 84     | w_backdoor_valid ? w_write_data[1] : w_write_data[0] 
6.1    | 66.67% (2/3)  | 86     | i_register_valid && w_active                       
7.1    | 100.00% (2/2) | 101    | i < WORDS                                          
8.1    | 100.00% (2/2) | 102    | j < BUS_BYTE_WIDTH                                 
9.1    | 75.00% (3/4)  | 103    | (accessible && (write_access == bus_access[0])) && match[i] 
9.2    | 100.00% (2/2) | 103    | (write_access == bus_access[0])                    
10.1   | 33.33% (1/3)  | 120    | (! w_backdoor_valid) && w_active                   

index: 1.1 grade: 50.00% (1/2) line: 40 source: assign  w_active  = |{1'b0, w_match};

| {1'b0,w_match}
<------1------->

index     | hit   | <1> 
------------------------ '|'
1.1.1     | 0     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 25.00% (1/4) line: 81 source: assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid;

(w_frontdoor_valid || w_backdoor_valid) || w_pending_valid
 <-------1------->    <------2------->     <------3------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 0     | 1   -   -   
2.1.2     | 0     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   

index: 3.1 grade: 25.00% (1/4) line: 82 source: assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0];

w_backdoor_valid ? w_read_mask[1] : w_read_mask[0]
<------1------->   <-----2------>   <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
3.1.1     | 0     | 1    | 0   -   1   
3.1.2     | 0     | 1    | 1   1   -   
3.1.3     | 1     | 0    | 0   -   0   
3.1.4     | 0     | 0    | 1   0   -   

index: 4.1 grade: 25.00% (1/4) line: 83 source: assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0];

w_backdoor_valid ? w_write_mask[1] : w_write_mask[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 0   -   1   
4.1.2     | 0     | 1    | 1   1   -   
4.1.3     | 1     | 0    | 0   -   0   
4.1.4     | 0     | 0    | 1   0   -   

index: 5.1 grade: 50.00% (2/4) line: 84 source: assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0];

w_backdoor_valid ? w_write_data[1] : w_write_data[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | 1     | 1    | 0   -   1   
5.1.2     | 0     | 1    | 1   1   -   
5.1.3     | 1     | 0    | 0   -   0   
5.1.4     | 0     | 0    | 1   0   -   

index: 6.1 grade: 66.67% (2/3) line: 86 source: assign  w_frontdoor_valid = i_register_valid && w_active;

i_register_valid && w_active
<------1------->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 1     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 0     | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 101 source: for (i = 0;i < WORDS;i = i + 1) begin

i < WORDS
<1> <-2->

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 1     | lhs < rhs   
7.1.2     | 1     | lhs >= rhs  

index: 8.1 grade: 100.00% (2/2) line: 102 source: for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin

j < BUS_BYTE_WIDTH
<1> <-----2------>

index     | hit   | <1>   <2>   
-------------------------------- '<'
8.1.1     | 1     | lhs < rhs   
8.1.2     | 1     | lhs >= rhs  

index: 9.1 grade: 75.00% (3/4) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(accessible && (write_access == bus_access[0])) && match[i]
 <---1---->    <--------------2-------------->     <--3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
9.1.1     | 1     | 0   -   -   
9.1.2     | 1     | -   0   -   
9.1.3     | 1     | -   -   0   
9.1.4     | 0     | 1   1   1   

index: 9.2 grade: 100.00% (2/2) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(write_access == bus_access[0])
 <----4----->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '=='
9.2.1     | 1     | lhs == rhs  
9.2.2     | 1     | lhs != rhs  

index: 10.1 grade: 33.33% (1/3) line: 120 source: assign  o_register_ready      = (!w_backdoor_valid) && w_active;

(! w_backdoor_valid) && w_active
   <------1------->     <--2--->

index     | hit   | rval | <1> <2> 
-----------------------------------
10.1.1    | 0     | 1    | 0   1   
10.1.2    | 1     | 0    | -   0   
10.1.3    | 0     | 0    | 1   -   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered expressions: 7 of 19
Number of uncovered expressions: 12 of 19
Number of excluded expressions: 3
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (2/4)  | 22     | (w_address_match && w_access_match) && i_additional_match 
2.1    | 0.00% (0/2)   | 32     | value > 0                                          
3.1    | 100.00% (1/1/1) | 43     | START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB] 
4.1    | 50.00% (1/2)  | 44     | address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB] 
5.1    | 0.00% (0/3)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
5.2    | 0.00% (0/2)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) 
5.3    | 0.00% (0/2)   | 49     | (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
6.1    | 100.00% (1/1/2) | 57     | READABLE && WRITABLE                               
7.1    | 100.00% (2/2) | 61     | ! access[ACCESS_BIT]                               

index: 1.1 grade: 50.00% (2/4) line: 22 source: assign  o_match         = w_address_match && w_access_match && i_additional_match;

(w_address_match && w_access_match) && i_additional_match
 <------1------>    <-----2------>     <-------3-------->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
1.1.1     | 1     | 0   -   -   
1.1.2     | 1     | -   0   -   
1.1.3     | 0     | -   -   0   
1.1.4     | 0     | 1   1   1   

index: 2.1 grade: 0.00% (0/2) line: 32 source: while (value > 0) begin

value > 0
<-1->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
2.1.1     | 0     | lhs > rhs   
2.1.2     | 0     | lhs <= rhs  

index: 3.1 grade: 100.00% (1/1/1) line: 43 source: if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin

START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB]
<-------------1-------------->    <------------2------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 1     | lhs == rhs  
3.1.2     | CONST | lhs != rhs  

index: 4.1 grade: 50.00% (1/2) line: 44 source: match_address = (address[WIDTH-1:LSB] == START_ADDRESS[WIDTH-1:LSB]);

address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB]
<----------1----------->    <-------------2-------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
4.1.1     | 0     | lhs == rhs  
4.1.2     | 1     | lhs != rhs  

index: 5.1 grade: 0.00% (0/3) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
<----------------------------1----------------------------->    <---------------------------2---------------------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
5.1.1     | 0     | 0   -   
5.1.2     | 0     | -   0   
5.1.3     | 0     | 1   1   

index: 5.2 grade: 0.00% (0/2) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB])
 <----------3----------->    <-------------4-------------->

index     | hit   | <3>   <4>   
-------------------------------- '>='
5.2.1     | 0     | lhs < rhs   
5.2.2     | 0     | lhs >= rhs  

index: 5.3 grade: 0.00% (0/2) line: 49 source: (address[WIDTH-1:LSB] <= END_ADDRESS[WIDTH-1:LSB]  );

(address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
 <----------5----------->    <------------6------------->

index     | hit   | <5>   <6>   
-------------------------------- '<='
5.3.1     | 0     | lhs > rhs   
5.3.2     | 0     | lhs <= rhs  

index: 6.1 grade: 100.00% (1/1/2) line: 57 source: if (READABLE && WRITABLE) begin

READABLE && WRITABLE
<--1--->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | CONST | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | CONST | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 61 source: match_access  = !access[ACCESS_BIT];

! access[ACCESS_BIT]
  <-------1-------->

index     | hit   | <1> 
------------------------ '!'
7.1.1     | 1     | 1   
7.1.2     | 1     | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.g_CE_FFE_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 18 of 77
Number of uncovered expressions: 59 of 77
Number of excluded expressions: 8
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (1/1/2) | 52     | (SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)     
1.2    | 100.00% (1/1/1) | 52     | (SW_READ_ACTION == 2)                              
1.3    | 100.00% (1/1/1) | 53     | (SW_READ_ACTION == 3)                              
2.1    | 100.00% (1/1/1) | 54     | SW_WRITE_ACTION != 0                               
3.1    | 50.00% (1/2)  | 56     | read_mask != {WIDTH{1'b0}}                         
4.1    | 50.00% (2/4)  | 57     | ((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done) 
4.2    | 50.00% (1/2)  | 57     | (write_mask != {WIDTH{1'b0}})                      
4.3    | 50.00% (1/2)  | 57     | (write_enable == SW_WRITE_ENABLE_POLARITY)         
5.1    | 75.00% (3/4)  | 59     | (valid && action[0]) && access[0]                  
6.1    | 50.00% (2/4)  | 60     | (valid && action[1]) && access[1]                  
7.1    | 50.00% (1/2)  | 71     | write_enable == HW_WRITE_ENABLE_POLARITY           
8.1    | 50.00% (1/2)  | 72     | set != {HW_SET_WIDTH{1'b0}}                        
9.1    | 50.00% (1/2)  | 73     | clear != {HW_CLEAR_WIDTH{1'b0}}                    
10.1   | 25.00% (1/4)  | 74     | (update[0] || update[1]) || update[2]              
11.1   | 0.00% (0/1/1) | 90     | PRECEDENCE_ACCESS == 0                             
12.1   | 0.00% (0/3)   | 132    | write_mask & (~ write_data)                        
13.1   | 0.00% (0/3)   | 133    | write_mask & write_data                            
14.1   | 0.00% (0/4)   | 135    | (current_value & (~ write_mask)) | masked_data[1]  
15.1   | 0.00% (0/3)   | 136    | current_value & (~ masked_data[0])                 
16.1   | 0.00% (0/3)   | 137    | current_value & (~ masked_data[1])                 
17.1   | 0.00% (0/3)   | 139    | current_value | masked_data[0]                     
18.1   | 0.00% (0/3)   | 140    | current_value | masked_data[1]                     
19.1   | 0.00% (0/4)   | 142    | current_value ^ masked_data[0]                     
20.1   | 0.00% (0/4)   | 143    | current_value ^ masked_data[1]                     
21.1   | 0.00% (0/1/1) | 165    | HW_SET_WIDTH == WIDTH                              
22.1   | 0.00% (0/1/1) | 172    | HW_CLEAR_WIDTH == WIDTH                            
23.1   | 0.00% (0/2)   | 179    | write_enable == HW_WRITE_ENABLE_POLARITY           
24.1   | 0.00% (0/4)   | 186    | (value & (~ set_clear[1])) | set_clear[0]          
25.1   | 0.00% (0/3)   | 202    | w_read_data & i_mask                               
26.1   | 0.00% (0/3)   | 206    | w_value & i_mask                                   

index: 1.1 grade: 100.00% (1/1/2) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)
<---------1--------->    <---------2--------->

index     | hit   | <1> <2> 
---------------------------- '||'
1.1.1     | CONST | 1   -   
1.1.2     | CONST | -   1   
1.1.3     | 1     | 0   0   

index: 1.2 grade: 100.00% (1/1/1) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2)
 <-----3------>    <4>

index     | hit   | <3>   <4>   
-------------------------------- '=='
1.2.1     | CONST | lhs == rhs  
1.2.2     | 1     | lhs != rhs  

index: 1.3 grade: 100.00% (1/1/1) line: 53 source: (SW_READ_ACTION  == `RGGEN_READ_SET  );

(SW_READ_ACTION == 3)
 <-----5------>    <6>

index     | hit   | <5>   <6>   
-------------------------------- '=='
1.3.1     | CONST | lhs == rhs  
1.3.2     | 1     | lhs != rhs  

index: 2.1 grade: 100.00% (1/1/1) line: 54 source: action[1] = (SW_WRITE_ACTION != `RGGEN_WRITE_NONE);

SW_WRITE_ACTION != 0
<------1------>    <2>

index     | hit   | <1>   <2>   
-------------------------------- '!='
2.1.1     | CONST | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 50.00% (1/2) line: 56 source: access[0] = (read_mask  != {WIDTH{1'b0}});

read_mask != {WIDTH{1'b0}}
<---1--->    <-----2----->

index     | hit   | <1>   <2>   
-------------------------------- '!='
3.1.1     | 1     | lhs == rhs  
3.1.2     | 0     | lhs != rhs  

index: 4.1 grade: 50.00% (2/4) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done)
 <-------------1------------->    <-------------------2-------------------->        <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 1   1   0   
4.1.2     | 0     | 0    | -   -   1   
4.1.3     | 1     | 0    | -   0   -   
4.1.4     | 1     | 0    | 0   -   -   

index: 4.2 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_mask != {WIDTH{1'b0}})
 <---4---->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '!='
4.2.1     | 1     | lhs == rhs  
4.2.2     | 0     | lhs != rhs  

index: 4.3 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_enable == SW_WRITE_ENABLE_POLARITY)
 <----6----->    <----------7----------->

index     | hit   | <6>   <7>   
-------------------------------- '=='
4.3.1     | 0     | lhs == rhs  
4.3.2     | 1     | lhs != rhs  

index: 5.1 grade: 75.00% (3/4) line: 59 source: get_sw_update[0]  = valid && action[0] && access[0];

(valid && action[0]) && access[0]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
5.1.1     | 1     | 0   -   -   
5.1.2     | 1     | -   0   -   
5.1.3     | 1     | -   -   0   
5.1.4     | 0     | 1   1   1   

index: 6.1 grade: 50.00% (2/4) line: 60 source: get_sw_update[1]  = valid && action[1] && access[1];

(valid && action[1]) && access[1]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
6.1.1     | 1     | 0   -   -   
6.1.2     | 0     | -   0   -   
6.1.3     | 1     | -   -   0   
6.1.4     | 0     | 1   1   1   

index: 7.1 grade: 50.00% (1/2) line: 71 source: update[0]     = write_enable == HW_WRITE_ENABLE_POLARITY;

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 0     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 50.00% (1/2) line: 72 source: update[1]     = set   != {HW_SET_WIDTH{1'b0}};

set != {HW_SET_WIDTH{1'b0}}
<1>    <--------2--------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
8.1.1     | 1     | lhs == rhs  
8.1.2     | 0     | lhs != rhs  

index: 9.1 grade: 50.00% (1/2) line: 73 source: update[2]     = clear != {HW_CLEAR_WIDTH{1'b0}};

clear != {HW_CLEAR_WIDTH{1'b0}}
<-1->    <---------2---------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
9.1.1     | 1     | lhs == rhs  
9.1.2     | 0     | lhs != rhs  

index: 10.1 grade: 25.00% (1/4) line: 74 source: get_hw_update = update[0] || update[1] || update[2];

(update[0] || update[1]) || update[2]
 <---1--->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
10.1.1    | 0     | 1   -   -   
10.1.2    | 0     | -   1   -   
10.1.3    | 0     | -   -   1   
10.1.4    | 1     | 0   0   0   

index: 11.1 grade: 0.00% (0/1/1) line: 90 source: if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin

PRECEDENCE_ACCESS == 0
<-------1------->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
11.1.1    | CONST | lhs == rhs  
11.1.2    | 0     | lhs != rhs  

index: 12.1 grade: 0.00% (0/3) line: 132 source: masked_data[0]  = write_mask & (~write_data);

write_mask & (~ write_data)
<---1---->      <---2---->

index     | hit   | rval | <1> <2> 
-----------------------------------
12.1.1    | 0     | 1    | 1   0   
12.1.2    | 0     | 0    | -   1   
12.1.3    | 0     | 0    | 0   -   

index: 13.1 grade: 0.00% (0/3) line: 133 source: masked_data[1]  = write_mask & ( write_data);

write_mask & write_data
<---1---->   <---2---->

index     | hit   | <1> <2> 
---------------------------- '&'
13.1.1    | 0     | 0   -   
13.1.2    | 0     | -   0   
13.1.3    | 0     | 1   1   

index: 14.1 grade: 0.00% (0/4) line: 135 source: `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1];

(current_value & (~ write_mask)) | masked_data[1]
 <-----1----->      <---2---->     <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
14.1.1    | 0     | 1    | -   -   1   
14.1.2    | 0     | 1    | 1   0   -   
14.1.3    | 0     | 0    | -   1   0   
14.1.4    | 0     | 0    | 0   -   0   

index: 15.1 grade: 0.00% (0/3) line: 136 source: `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]);

current_value & (~ masked_data[0])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
15.1.1    | 0     | 1    | 1   0   
15.1.2    | 0     | 0    | -   1   
15.1.3    | 0     | 0    | 0   -   

index: 16.1 grade: 0.00% (0/3) line: 137 source: `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]);

current_value & (~ masked_data[1])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
16.1.1    | 0     | 1    | 1   0   
16.1.2    | 0     | 0    | -   1   
16.1.3    | 0     | 0    | 0   -   

index: 17.1 grade: 0.00% (0/3) line: 139 source: `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0];

current_value | masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
17.1.1    | 0     | 1   -   
17.1.2    | 0     | -   1   
17.1.3    | 0     | 0   0   

index: 18.1 grade: 0.00% (0/3) line: 140 source: `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1];

current_value | masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
18.1.1    | 0     | 1   -   
18.1.2    | 0     | -   1   
18.1.3    | 0     | 0   0   

index: 19.1 grade: 0.00% (0/4) line: 142 source: `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0];

current_value ^ masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
19.1.1    | 0     | 0   0   
19.1.2    | 0     | 0   1   
19.1.3    | 0     | 1   0   
19.1.4    | 0     | 1   1   

index: 20.1 grade: 0.00% (0/4) line: 143 source: `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1];

current_value ^ masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
20.1.1    | 0     | 0   0   
20.1.2    | 0     | 0   1   
20.1.3    | 0     | 1   0   
20.1.4    | 0     | 1   1   

index: 21.1 grade: 0.00% (0/1/1) line: 165 source: if (HW_SET_WIDTH == WIDTH) begin

HW_SET_WIDTH == WIDTH
<----1----->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
21.1.1    | 0     | lhs == rhs  
21.1.2    | CONST | lhs != rhs  

index: 22.1 grade: 0.00% (0/1/1) line: 172 source: if (HW_CLEAR_WIDTH == WIDTH) begin

HW_CLEAR_WIDTH == WIDTH
<-----1------>    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
22.1.1    | 0     | lhs == rhs  
22.1.2    | CONST | lhs != rhs  

index: 23.1 grade: 0.00% (0/2) line: 179 source: if (write_enable == HW_WRITE_ENABLE_POLARITY) begin

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
23.1.1    | 0     | lhs == rhs  
23.1.2    | 0     | lhs != rhs  

index: 24.1 grade: 0.00% (0/4) line: 186 source: get_hw_next_value = (value & (~set_clear[1])) | set_clear[0];

(value & (~ set_clear[1])) | set_clear[0]
 <-1->      <----2----->     <----3----->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
24.1.1    | 0     | 1    | -   -   1   
24.1.2    | 0     | 1    | 1   0   -   
24.1.3    | 0     | 0    | -   1   0   
24.1.4    | 0     | 0    | 0   -   0   

index: 25.1 grade: 0.00% (0/3) line: 202 source: assign  o_sw_read_data    = w_read_data & i_mask;

w_read_data & i_mask
<----1---->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
25.1.1    | 0     | 0   -   
25.1.2    | 0     | -   0   
25.1.3    | 0     | 1   1   

index: 26.1 grade: 0.00% (0/3) line: 206 source: assign  o_value           = w_value & i_mask;

w_value & i_mask
<--1-->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
26.1.1    | 0     | 0   -   
26.1.2    | 0     | -   0   
26.1.3    | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered expressions: 18 of 34
Number of uncovered expressions: 16 of 34
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (1/2)  | 40     | | {1'b0,w_match}                                   
2.1    | 25.00% (1/4)  | 81     | (w_frontdoor_valid || w_backdoor_valid) || w_pending_valid 
3.1    | 25.00% (1/4)  | 82     | w_backdoor_valid ? w_read_mask[1] : w_read_mask[0] 
4.1    | 25.00% (1/4)  | 83     | w_backdoor_valid ? w_write_mask[1] : w_write_mask[0] 
5.1    | 50.00% (2/4)  | 84     | w_backdoor_valid ? w_write_data[1] : w_write_data[0] 
6.1    | 66.67% (2/3)  | 86     | i_register_valid && w_active                       
7.1    | 100.00% (2/2) | 101    | i < WORDS                                          
8.1    | 100.00% (2/2) | 102    | j < BUS_BYTE_WIDTH                                 
9.1    | 75.00% (3/4)  | 103    | (accessible && (write_access == bus_access[0])) && match[i] 
9.2    | 100.00% (2/2) | 103    | (write_access == bus_access[0])                    
10.1   | 33.33% (1/3)  | 120    | (! w_backdoor_valid) && w_active                   

index: 1.1 grade: 50.00% (1/2) line: 40 source: assign  w_active  = |{1'b0, w_match};

| {1'b0,w_match}
<------1------->

index     | hit   | <1> 
------------------------ '|'
1.1.1     | 0     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 25.00% (1/4) line: 81 source: assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid;

(w_frontdoor_valid || w_backdoor_valid) || w_pending_valid
 <-------1------->    <------2------->     <------3------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 0     | 1   -   -   
2.1.2     | 0     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   

index: 3.1 grade: 25.00% (1/4) line: 82 source: assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0];

w_backdoor_valid ? w_read_mask[1] : w_read_mask[0]
<------1------->   <-----2------>   <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
3.1.1     | 0     | 1    | 0   -   1   
3.1.2     | 0     | 1    | 1   1   -   
3.1.3     | 1     | 0    | 0   -   0   
3.1.4     | 0     | 0    | 1   0   -   

index: 4.1 grade: 25.00% (1/4) line: 83 source: assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0];

w_backdoor_valid ? w_write_mask[1] : w_write_mask[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 0   -   1   
4.1.2     | 0     | 1    | 1   1   -   
4.1.3     | 1     | 0    | 0   -   0   
4.1.4     | 0     | 0    | 1   0   -   

index: 5.1 grade: 50.00% (2/4) line: 84 source: assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0];

w_backdoor_valid ? w_write_data[1] : w_write_data[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | 1     | 1    | 0   -   1   
5.1.2     | 0     | 1    | 1   1   -   
5.1.3     | 1     | 0    | 0   -   0   
5.1.4     | 0     | 0    | 1   0   -   

index: 6.1 grade: 66.67% (2/3) line: 86 source: assign  w_frontdoor_valid = i_register_valid && w_active;

i_register_valid && w_active
<------1------->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 1     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 0     | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 101 source: for (i = 0;i < WORDS;i = i + 1) begin

i < WORDS
<1> <-2->

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 1     | lhs < rhs   
7.1.2     | 1     | lhs >= rhs  

index: 8.1 grade: 100.00% (2/2) line: 102 source: for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin

j < BUS_BYTE_WIDTH
<1> <-----2------>

index     | hit   | <1>   <2>   
-------------------------------- '<'
8.1.1     | 1     | lhs < rhs   
8.1.2     | 1     | lhs >= rhs  

index: 9.1 grade: 75.00% (3/4) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(accessible && (write_access == bus_access[0])) && match[i]
 <---1---->    <--------------2-------------->     <--3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
9.1.1     | 1     | 0   -   -   
9.1.2     | 1     | -   0   -   
9.1.3     | 1     | -   -   0   
9.1.4     | 0     | 1   1   1   

index: 9.2 grade: 100.00% (2/2) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(write_access == bus_access[0])
 <----4----->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '=='
9.2.1     | 1     | lhs == rhs  
9.2.2     | 1     | lhs != rhs  

index: 10.1 grade: 33.33% (1/3) line: 120 source: assign  o_register_ready      = (!w_backdoor_valid) && w_active;

(! w_backdoor_valid) && w_active
   <------1------->     <--2--->

index     | hit   | rval | <1> <2> 
-----------------------------------
10.1.1    | 0     | 1    | 0   1   
10.1.2    | 1     | 0    | -   0   
10.1.3    | 0     | 0    | 1   -   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered expressions: 7 of 19
Number of uncovered expressions: 12 of 19
Number of excluded expressions: 3
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (2/4)  | 22     | (w_address_match && w_access_match) && i_additional_match 
2.1    | 0.00% (0/2)   | 32     | value > 0                                          
3.1    | 100.00% (1/1/1) | 43     | START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB] 
4.1    | 50.00% (1/2)  | 44     | address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB] 
5.1    | 0.00% (0/3)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
5.2    | 0.00% (0/2)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) 
5.3    | 0.00% (0/2)   | 49     | (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
6.1    | 100.00% (1/1/2) | 57     | READABLE && WRITABLE                               
7.1    | 100.00% (2/2) | 61     | ! access[ACCESS_BIT]                               

index: 1.1 grade: 50.00% (2/4) line: 22 source: assign  o_match         = w_address_match && w_access_match && i_additional_match;

(w_address_match && w_access_match) && i_additional_match
 <------1------>    <-----2------>     <-------3-------->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
1.1.1     | 1     | 0   -   -   
1.1.2     | 1     | -   0   -   
1.1.3     | 0     | -   -   0   
1.1.4     | 0     | 1   1   1   

index: 2.1 grade: 0.00% (0/2) line: 32 source: while (value > 0) begin

value > 0
<-1->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
2.1.1     | 0     | lhs > rhs   
2.1.2     | 0     | lhs <= rhs  

index: 3.1 grade: 100.00% (1/1/1) line: 43 source: if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin

START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB]
<-------------1-------------->    <------------2------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 1     | lhs == rhs  
3.1.2     | CONST | lhs != rhs  

index: 4.1 grade: 50.00% (1/2) line: 44 source: match_address = (address[WIDTH-1:LSB] == START_ADDRESS[WIDTH-1:LSB]);

address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB]
<----------1----------->    <-------------2-------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
4.1.1     | 0     | lhs == rhs  
4.1.2     | 1     | lhs != rhs  

index: 5.1 grade: 0.00% (0/3) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
<----------------------------1----------------------------->    <---------------------------2---------------------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
5.1.1     | 0     | 0   -   
5.1.2     | 0     | -   0   
5.1.3     | 0     | 1   1   

index: 5.2 grade: 0.00% (0/2) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB])
 <----------3----------->    <-------------4-------------->

index     | hit   | <3>   <4>   
-------------------------------- '>='
5.2.1     | 0     | lhs < rhs   
5.2.2     | 0     | lhs >= rhs  

index: 5.3 grade: 0.00% (0/2) line: 49 source: (address[WIDTH-1:LSB] <= END_ADDRESS[WIDTH-1:LSB]  );

(address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
 <----------5----------->    <------------6------------->

index     | hit   | <5>   <6>   
-------------------------------- '<='
5.3.1     | 0     | lhs > rhs   
5.3.2     | 0     | lhs <= rhs  

index: 6.1 grade: 100.00% (1/1/2) line: 57 source: if (READABLE && WRITABLE) begin

READABLE && WRITABLE
<--1--->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | CONST | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | CONST | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 61 source: match_access  = !access[ACCESS_BIT];

! access[ACCESS_BIT]
  <-------1-------->

index     | hit   | <1> 
------------------------ '!'
7.1.1     | 1     | 1   
7.1.2     | 1     | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.g_UE_FFE_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 18 of 77
Number of uncovered expressions: 59 of 77
Number of excluded expressions: 8
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (1/1/2) | 52     | (SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)     
1.2    | 100.00% (1/1/1) | 52     | (SW_READ_ACTION == 2)                              
1.3    | 100.00% (1/1/1) | 53     | (SW_READ_ACTION == 3)                              
2.1    | 100.00% (1/1/1) | 54     | SW_WRITE_ACTION != 0                               
3.1    | 50.00% (1/2)  | 56     | read_mask != {WIDTH{1'b0}}                         
4.1    | 50.00% (2/4)  | 57     | ((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done) 
4.2    | 50.00% (1/2)  | 57     | (write_mask != {WIDTH{1'b0}})                      
4.3    | 50.00% (1/2)  | 57     | (write_enable == SW_WRITE_ENABLE_POLARITY)         
5.1    | 75.00% (3/4)  | 59     | (valid && action[0]) && access[0]                  
6.1    | 50.00% (2/4)  | 60     | (valid && action[1]) && access[1]                  
7.1    | 50.00% (1/2)  | 71     | write_enable == HW_WRITE_ENABLE_POLARITY           
8.1    | 50.00% (1/2)  | 72     | set != {HW_SET_WIDTH{1'b0}}                        
9.1    | 50.00% (1/2)  | 73     | clear != {HW_CLEAR_WIDTH{1'b0}}                    
10.1   | 25.00% (1/4)  | 74     | (update[0] || update[1]) || update[2]              
11.1   | 0.00% (0/1/1) | 90     | PRECEDENCE_ACCESS == 0                             
12.1   | 0.00% (0/3)   | 132    | write_mask & (~ write_data)                        
13.1   | 0.00% (0/3)   | 133    | write_mask & write_data                            
14.1   | 0.00% (0/4)   | 135    | (current_value & (~ write_mask)) | masked_data[1]  
15.1   | 0.00% (0/3)   | 136    | current_value & (~ masked_data[0])                 
16.1   | 0.00% (0/3)   | 137    | current_value & (~ masked_data[1])                 
17.1   | 0.00% (0/3)   | 139    | current_value | masked_data[0]                     
18.1   | 0.00% (0/3)   | 140    | current_value | masked_data[1]                     
19.1   | 0.00% (0/4)   | 142    | current_value ^ masked_data[0]                     
20.1   | 0.00% (0/4)   | 143    | current_value ^ masked_data[1]                     
21.1   | 0.00% (0/1/1) | 165    | HW_SET_WIDTH == WIDTH                              
22.1   | 0.00% (0/1/1) | 172    | HW_CLEAR_WIDTH == WIDTH                            
23.1   | 0.00% (0/2)   | 179    | write_enable == HW_WRITE_ENABLE_POLARITY           
24.1   | 0.00% (0/4)   | 186    | (value & (~ set_clear[1])) | set_clear[0]          
25.1   | 0.00% (0/3)   | 202    | w_read_data & i_mask                               
26.1   | 0.00% (0/3)   | 206    | w_value & i_mask                                   

index: 1.1 grade: 100.00% (1/1/2) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)
<---------1--------->    <---------2--------->

index     | hit   | <1> <2> 
---------------------------- '||'
1.1.1     | CONST | 1   -   
1.1.2     | CONST | -   1   
1.1.3     | 1     | 0   0   

index: 1.2 grade: 100.00% (1/1/1) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2)
 <-----3------>    <4>

index     | hit   | <3>   <4>   
-------------------------------- '=='
1.2.1     | CONST | lhs == rhs  
1.2.2     | 1     | lhs != rhs  

index: 1.3 grade: 100.00% (1/1/1) line: 53 source: (SW_READ_ACTION  == `RGGEN_READ_SET  );

(SW_READ_ACTION == 3)
 <-----5------>    <6>

index     | hit   | <5>   <6>   
-------------------------------- '=='
1.3.1     | CONST | lhs == rhs  
1.3.2     | 1     | lhs != rhs  

index: 2.1 grade: 100.00% (1/1/1) line: 54 source: action[1] = (SW_WRITE_ACTION != `RGGEN_WRITE_NONE);

SW_WRITE_ACTION != 0
<------1------>    <2>

index     | hit   | <1>   <2>   
-------------------------------- '!='
2.1.1     | CONST | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 50.00% (1/2) line: 56 source: access[0] = (read_mask  != {WIDTH{1'b0}});

read_mask != {WIDTH{1'b0}}
<---1--->    <-----2----->

index     | hit   | <1>   <2>   
-------------------------------- '!='
3.1.1     | 1     | lhs == rhs  
3.1.2     | 0     | lhs != rhs  

index: 4.1 grade: 50.00% (2/4) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done)
 <-------------1------------->    <-------------------2-------------------->        <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 1   1   0   
4.1.2     | 0     | 0    | -   -   1   
4.1.3     | 1     | 0    | -   0   -   
4.1.4     | 1     | 0    | 0   -   -   

index: 4.2 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_mask != {WIDTH{1'b0}})
 <---4---->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '!='
4.2.1     | 1     | lhs == rhs  
4.2.2     | 0     | lhs != rhs  

index: 4.3 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_enable == SW_WRITE_ENABLE_POLARITY)
 <----6----->    <----------7----------->

index     | hit   | <6>   <7>   
-------------------------------- '=='
4.3.1     | 0     | lhs == rhs  
4.3.2     | 1     | lhs != rhs  

index: 5.1 grade: 75.00% (3/4) line: 59 source: get_sw_update[0]  = valid && action[0] && access[0];

(valid && action[0]) && access[0]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
5.1.1     | 1     | 0   -   -   
5.1.2     | 1     | -   0   -   
5.1.3     | 1     | -   -   0   
5.1.4     | 0     | 1   1   1   

index: 6.1 grade: 50.00% (2/4) line: 60 source: get_sw_update[1]  = valid && action[1] && access[1];

(valid && action[1]) && access[1]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
6.1.1     | 1     | 0   -   -   
6.1.2     | 0     | -   0   -   
6.1.3     | 1     | -   -   0   
6.1.4     | 0     | 1   1   1   

index: 7.1 grade: 50.00% (1/2) line: 71 source: update[0]     = write_enable == HW_WRITE_ENABLE_POLARITY;

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 0     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 50.00% (1/2) line: 72 source: update[1]     = set   != {HW_SET_WIDTH{1'b0}};

set != {HW_SET_WIDTH{1'b0}}
<1>    <--------2--------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
8.1.1     | 1     | lhs == rhs  
8.1.2     | 0     | lhs != rhs  

index: 9.1 grade: 50.00% (1/2) line: 73 source: update[2]     = clear != {HW_CLEAR_WIDTH{1'b0}};

clear != {HW_CLEAR_WIDTH{1'b0}}
<-1->    <---------2---------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
9.1.1     | 1     | lhs == rhs  
9.1.2     | 0     | lhs != rhs  

index: 10.1 grade: 25.00% (1/4) line: 74 source: get_hw_update = update[0] || update[1] || update[2];

(update[0] || update[1]) || update[2]
 <---1--->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
10.1.1    | 0     | 1   -   -   
10.1.2    | 0     | -   1   -   
10.1.3    | 0     | -   -   1   
10.1.4    | 1     | 0   0   0   

index: 11.1 grade: 0.00% (0/1/1) line: 90 source: if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin

PRECEDENCE_ACCESS == 0
<-------1------->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
11.1.1    | CONST | lhs == rhs  
11.1.2    | 0     | lhs != rhs  

index: 12.1 grade: 0.00% (0/3) line: 132 source: masked_data[0]  = write_mask & (~write_data);

write_mask & (~ write_data)
<---1---->      <---2---->

index     | hit   | rval | <1> <2> 
-----------------------------------
12.1.1    | 0     | 1    | 1   0   
12.1.2    | 0     | 0    | -   1   
12.1.3    | 0     | 0    | 0   -   

index: 13.1 grade: 0.00% (0/3) line: 133 source: masked_data[1]  = write_mask & ( write_data);

write_mask & write_data
<---1---->   <---2---->

index     | hit   | <1> <2> 
---------------------------- '&'
13.1.1    | 0     | 0   -   
13.1.2    | 0     | -   0   
13.1.3    | 0     | 1   1   

index: 14.1 grade: 0.00% (0/4) line: 135 source: `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1];

(current_value & (~ write_mask)) | masked_data[1]
 <-----1----->      <---2---->     <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
14.1.1    | 0     | 1    | -   -   1   
14.1.2    | 0     | 1    | 1   0   -   
14.1.3    | 0     | 0    | -   1   0   
14.1.4    | 0     | 0    | 0   -   0   

index: 15.1 grade: 0.00% (0/3) line: 136 source: `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]);

current_value & (~ masked_data[0])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
15.1.1    | 0     | 1    | 1   0   
15.1.2    | 0     | 0    | -   1   
15.1.3    | 0     | 0    | 0   -   

index: 16.1 grade: 0.00% (0/3) line: 137 source: `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]);

current_value & (~ masked_data[1])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
16.1.1    | 0     | 1    | 1   0   
16.1.2    | 0     | 0    | -   1   
16.1.3    | 0     | 0    | 0   -   

index: 17.1 grade: 0.00% (0/3) line: 139 source: `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0];

current_value | masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
17.1.1    | 0     | 1   -   
17.1.2    | 0     | -   1   
17.1.3    | 0     | 0   0   

index: 18.1 grade: 0.00% (0/3) line: 140 source: `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1];

current_value | masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
18.1.1    | 0     | 1   -   
18.1.2    | 0     | -   1   
18.1.3    | 0     | 0   0   

index: 19.1 grade: 0.00% (0/4) line: 142 source: `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0];

current_value ^ masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
19.1.1    | 0     | 0   0   
19.1.2    | 0     | 0   1   
19.1.3    | 0     | 1   0   
19.1.4    | 0     | 1   1   

index: 20.1 grade: 0.00% (0/4) line: 143 source: `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1];

current_value ^ masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
20.1.1    | 0     | 0   0   
20.1.2    | 0     | 0   1   
20.1.3    | 0     | 1   0   
20.1.4    | 0     | 1   1   

index: 21.1 grade: 0.00% (0/1/1) line: 165 source: if (HW_SET_WIDTH == WIDTH) begin

HW_SET_WIDTH == WIDTH
<----1----->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
21.1.1    | 0     | lhs == rhs  
21.1.2    | CONST | lhs != rhs  

index: 22.1 grade: 0.00% (0/1/1) line: 172 source: if (HW_CLEAR_WIDTH == WIDTH) begin

HW_CLEAR_WIDTH == WIDTH
<-----1------>    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
22.1.1    | 0     | lhs == rhs  
22.1.2    | CONST | lhs != rhs  

index: 23.1 grade: 0.00% (0/2) line: 179 source: if (write_enable == HW_WRITE_ENABLE_POLARITY) begin

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
23.1.1    | 0     | lhs == rhs  
23.1.2    | 0     | lhs != rhs  

index: 24.1 grade: 0.00% (0/4) line: 186 source: get_hw_next_value = (value & (~set_clear[1])) | set_clear[0];

(value & (~ set_clear[1])) | set_clear[0]
 <-1->      <----2----->     <----3----->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
24.1.1    | 0     | 1    | -   -   1   
24.1.2    | 0     | 1    | 1   0   -   
24.1.3    | 0     | 0    | -   1   0   
24.1.4    | 0     | 0    | 0   -   0   

index: 25.1 grade: 0.00% (0/3) line: 202 source: assign  o_sw_read_data    = w_read_data & i_mask;

w_read_data & i_mask
<----1---->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
25.1.1    | 0     | 0   -   
25.1.2    | 0     | -   0   
25.1.3    | 0     | 1   1   

index: 26.1 grade: 0.00% (0/3) line: 206 source: assign  o_value           = w_value & i_mask;

w_value & i_mask
<--1-->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
26.1.1    | 0     | 0   -   
26.1.2    | 0     | -   0   
26.1.3    | 0     | 1   1   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered expressions: 18 of 34
Number of uncovered expressions: 16 of 34
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (1/2)  | 40     | | {1'b0,w_match}                                   
2.1    | 25.00% (1/4)  | 81     | (w_frontdoor_valid || w_backdoor_valid) || w_pending_valid 
3.1    | 25.00% (1/4)  | 82     | w_backdoor_valid ? w_read_mask[1] : w_read_mask[0] 
4.1    | 25.00% (1/4)  | 83     | w_backdoor_valid ? w_write_mask[1] : w_write_mask[0] 
5.1    | 50.00% (2/4)  | 84     | w_backdoor_valid ? w_write_data[1] : w_write_data[0] 
6.1    | 66.67% (2/3)  | 86     | i_register_valid && w_active                       
7.1    | 100.00% (2/2) | 101    | i < WORDS                                          
8.1    | 100.00% (2/2) | 102    | j < BUS_BYTE_WIDTH                                 
9.1    | 75.00% (3/4)  | 103    | (accessible && (write_access == bus_access[0])) && match[i] 
9.2    | 100.00% (2/2) | 103    | (write_access == bus_access[0])                    
10.1   | 33.33% (1/3)  | 120    | (! w_backdoor_valid) && w_active                   

index: 1.1 grade: 50.00% (1/2) line: 40 source: assign  w_active  = |{1'b0, w_match};

| {1'b0,w_match}
<------1------->

index     | hit   | <1> 
------------------------ '|'
1.1.1     | 0     | 1   
1.1.2     | 1     | 0   

index: 2.1 grade: 25.00% (1/4) line: 81 source: assign  o_bit_field_valid       = w_frontdoor_valid || w_backdoor_valid || w_pending_valid;

(w_frontdoor_valid || w_backdoor_valid) || w_pending_valid
 <-------1------->    <------2------->     <------3------>

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
2.1.1     | 0     | 1   -   -   
2.1.2     | 0     | -   1   -   
2.1.3     | 0     | -   -   1   
2.1.4     | 1     | 0   0   0   

index: 3.1 grade: 25.00% (1/4) line: 82 source: assign  o_bit_field_read_mask   = (w_backdoor_valid) ? w_read_mask[1]  : w_read_mask[0];

w_backdoor_valid ? w_read_mask[1] : w_read_mask[0]
<------1------->   <-----2------>   <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
3.1.1     | 0     | 1    | 0   -   1   
3.1.2     | 0     | 1    | 1   1   -   
3.1.3     | 1     | 0    | 0   -   0   
3.1.4     | 0     | 0    | 1   0   -   

index: 4.1 grade: 25.00% (1/4) line: 83 source: assign  o_bit_field_write_mask  = (w_backdoor_valid) ? w_write_mask[1] : w_write_mask[0];

w_backdoor_valid ? w_write_mask[1] : w_write_mask[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 0   -   1   
4.1.2     | 0     | 1    | 1   1   -   
4.1.3     | 1     | 0    | 0   -   0   
4.1.4     | 0     | 0    | 1   0   -   

index: 5.1 grade: 50.00% (2/4) line: 84 source: assign  o_bit_field_write_data  = (w_backdoor_valid) ? w_write_data[1] : w_write_data[0];

w_backdoor_valid ? w_write_data[1] : w_write_data[0]
<------1------->   <------2------>   <------3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
5.1.1     | 1     | 1    | 0   -   1   
5.1.2     | 0     | 1    | 1   1   -   
5.1.3     | 1     | 0    | 0   -   0   
5.1.4     | 0     | 0    | 1   0   -   

index: 6.1 grade: 66.67% (2/3) line: 86 source: assign  w_frontdoor_valid = i_register_valid && w_active;

i_register_valid && w_active
<------1------->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | 1     | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | 0     | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 101 source: for (i = 0;i < WORDS;i = i + 1) begin

i < WORDS
<1> <-2->

index     | hit   | <1>   <2>   
-------------------------------- '<'
7.1.1     | 1     | lhs < rhs   
7.1.2     | 1     | lhs >= rhs  

index: 8.1 grade: 100.00% (2/2) line: 102 source: for (j = 0;j < BUS_BYTE_WIDTH;j = j + 1) begin

j < BUS_BYTE_WIDTH
<1> <-----2------>

index     | hit   | <1>   <2>   
-------------------------------- '<'
8.1.1     | 1     | lhs < rhs   
8.1.2     | 1     | lhs >= rhs  

index: 9.1 grade: 75.00% (3/4) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(accessible && (write_access == bus_access[0])) && match[i]
 <---1---->    <--------------2-------------->     <--3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
9.1.1     | 1     | 0   -   -   
9.1.2     | 1     | -   0   -   
9.1.3     | 1     | -   -   0   
9.1.4     | 0     | 1   1   1   

index: 9.2 grade: 100.00% (2/2) line: 103 source: if (accessible && (write_access == bus_access[0]) && match[i]) begin

(write_access == bus_access[0])
 <----4----->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '=='
9.2.1     | 1     | lhs == rhs  
9.2.2     | 1     | lhs != rhs  

index: 10.1 grade: 33.33% (1/3) line: 120 source: assign  o_register_ready      = (!w_backdoor_valid) && w_active;

(! w_backdoor_valid) && w_active
   <------1------->     <--2--->

index     | hit   | rval | <1> <2> 
-----------------------------------
10.1.1    | 0     | 1    | 0   1   
10.1.2    | 1     | 0    | -   0   
10.1.3    | 0     | 0    | 1   -   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered expressions: 7 of 19
Number of uncovered expressions: 12 of 19
Number of excluded expressions: 3
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 50.00% (2/4)  | 22     | (w_address_match && w_access_match) && i_additional_match 
2.1    | 0.00% (0/2)   | 32     | value > 0                                          
3.1    | 100.00% (1/1/1) | 43     | START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB] 
4.1    | 50.00% (1/2)  | 44     | address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB] 
5.1    | 0.00% (0/3)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
5.2    | 0.00% (0/2)   | 48     | (address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) 
5.3    | 0.00% (0/2)   | 49     | (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB]) 
6.1    | 100.00% (1/1/2) | 57     | READABLE && WRITABLE                               
7.1    | 100.00% (2/2) | 61     | ! access[ACCESS_BIT]                               

index: 1.1 grade: 50.00% (2/4) line: 22 source: assign  o_match         = w_address_match && w_access_match && i_additional_match;

(w_address_match && w_access_match) && i_additional_match
 <------1------>    <-----2------>     <-------3-------->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
1.1.1     | 1     | 0   -   -   
1.1.2     | 1     | -   0   -   
1.1.3     | 0     | -   -   0   
1.1.4     | 0     | 1   1   1   

index: 2.1 grade: 0.00% (0/2) line: 32 source: while (value > 0) begin

value > 0
<-1->   <2>

index     | hit   | <1>   <2>   
-------------------------------- '>'
2.1.1     | 0     | lhs > rhs   
2.1.2     | 0     | lhs <= rhs  

index: 3.1 grade: 100.00% (1/1/1) line: 43 source: if (START_ADDRESS[WIDTH-1:LSB] == END_ADDRESS[WIDTH-1:LSB]) begin

START_ADDRESS[(WIDTH - 1):LSB] == END_ADDRESS[(WIDTH - 1):LSB]
<-------------1-------------->    <------------2------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
3.1.1     | 1     | lhs == rhs  
3.1.2     | CONST | lhs != rhs  

index: 4.1 grade: 50.00% (1/2) line: 44 source: match_address = (address[WIDTH-1:LSB] == START_ADDRESS[WIDTH-1:LSB]);

address[(WIDTH - 1):LSB] == START_ADDRESS[(WIDTH - 1):LSB]
<----------1----------->    <-------------2-------------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
4.1.1     | 0     | lhs == rhs  
4.1.2     | 1     | lhs != rhs  

index: 5.1 grade: 0.00% (0/3) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB]) && (address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
<----------------------------1----------------------------->    <---------------------------2---------------------------->

index     | hit   | <1> <2> 
---------------------------- '&&'
5.1.1     | 0     | 0   -   
5.1.2     | 0     | -   0   
5.1.3     | 0     | 1   1   

index: 5.2 grade: 0.00% (0/2) line: 48 source: (address[WIDTH-1:LSB] >= START_ADDRESS[WIDTH-1:LSB]) &&

(address[(WIDTH - 1):LSB] >= START_ADDRESS[(WIDTH - 1):LSB])
 <----------3----------->    <-------------4-------------->

index     | hit   | <3>   <4>   
-------------------------------- '>='
5.2.1     | 0     | lhs < rhs   
5.2.2     | 0     | lhs >= rhs  

index: 5.3 grade: 0.00% (0/2) line: 49 source: (address[WIDTH-1:LSB] <= END_ADDRESS[WIDTH-1:LSB]  );

(address[(WIDTH - 1):LSB] <= END_ADDRESS[(WIDTH - 1):LSB])
 <----------5----------->    <------------6------------->

index     | hit   | <5>   <6>   
-------------------------------- '<='
5.3.1     | 0     | lhs > rhs   
5.3.2     | 0     | lhs <= rhs  

index: 6.1 grade: 100.00% (1/1/2) line: 57 source: if (READABLE && WRITABLE) begin

READABLE && WRITABLE
<--1--->    <--2--->

index     | hit   | <1> <2> 
---------------------------- '&&'
6.1.1     | CONST | 0   -   
6.1.2     | 1     | -   0   
6.1.3     | CONST | 1   1   

index: 7.1 grade: 100.00% (2/2) line: 61 source: match_access  = !access[ACCESS_BIT];

! access[ACCESS_BIT]
  <-------1-------->

index     | hit   | <1> 
------------------------ '!'
7.1.1     | 1     | 1   
7.1.2     | 1     | 0   


Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.g_UE_FFD_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered expressions: 18 of 77
Number of uncovered expressions: 59 of 77
Number of excluded expressions: 8
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (1/1/2) | 52     | (SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)     
1.2    | 100.00% (1/1/1) | 52     | (SW_READ_ACTION == 2)                              
1.3    | 100.00% (1/1/1) | 53     | (SW_READ_ACTION == 3)                              
2.1    | 100.00% (1/1/1) | 54     | SW_WRITE_ACTION != 0                               
3.1    | 50.00% (1/2)  | 56     | read_mask != {WIDTH{1'b0}}                         
4.1    | 50.00% (2/4)  | 57     | ((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done) 
4.2    | 50.00% (1/2)  | 57     | (write_mask != {WIDTH{1'b0}})                      
4.3    | 50.00% (1/2)  | 57     | (write_enable == SW_WRITE_ENABLE_POLARITY)         
5.1    | 75.00% (3/4)  | 59     | (valid && action[0]) && access[0]                  
6.1    | 50.00% (2/4)  | 60     | (valid && action[1]) && access[1]                  
7.1    | 50.00% (1/2)  | 71     | write_enable == HW_WRITE_ENABLE_POLARITY           
8.1    | 50.00% (1/2)  | 72     | set != {HW_SET_WIDTH{1'b0}}                        
9.1    | 50.00% (1/2)  | 73     | clear != {HW_CLEAR_WIDTH{1'b0}}                    
10.1   | 25.00% (1/4)  | 74     | (update[0] || update[1]) || update[2]              
11.1   | 0.00% (0/1/1) | 90     | PRECEDENCE_ACCESS == 0                             
12.1   | 0.00% (0/3)   | 132    | write_mask & (~ write_data)                        
13.1   | 0.00% (0/3)   | 133    | write_mask & write_data                            
14.1   | 0.00% (0/4)   | 135    | (current_value & (~ write_mask)) | masked_data[1]  
15.1   | 0.00% (0/3)   | 136    | current_value & (~ masked_data[0])                 
16.1   | 0.00% (0/3)   | 137    | current_value & (~ masked_data[1])                 
17.1   | 0.00% (0/3)   | 139    | current_value | masked_data[0]                     
18.1   | 0.00% (0/3)   | 140    | current_value | masked_data[1]                     
19.1   | 0.00% (0/4)   | 142    | current_value ^ masked_data[0]                     
20.1   | 0.00% (0/4)   | 143    | current_value ^ masked_data[1]                     
21.1   | 0.00% (0/1/1) | 165    | HW_SET_WIDTH == WIDTH                              
22.1   | 0.00% (0/1/1) | 172    | HW_CLEAR_WIDTH == WIDTH                            
23.1   | 0.00% (0/2)   | 179    | write_enable == HW_WRITE_ENABLE_POLARITY           
24.1   | 0.00% (0/4)   | 186    | (value & (~ set_clear[1])) | set_clear[0]          
25.1   | 0.00% (0/3)   | 202    | w_read_data & i_mask                               
26.1   | 0.00% (0/3)   | 206    | w_value & i_mask                                   

index: 1.1 grade: 100.00% (1/1/2) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2) || (SW_READ_ACTION == 3)
<---------1--------->    <---------2--------->

index     | hit   | <1> <2> 
---------------------------- '||'
1.1.1     | CONST | 1   -   
1.1.2     | CONST | -   1   
1.1.3     | 1     | 0   0   

index: 1.2 grade: 100.00% (1/1/1) line: 52 source: action[0] = (SW_READ_ACTION  == `RGGEN_READ_CLEAR) ||

(SW_READ_ACTION == 2)
 <-----3------>    <4>

index     | hit   | <3>   <4>   
-------------------------------- '=='
1.2.1     | CONST | lhs == rhs  
1.2.2     | 1     | lhs != rhs  

index: 1.3 grade: 100.00% (1/1/1) line: 53 source: (SW_READ_ACTION  == `RGGEN_READ_SET  );

(SW_READ_ACTION == 3)
 <-----5------>    <6>

index     | hit   | <5>   <6>   
-------------------------------- '=='
1.3.1     | CONST | lhs == rhs  
1.3.2     | 1     | lhs != rhs  

index: 2.1 grade: 100.00% (1/1/1) line: 54 source: action[1] = (SW_WRITE_ACTION != `RGGEN_WRITE_NONE);

SW_WRITE_ACTION != 0
<------1------>    <2>

index     | hit   | <1>   <2>   
-------------------------------- '!='
2.1.1     | CONST | lhs == rhs  
2.1.2     | 1     | lhs != rhs  

index: 3.1 grade: 50.00% (1/2) line: 56 source: access[0] = (read_mask  != {WIDTH{1'b0}});

read_mask != {WIDTH{1'b0}}
<---1--->    <-----2----->

index     | hit   | <1>   <2>   
-------------------------------- '!='
3.1.1     | 1     | lhs == rhs  
3.1.2     | 0     | lhs != rhs  

index: 4.1 grade: 50.00% (2/4) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

((write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY)) && (! write_done)
 <-------------1------------->    <-------------------2-------------------->        <---3---->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
4.1.1     | 0     | 1    | 1   1   0   
4.1.2     | 0     | 0    | -   -   1   
4.1.3     | 1     | 0    | -   0   -   
4.1.4     | 1     | 0    | 0   -   -   

index: 4.2 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_mask != {WIDTH{1'b0}})
 <---4---->    <-----5----->

index     | hit   | <4>   <5>   
-------------------------------- '!='
4.2.1     | 1     | lhs == rhs  
4.2.2     | 0     | lhs != rhs  

index: 4.3 grade: 50.00% (1/2) line: 57 source: access[1] = (write_mask != {WIDTH{1'b0}}) && (write_enable == SW_WRITE_ENABLE_POLARITY) && (!write_done);

(write_enable == SW_WRITE_ENABLE_POLARITY)
 <----6----->    <----------7----------->

index     | hit   | <6>   <7>   
-------------------------------- '=='
4.3.1     | 0     | lhs == rhs  
4.3.2     | 1     | lhs != rhs  

index: 5.1 grade: 75.00% (3/4) line: 59 source: get_sw_update[0]  = valid && action[0] && access[0];

(valid && action[0]) && access[0]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
5.1.1     | 1     | 0   -   -   
5.1.2     | 1     | -   0   -   
5.1.3     | 1     | -   -   0   
5.1.4     | 0     | 1   1   1   

index: 6.1 grade: 50.00% (2/4) line: 60 source: get_sw_update[1]  = valid && action[1] && access[1];

(valid && action[1]) && access[1]
 <-1->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '&&'
6.1.1     | 1     | 0   -   -   
6.1.2     | 0     | -   0   -   
6.1.3     | 1     | -   -   0   
6.1.4     | 0     | 1   1   1   

index: 7.1 grade: 50.00% (1/2) line: 71 source: update[0]     = write_enable == HW_WRITE_ENABLE_POLARITY;

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
7.1.1     | 0     | lhs == rhs  
7.1.2     | 1     | lhs != rhs  

index: 8.1 grade: 50.00% (1/2) line: 72 source: update[1]     = set   != {HW_SET_WIDTH{1'b0}};

set != {HW_SET_WIDTH{1'b0}}
<1>    <--------2--------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
8.1.1     | 1     | lhs == rhs  
8.1.2     | 0     | lhs != rhs  

index: 9.1 grade: 50.00% (1/2) line: 73 source: update[2]     = clear != {HW_CLEAR_WIDTH{1'b0}};

clear != {HW_CLEAR_WIDTH{1'b0}}
<-1->    <---------2---------->

index     | hit   | <1>   <2>   
-------------------------------- '!='
9.1.1     | 1     | lhs == rhs  
9.1.2     | 0     | lhs != rhs  

index: 10.1 grade: 25.00% (1/4) line: 74 source: get_hw_update = update[0] || update[1] || update[2];

(update[0] || update[1]) || update[2]
 <---1--->    <---2--->     <---3--->

index     | hit   | <1> <2> <3> 
-------------------------------- '||'
10.1.1    | 0     | 1   -   -   
10.1.2    | 0     | -   1   -   
10.1.3    | 0     | -   -   1   
10.1.4    | 1     | 0   0   0   

index: 11.1 grade: 0.00% (0/1/1) line: 90 source: if (PRECEDENCE_ACCESS == `RGGEN_SW_ACCESS) begin

PRECEDENCE_ACCESS == 0
<-------1------->    <2>

index     | hit   | <1>   <2>   
-------------------------------- '=='
11.1.1    | CONST | lhs == rhs  
11.1.2    | 0     | lhs != rhs  

index: 12.1 grade: 0.00% (0/3) line: 132 source: masked_data[0]  = write_mask & (~write_data);

write_mask & (~ write_data)
<---1---->      <---2---->

index     | hit   | rval | <1> <2> 
-----------------------------------
12.1.1    | 0     | 1    | 1   0   
12.1.2    | 0     | 0    | -   1   
12.1.3    | 0     | 0    | 0   -   

index: 13.1 grade: 0.00% (0/3) line: 133 source: masked_data[1]  = write_mask & ( write_data);

write_mask & write_data
<---1---->   <---2---->

index     | hit   | <1> <2> 
---------------------------- '&'
13.1.1    | 0     | 0   -   
13.1.2    | 0     | -   0   
13.1.3    | 0     | 1   1   

index: 14.1 grade: 0.00% (0/4) line: 135 source: `RGGEN_WRITE_DEFAULT:   value[1]  = (current_value & (~write_mask)) | masked_data[1];

(current_value & (~ write_mask)) | masked_data[1]
 <-----1----->      <---2---->     <-----3------>

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
14.1.1    | 0     | 1    | -   -   1   
14.1.2    | 0     | 1    | 1   0   -   
14.1.3    | 0     | 0    | -   1   0   
14.1.4    | 0     | 0    | 0   -   0   

index: 15.1 grade: 0.00% (0/3) line: 136 source: `RGGEN_WRITE_0_CLEAR:   value[1]  = current_value & (~masked_data[0]);

current_value & (~ masked_data[0])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
15.1.1    | 0     | 1    | 1   0   
15.1.2    | 0     | 0    | -   1   
15.1.3    | 0     | 0    | 0   -   

index: 16.1 grade: 0.00% (0/3) line: 137 source: `RGGEN_WRITE_1_CLEAR:   value[1]  = current_value & (~masked_data[1]);

current_value & (~ masked_data[1])
<-----1----->      <-----2------>

index     | hit   | rval | <1> <2> 
-----------------------------------
16.1.1    | 0     | 1    | 1   0   
16.1.2    | 0     | 0    | -   1   
16.1.3    | 0     | 0    | 0   -   

index: 17.1 grade: 0.00% (0/3) line: 139 source: `RGGEN_WRITE_0_SET:     value[1]  = current_value | masked_data[0];

current_value | masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
17.1.1    | 0     | 1   -   
17.1.2    | 0     | -   1   
17.1.3    | 0     | 0   0   

index: 18.1 grade: 0.00% (0/3) line: 140 source: `RGGEN_WRITE_1_SET:     value[1]  = current_value | masked_data[1];

current_value | masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '|'
18.1.1    | 0     | 1   -   
18.1.2    | 0     | -   1   
18.1.3    | 0     | 0   0   

index: 19.1 grade: 0.00% (0/4) line: 142 source: `RGGEN_WRITE_0_TOGGLE:  value[1]  = current_value ^ masked_data[0];

current_value ^ masked_data[0]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
19.1.1    | 0     | 0   0   
19.1.2    | 0     | 0   1   
19.1.3    | 0     | 1   0   
19.1.4    | 0     | 1   1   

index: 20.1 grade: 0.00% (0/4) line: 143 source: `RGGEN_WRITE_1_TOGGLE:  value[1]  = current_value ^ masked_data[1];

current_value ^ masked_data[1]
<-----1----->   <-----2------>

index     | hit   | <1> <2> 
---------------------------- '^'
20.1.1    | 0     | 0   0   
20.1.2    | 0     | 0   1   
20.1.3    | 0     | 1   0   
20.1.4    | 0     | 1   1   

index: 21.1 grade: 0.00% (0/1/1) line: 165 source: if (HW_SET_WIDTH == WIDTH) begin

HW_SET_WIDTH == WIDTH
<----1----->    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
21.1.1    | 0     | lhs == rhs  
21.1.2    | CONST | lhs != rhs  

index: 22.1 grade: 0.00% (0/1/1) line: 172 source: if (HW_CLEAR_WIDTH == WIDTH) begin

HW_CLEAR_WIDTH == WIDTH
<-----1------>    <-2->

index     | hit   | <1>   <2>   
-------------------------------- '=='
22.1.1    | 0     | lhs == rhs  
22.1.2    | CONST | lhs != rhs  

index: 23.1 grade: 0.00% (0/2) line: 179 source: if (write_enable == HW_WRITE_ENABLE_POLARITY) begin

write_enable == HW_WRITE_ENABLE_POLARITY
<----1----->    <----------2----------->

index     | hit   | <1>   <2>   
-------------------------------- '=='
23.1.1    | 0     | lhs == rhs  
23.1.2    | 0     | lhs != rhs  

index: 24.1 grade: 0.00% (0/4) line: 186 source: get_hw_next_value = (value & (~set_clear[1])) | set_clear[0];

(value & (~ set_clear[1])) | set_clear[0]
 <-1->      <----2----->     <----3----->

index     | hit   | rval | <1> <2> <3> 
---------------------------------------
24.1.1    | 0     | 1    | -   -   1   
24.1.2    | 0     | 1    | 1   0   -   
24.1.3    | 0     | 0    | -   1   0   
24.1.4    | 0     | 0    | 0   -   0   

index: 25.1 grade: 0.00% (0/3) line: 202 source: assign  o_sw_read_data    = w_read_data & i_mask;

w_read_data & i_mask
<----1---->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
25.1.1    | 0     | 0   -   
25.1.2    | 0     | -   0   
25.1.3    | 0     | 1   1   

index: 26.1 grade: 0.00% (0/3) line: 206 source: assign  o_value           = w_value & i_mask;

w_value & i_mask
<--1-->   <-2-->

index     | hit   | <1> <2> 
---------------------------- '&'
26.1.1    | 0     | 0   -   
26.1.2    | 0     | -   0   
26.1.3    | 0     | 1   1   


Instance name: zmc_axi4_top.dual_port_ram_inst
Type name: dual_port_ram
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/dual_port_ram.sv
Number of covered expressions: 2 of 2
Number of uncovered expressions: 0 of 2
Number of excluded expressions: 0
Number of unreachable expressions: 0

index  | grade         | line   | expression                                         
-------------------------------------------------------------------------------------
1.1    | 100.00% (2/2) | 46     | ! RAM_rstn                                         

index: 1.1 grade: 100.00% (2/2) line: 46 source: if(!RAM_rstn)

! RAM_rstn
  <--1--->

index     | hit   | <1> 
------------------------ '!'
1.1.1     | 1     | 1   
1.1.2     | 1     | 0   


Covered+Uncovered+Excluded+UNR Toggle Detail Report, Instance Based
===================================================================

Instance name: zmc_axi4_top
Type name: zmc_axi4_top
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/Zilla_mem_ctrl_Top.sv
Number of covered signal bits: 439 of 523
Number of uncovered signal bits: 84 of 523
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 3 of 523
Number of signal bits partially toggled(fall): 1 of 523

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          zmc_top_clk               
0          1          0          zmc_top_rstn              
1          1          1          zmc_top_sw_rst            
1          1          1          zmc_top_mem_init          
1          1          1          awaddr[31]                
1          1          1          awaddr[30]                
1          1          1          awaddr[29]                
1          1          1          awaddr[28]                
1          1          1          awaddr[27]                
1          1          1          awaddr[26]                
1          1          1          awaddr[25]                
1          1          1          awaddr[24]                
1          1          1          awaddr[23]                
1          1          1          awaddr[22]                
1          1          1          awaddr[21]                
1          1          1          awaddr[20]                
1          1          1          awaddr[19]                
1          1          1          awaddr[18]                
1          1          1          awaddr[17]                
1          1          1          awaddr[16]                
1          1          1          awaddr[15]                
1          1          1          awaddr[14]                
1          1          1          awaddr[13]                
1          1          1          awaddr[12]                
1          1          1          awaddr[11]                
1          1          1          awaddr[10]                
1          1          1          awaddr[9]                 
1          1          1          awaddr[8]                 
1          1          1          awaddr[7]                 
1          1          1          awaddr[6]                 
1          1          1          awaddr[5]                 
1          1          1          awaddr[4]                 
1          1          1          awaddr[3]                 
1          1          1          awaddr[2]                 
1          1          1          awaddr[1]                 
1          1          1          awaddr[0]                 
1          1          1          awlen[3]                  
1          1          1          awlen[2]                  
1          1          1          awlen[1]                  
1          1          1          awlen[0]                  
1          1          1          awburst[1]                
1          1          1          awburst[0]                
1          1          1          awvalid                   
1          1          1          awready                   
1          1          1          wdata[31]                 
1          1          1          wdata[30]                 
1          1          1          wdata[29]                 
1          1          1          wdata[28]                 
1          1          1          wdata[27]                 
1          1          1          wdata[26]                 
1          1          1          wdata[25]                 
1          1          1          wdata[24]                 
1          1          1          wdata[23]                 
1          1          1          wdata[22]                 
1          1          1          wdata[21]                 
1          1          1          wdata[20]                 
1          1          1          wdata[19]                 
1          1          1          wdata[18]                 
1          1          1          wdata[17]                 
1          1          1          wdata[16]                 
1          1          1          wdata[15]                 
1          1          1          wdata[14]                 
1          1          1          wdata[13]                 
1          1          1          wdata[12]                 
1          1          1          wdata[11]                 
1          1          1          wdata[10]                 
1          1          1          wdata[9]                  
1          1          1          wdata[8]                  
1          1          1          wdata[7]                  
1          1          1          wdata[6]                  
1          1          1          wdata[5]                  
1          1          1          wdata[4]                  
1          1          1          wdata[3]                  
1          1          1          wdata[2]                  
1          1          1          wdata[1]                  
1          1          1          wdata[0]                  
1          1          1          wlast                     
1          1          1          wstrb[3]                  
1          1          1          wstrb[2]                  
1          1          1          wstrb[1]                  
1          1          1          wstrb[0]                  
1          1          1          wvalid                    
1          1          1          wready                    
1          1          1          bvalid                    
1          1          1          bready                    
0          0          0          bresp[1]                  
0          0          0          bresp[0]                  
1          1          1          araddr[31]                
1          1          1          araddr[30]                
1          1          1          araddr[29]                
1          1          1          araddr[28]                
1          1          1          araddr[27]                
1          1          1          araddr[26]                
1          1          1          araddr[25]                
1          1          1          araddr[24]                
1          1          1          araddr[23]                
1          1          1          araddr[22]                
1          1          1          araddr[21]                
1          1          1          araddr[20]                
1          1          1          araddr[19]                
1          1          1          araddr[18]                
1          1          1          araddr[17]                
1          1          1          araddr[16]                
1          1          1          araddr[15]                
1          1          1          araddr[14]                
1          1          1          araddr[13]                
1          1          1          araddr[12]                
1          1          1          araddr[11]                
1          1          1          araddr[10]                
1          1          1          araddr[9]                 
1          1          1          araddr[8]                 
1          1          1          araddr[7]                 
1          1          1          araddr[6]                 
1          1          1          araddr[5]                 
1          1          1          araddr[4]                 
1          1          1          araddr[3]                 
1          1          1          araddr[2]                 
1          1          1          araddr[1]                 
1          1          1          araddr[0]                 
1          1          1          arlen[3]                  
1          1          1          arlen[2]                  
1          1          1          arlen[1]                  
1          1          1          arlen[0]                  
1          1          1          arburst[1]                
1          1          1          arburst[0]                
1          1          1          arvalid                   
1          1          1          arready                   
1          1          1          rdata[31]                 
1          1          1          rdata[30]                 
1          1          1          rdata[29]                 
1          1          1          rdata[28]                 
1          1          1          rdata[27]                 
1          1          1          rdata[26]                 
1          1          1          rdata[25]                 
1          1          1          rdata[24]                 
1          1          1          rdata[23]                 
1          1          1          rdata[22]                 
1          1          1          rdata[21]                 
1          1          1          rdata[20]                 
1          1          1          rdata[19]                 
1          1          1          rdata[18]                 
1          1          1          rdata[17]                 
1          1          1          rdata[16]                 
1          1          1          rdata[15]                 
1          1          1          rdata[14]                 
1          1          1          rdata[13]                 
1          1          1          rdata[12]                 
1          1          1          rdata[11]                 
1          1          1          rdata[10]                 
1          1          1          rdata[9]                  
1          1          1          rdata[8]                  
1          1          1          rdata[7]                  
1          1          1          rdata[6]                  
1          1          1          rdata[5]                  
1          1          1          rdata[4]                  
1          1          1          rdata[3]                  
1          1          1          rdata[2]                  
1          1          1          rdata[1]                  
1          1          1          rdata[0]                  
1          1          1          rlast                     
0          0          0          rresp[1]                  
0          0          0          rresp[0]                  
1          1          1          rvalid                    
1          1          1          rready                    
1          1          1          ECC_interrupt             
0          0          0          o_ECC_STAUS_REG[31]       
0          0          0          o_ECC_STAUS_REG[30]       
0          0          0          o_ECC_STAUS_REG[29]       
0          0          0          o_ECC_STAUS_REG[28]       
0          0          0          o_ECC_STAUS_REG[27]       
0          0          0          o_ECC_STAUS_REG[26]       
0          0          0          o_ECC_STAUS_REG[25]       
0          0          0          o_ECC_STAUS_REG[24]       
0          0          0          o_ECC_STAUS_REG[23]       
0          0          0          o_ECC_STAUS_REG[22]       
0          0          0          o_ECC_STAUS_REG[21]       
0          0          0          o_ECC_STAUS_REG[20]       
0          0          0          o_ECC_STAUS_REG[19]       
0          0          0          o_ECC_STAUS_REG[18]       
0          0          0          o_ECC_STAUS_REG[17]       
0          0          0          o_ECC_STAUS_REG[16]       
0          0          0          o_ECC_STAUS_REG[15]       
0          0          0          o_ECC_STAUS_REG[14]       
0          0          0          o_ECC_STAUS_REG[13]       
0          0          0          o_ECC_STAUS_REG[12]       
0          0          0          o_ECC_STAUS_REG[11]       
0          0          0          o_ECC_STAUS_REG[10]       
0          0          0          o_ECC_STAUS_REG[9]        
0          0          0          o_ECC_STAUS_REG[8]        
0          0          0          o_ECC_STAUS_REG[7]        
0          0          0          o_ECC_STAUS_REG[6]        
0          0          0          o_ECC_STAUS_REG[5]        
0          0          0          o_ECC_STAUS_REG[4]        
0          0          0          o_ECC_STAUS_REG[3]        
0          0          0          o_ECC_STAUS_REG[2]        
0          1          0          o_ECC_STAUS_REG[1]        
0          1          0          o_ECC_STAUS_REG[0]        
1          1          1          MEM_init_ACK              
1          1          1          i_psel                    
1          1          1          i_penable                 
1          1          1          i_pwrite                  
0          0          0          i_pwdata[31]              
0          0          0          i_pwdata[30]              
0          0          0          i_pwdata[29]              
0          0          0          i_pwdata[28]              
0          0          0          i_pwdata[27]              
0          0          0          i_pwdata[26]              
0          0          0          i_pwdata[25]              
0          0          0          i_pwdata[24]              
0          0          0          i_pwdata[23]              
0          0          0          i_pwdata[22]              
0          0          0          i_pwdata[21]              
0          0          0          i_pwdata[20]              
0          0          0          i_pwdata[19]              
0          0          0          i_pwdata[18]              
0          0          0          i_pwdata[17]              
0          0          0          i_pwdata[16]              
0          0          0          i_pwdata[15]              
0          0          0          i_pwdata[14]              
0          0          0          i_pwdata[13]              
0          0          0          i_pwdata[12]              
0          0          0          i_pwdata[11]              
0          0          0          i_pwdata[10]              
0          0          0          i_pwdata[9]               
0          0          0          i_pwdata[8]               
0          0          0          i_pwdata[7]               
0          0          0          i_pwdata[6]               
0          0          0          i_pwdata[5]               
0          0          0          i_pwdata[4]               
0          0          0          i_pwdata[3]               
0          0          0          i_pwdata[2]               
0          0          0          i_pwdata[1]               
1          1          1          i_pwdata[0]               
0          0          0          i_paddr[9]                
0          0          0          i_paddr[8]                
0          0          0          i_paddr[7]                
0          0          0          i_paddr[6]                
0          0          0          i_paddr[5]                
0          0          0          i_paddr[4]                
0          0          1          i_paddr[3]                
1          1          1          i_paddr[2]                
0          0          0          i_paddr[1]                
0          0          0          i_paddr[0]                
1          1          1          i_pstrb[3]                
1          1          1          i_pstrb[2]                
1          1          1          i_pstrb[1]                
1          1          1          i_pstrb[0]                
0          0          0          i_ECC_STAUS_REG_clear     
1          1          1          wr_en_w                   
1          1          1          wr_addr_w[31]             
1          1          1          wr_addr_w[30]             
1          1          1          wr_addr_w[29]             
1          1          1          wr_addr_w[28]             
1          1          1          wr_addr_w[27]             
1          1          1          wr_addr_w[26]             
1          1          1          wr_addr_w[25]             
1          1          1          wr_addr_w[24]             
1          1          1          wr_addr_w[23]             
1          1          1          wr_addr_w[22]             
1          1          1          wr_addr_w[21]             
1          1          1          wr_addr_w[20]             
1          1          1          wr_addr_w[19]             
1          1          1          wr_addr_w[18]             
1          1          1          wr_addr_w[17]             
1          1          1          wr_addr_w[16]             
1          1          1          wr_addr_w[15]             
1          1          1          wr_addr_w[14]             
1          1          1          wr_addr_w[13]             
1          1          1          wr_addr_w[12]             
1          1          1          wr_addr_w[11]             
1          1          1          wr_addr_w[10]             
1          1          1          wr_addr_w[9]              
1          1          1          wr_addr_w[8]              
1          1          1          wr_addr_w[7]              
1          1          1          wr_addr_w[6]              
1          1          1          wr_addr_w[5]              
1          1          1          wr_addr_w[4]              
1          1          1          wr_addr_w[3]              
1          1          1          wr_addr_w[2]              
1          1          1          wr_addr_w[1]              
1          1          1          wr_addr_w[0]              
1          1          1          wr_data_w[31]             
1          1          1          wr_data_w[30]             
1          1          1          wr_data_w[29]             
1          1          1          wr_data_w[28]             
1          1          1          wr_data_w[27]             
1          1          1          wr_data_w[26]             
1          1          1          wr_data_w[25]             
1          1          1          wr_data_w[24]             
1          1          1          wr_data_w[23]             
1          1          1          wr_data_w[22]             
1          1          1          wr_data_w[21]             
1          1          1          wr_data_w[20]             
1          1          1          wr_data_w[19]             
1          1          1          wr_data_w[18]             
1          1          1          wr_data_w[17]             
1          1          1          wr_data_w[16]             
1          1          1          wr_data_w[15]             
1          1          1          wr_data_w[14]             
1          1          1          wr_data_w[13]             
1          1          1          wr_data_w[12]             
1          1          1          wr_data_w[11]             
1          1          1          wr_data_w[10]             
1          1          1          wr_data_w[9]              
1          1          1          wr_data_w[8]              
1          1          1          wr_data_w[7]              
1          1          1          wr_data_w[6]              
1          1          1          wr_data_w[5]              
1          1          1          wr_data_w[4]              
1          1          1          wr_data_w[3]              
1          1          1          wr_data_w[2]              
1          1          1          wr_data_w[1]              
1          1          1          wr_data_w[0]              
1          1          1          wr_strb_w[3]              
1          1          1          wr_strb_w[2]              
1          1          1          wr_strb_w[1]              
1          1          1          wr_strb_w[0]              
0          0          0          wr_resp_w[1]              
0          0          0          wr_resp_w[0]              
1          1          1          rd_en_w                   
1          1          1          rd_addr_w[31]             
1          1          1          rd_addr_w[30]             
1          1          1          rd_addr_w[29]             
1          1          1          rd_addr_w[28]             
1          1          1          rd_addr_w[27]             
1          1          1          rd_addr_w[26]             
1          1          1          rd_addr_w[25]             
1          1          1          rd_addr_w[24]             
1          1          1          rd_addr_w[23]             
1          1          1          rd_addr_w[22]             
1          1          1          rd_addr_w[21]             
1          1          1          rd_addr_w[20]             
1          1          1          rd_addr_w[19]             
1          1          1          rd_addr_w[18]             
1          1          1          rd_addr_w[17]             
1          1          1          rd_addr_w[16]             
1          1          1          rd_addr_w[15]             
1          1          1          rd_addr_w[14]             
1          1          1          rd_addr_w[13]             
1          1          1          rd_addr_w[12]             
1          1          1          rd_addr_w[11]             
1          1          1          rd_addr_w[10]             
1          1          1          rd_addr_w[9]              
1          1          1          rd_addr_w[8]              
1          1          1          rd_addr_w[7]              
1          1          1          rd_addr_w[6]              
1          1          1          rd_addr_w[5]              
1          1          1          rd_addr_w[4]              
1          1          1          rd_addr_w[3]              
1          1          1          rd_addr_w[2]              
1          1          1          rd_addr_w[1]              
1          1          1          rd_addr_w[0]              
1          1          1          rd_data_w[31]             
1          1          1          rd_data_w[30]             
1          1          1          rd_data_w[29]             
1          1          1          rd_data_w[28]             
1          1          1          rd_data_w[27]             
1          1          1          rd_data_w[26]             
1          1          1          rd_data_w[25]             
1          1          1          rd_data_w[24]             
1          1          1          rd_data_w[23]             
1          1          1          rd_data_w[22]             
1          1          1          rd_data_w[21]             
1          1          1          rd_data_w[20]             
1          1          1          rd_data_w[19]             
1          1          1          rd_data_w[18]             
1          1          1          rd_data_w[17]             
1          1          1          rd_data_w[16]             
1          1          1          rd_data_w[15]             
1          1          1          rd_data_w[14]             
1          1          1          rd_data_w[13]             
1          1          1          rd_data_w[12]             
1          1          1          rd_data_w[11]             
1          1          1          rd_data_w[10]             
1          1          1          rd_data_w[9]              
1          1          1          rd_data_w[8]              
1          1          1          rd_data_w[7]              
1          1          1          rd_data_w[6]              
1          1          1          rd_data_w[5]              
1          1          1          rd_data_w[4]              
1          1          1          rd_data_w[3]              
1          1          1          rd_data_w[2]              
1          1          1          rd_data_w[1]              
1          1          1          rd_data_w[0]              
0          0          0          rd_resp_w[1]              
0          0          0          rd_resp_w[0]              
1          1          1          RAM_en_w                  
1          1          1          RAM_wr_addr_w[13]         
1          1          1          RAM_wr_addr_w[12]         
1          1          1          RAM_wr_addr_w[11]         
1          1          1          RAM_wr_addr_w[10]         
1          1          1          RAM_wr_addr_w[9]          
1          1          1          RAM_wr_addr_w[8]          
1          1          1          RAM_wr_addr_w[7]          
1          1          1          RAM_wr_addr_w[6]          
1          1          1          RAM_wr_addr_w[5]          
1          1          1          RAM_wr_addr_w[4]          
1          1          1          RAM_wr_addr_w[3]          
1          1          1          RAM_wr_addr_w[2]          
1          1          1          RAM_wr_addr_w[1]          
1          1          1          RAM_wr_addr_w[0]          
0          0          0          RAM_rd_addr_w[13]         
0          0          0          RAM_rd_addr_w[12]         
1          1          1          RAM_rd_addr_w[11]         
1          1          1          RAM_rd_addr_w[10]         
1          1          1          RAM_rd_addr_w[9]          
1          1          1          RAM_rd_addr_w[8]          
1          1          1          RAM_rd_addr_w[7]          
1          1          1          RAM_rd_addr_w[6]          
1          1          1          RAM_rd_addr_w[5]          
1          1          1          RAM_rd_addr_w[4]          
1          1          1          RAM_rd_addr_w[3]          
1          1          1          RAM_rd_addr_w[2]          
1          1          1          RAM_rd_addr_w[1]          
1          1          1          RAM_rd_addr_w[0]          
1          1          1          RAM_wr_en_w               
1          1          1          RAM_wr_data_w[38]         
1          1          1          RAM_wr_data_w[37]         
1          1          1          RAM_wr_data_w[36]         
1          1          1          RAM_wr_data_w[35]         
1          1          1          RAM_wr_data_w[34]         
1          1          1          RAM_wr_data_w[33]         
1          1          1          RAM_wr_data_w[32]         
1          1          1          RAM_wr_data_w[31]         
1          1          1          RAM_wr_data_w[30]         
1          1          1          RAM_wr_data_w[29]         
1          1          1          RAM_wr_data_w[28]         
1          1          1          RAM_wr_data_w[27]         
1          1          1          RAM_wr_data_w[26]         
1          1          1          RAM_wr_data_w[25]         
1          1          1          RAM_wr_data_w[24]         
1          1          1          RAM_wr_data_w[23]         
1          1          1          RAM_wr_data_w[22]         
1          1          1          RAM_wr_data_w[21]         
1          1          1          RAM_wr_data_w[20]         
1          1          1          RAM_wr_data_w[19]         
1          1          1          RAM_wr_data_w[18]         
1          1          1          RAM_wr_data_w[17]         
1          1          1          RAM_wr_data_w[16]         
1          1          1          RAM_wr_data_w[15]         
1          1          1          RAM_wr_data_w[14]         
1          1          1          RAM_wr_data_w[13]         
1          1          1          RAM_wr_data_w[12]         
1          1          1          RAM_wr_data_w[11]         
1          1          1          RAM_wr_data_w[10]         
1          1          1          RAM_wr_data_w[9]          
1          1          1          RAM_wr_data_w[8]          
1          1          1          RAM_wr_data_w[7]          
1          1          1          RAM_wr_data_w[6]          
1          1          1          RAM_wr_data_w[5]          
1          1          1          RAM_wr_data_w[4]          
1          1          1          RAM_wr_data_w[3]          
1          1          1          RAM_wr_data_w[2]          
1          1          1          RAM_wr_data_w[1]          
1          1          1          RAM_wr_data_w[0]          
1          1          1          RAM_rd_en_w               
1          1          1          RAM_rd_data_w[38]         
1          1          1          RAM_rd_data_w[37]         
1          1          1          RAM_rd_data_w[36]         
1          1          1          RAM_rd_data_w[35]         
1          1          1          RAM_rd_data_w[34]         
1          1          1          RAM_rd_data_w[33]         
1          1          1          RAM_rd_data_w[32]         
1          1          1          RAM_rd_data_w[31]         
1          1          1          RAM_rd_data_w[30]         
1          1          1          RAM_rd_data_w[29]         
1          1          1          RAM_rd_data_w[28]         
1          1          1          RAM_rd_data_w[27]         
1          1          1          RAM_rd_data_w[26]         
1          1          1          RAM_rd_data_w[25]         
1          1          1          RAM_rd_data_w[24]         
1          1          1          RAM_rd_data_w[23]         
1          1          1          RAM_rd_data_w[22]         
1          1          1          RAM_rd_data_w[21]         
1          1          1          RAM_rd_data_w[20]         
1          1          1          RAM_rd_data_w[19]         
1          1          1          RAM_rd_data_w[18]         
1          1          1          RAM_rd_data_w[17]         
1          1          1          RAM_rd_data_w[16]         
1          1          1          RAM_rd_data_w[15]         
1          1          1          RAM_rd_data_w[14]         
1          1          1          RAM_rd_data_w[13]         
1          1          1          RAM_rd_data_w[12]         
1          1          1          RAM_rd_data_w[11]         
1          1          1          RAM_rd_data_w[10]         
1          1          1          RAM_rd_data_w[9]          
1          1          1          RAM_rd_data_w[8]          
1          1          1          RAM_rd_data_w[7]          
1          1          1          RAM_rd_data_w[6]          
1          1          1          RAM_rd_data_w[5]          
1          1          1          RAM_rd_data_w[4]          
1          1          1          RAM_rd_data_w[3]          
1          1          1          RAM_rd_data_w[2]          
1          1          1          RAM_rd_data_w[1]          
1          1          1          RAM_rd_data_w[0]          
1          1          1          wr_addr_w1[13]            
1          1          1          wr_addr_w1[12]            
1          1          1          wr_addr_w1[11]            
1          1          1          wr_addr_w1[10]            
1          1          1          wr_addr_w1[9]             
1          1          1          wr_addr_w1[8]             
1          1          1          wr_addr_w1[7]             
1          1          1          wr_addr_w1[6]             
1          1          1          wr_addr_w1[5]             
1          1          1          wr_addr_w1[4]             
1          1          1          wr_addr_w1[3]             
1          1          1          wr_addr_w1[2]             
1          1          1          wr_addr_w1[1]             
1          1          1          wr_addr_w1[0]             
1          1          1          rd_addr_w1[13]            
1          1          1          rd_addr_w1[12]            
1          1          1          rd_addr_w1[11]            
1          1          1          rd_addr_w1[10]            
1          1          1          rd_addr_w1[9]             
1          1          1          rd_addr_w1[8]             
1          1          1          rd_addr_w1[7]             
1          1          1          rd_addr_w1[6]             
1          1          1          rd_addr_w1[5]             
1          1          1          rd_addr_w1[4]             
1          1          1          rd_addr_w1[3]             
1          1          1          rd_addr_w1[2]             
1          1          1          rd_addr_w1[1]             
1          1          1          rd_addr_w1[0]             

Instance name: zmc_axi4_top.axi4_slave_inst
Type name: axi4_slave
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/AXI4_slave.sv
Number of covered signal bits: 753 of 856
Number of uncovered signal bits: 103 of 856
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 9 of 856
Number of signal bits partially toggled(fall): 0 of 856

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          axi4_slave_clk            
0          1          0          axi4_slave_rstn           
1          1          1          axi4_slave_sw_rst         
1          1          1          awaddr[31]                
1          1          1          awaddr[30]                
1          1          1          awaddr[29]                
1          1          1          awaddr[28]                
1          1          1          awaddr[27]                
1          1          1          awaddr[26]                
1          1          1          awaddr[25]                
1          1          1          awaddr[24]                
1          1          1          awaddr[23]                
1          1          1          awaddr[22]                
1          1          1          awaddr[21]                
1          1          1          awaddr[20]                
1          1          1          awaddr[19]                
1          1          1          awaddr[18]                
1          1          1          awaddr[17]                
1          1          1          awaddr[16]                
1          1          1          awaddr[15]                
1          1          1          awaddr[14]                
1          1          1          awaddr[13]                
1          1          1          awaddr[12]                
1          1          1          awaddr[11]                
1          1          1          awaddr[10]                
1          1          1          awaddr[9]                 
1          1          1          awaddr[8]                 
1          1          1          awaddr[7]                 
1          1          1          awaddr[6]                 
1          1          1          awaddr[5]                 
1          1          1          awaddr[4]                 
1          1          1          awaddr[3]                 
1          1          1          awaddr[2]                 
1          1          1          awaddr[1]                 
1          1          1          awaddr[0]                 
1          1          1          awlen[3]                  
1          1          1          awlen[2]                  
1          1          1          awlen[1]                  
1          1          1          awlen[0]                  
1          1          1          awburst[1]                
1          1          1          awburst[0]                
1          1          1          awvalid                   
1          1          1          awready                   
1          1          1          wdata[31]                 
1          1          1          wdata[30]                 
1          1          1          wdata[29]                 
1          1          1          wdata[28]                 
1          1          1          wdata[27]                 
1          1          1          wdata[26]                 
1          1          1          wdata[25]                 
1          1          1          wdata[24]                 
1          1          1          wdata[23]                 
1          1          1          wdata[22]                 
1          1          1          wdata[21]                 
1          1          1          wdata[20]                 
1          1          1          wdata[19]                 
1          1          1          wdata[18]                 
1          1          1          wdata[17]                 
1          1          1          wdata[16]                 
1          1          1          wdata[15]                 
1          1          1          wdata[14]                 
1          1          1          wdata[13]                 
1          1          1          wdata[12]                 
1          1          1          wdata[11]                 
1          1          1          wdata[10]                 
1          1          1          wdata[9]                  
1          1          1          wdata[8]                  
1          1          1          wdata[7]                  
1          1          1          wdata[6]                  
1          1          1          wdata[5]                  
1          1          1          wdata[4]                  
1          1          1          wdata[3]                  
1          1          1          wdata[2]                  
1          1          1          wdata[1]                  
1          1          1          wdata[0]                  
1          1          1          wlast                     
1          1          1          wstrb[3]                  
1          1          1          wstrb[2]                  
1          1          1          wstrb[1]                  
1          1          1          wstrb[0]                  
1          1          1          wvalid                    
1          1          1          wready                    
1          1          1          bvalid                    
1          1          1          bready                    
0          0          0          bresp[1]                  
0          0          0          bresp[0]                  
1          1          1          araddr[31]                
1          1          1          araddr[30]                
1          1          1          araddr[29]                
1          1          1          araddr[28]                
1          1          1          araddr[27]                
1          1          1          araddr[26]                
1          1          1          araddr[25]                
1          1          1          araddr[24]                
1          1          1          araddr[23]                
1          1          1          araddr[22]                
1          1          1          araddr[21]                
1          1          1          araddr[20]                
1          1          1          araddr[19]                
1          1          1          araddr[18]                
1          1          1          araddr[17]                
1          1          1          araddr[16]                
1          1          1          araddr[15]                
1          1          1          araddr[14]                
1          1          1          araddr[13]                
1          1          1          araddr[12]                
1          1          1          araddr[11]                
1          1          1          araddr[10]                
1          1          1          araddr[9]                 
1          1          1          araddr[8]                 
1          1          1          araddr[7]                 
1          1          1          araddr[6]                 
1          1          1          araddr[5]                 
1          1          1          araddr[4]                 
1          1          1          araddr[3]                 
1          1          1          araddr[2]                 
1          1          1          araddr[1]                 
1          1          1          araddr[0]                 
1          1          1          arlen[3]                  
1          1          1          arlen[2]                  
1          1          1          arlen[1]                  
1          1          1          arlen[0]                  
1          1          1          arburst[1]                
1          1          1          arburst[0]                
1          1          1          arvalid                   
1          1          1          arready                   
1          1          1          rdata[31]                 
1          1          1          rdata[30]                 
1          1          1          rdata[29]                 
1          1          1          rdata[28]                 
1          1          1          rdata[27]                 
1          1          1          rdata[26]                 
1          1          1          rdata[25]                 
1          1          1          rdata[24]                 
1          1          1          rdata[23]                 
1          1          1          rdata[22]                 
1          1          1          rdata[21]                 
1          1          1          rdata[20]                 
1          1          1          rdata[19]                 
1          1          1          rdata[18]                 
1          1          1          rdata[17]                 
1          1          1          rdata[16]                 
1          1          1          rdata[15]                 
1          1          1          rdata[14]                 
1          1          1          rdata[13]                 
1          1          1          rdata[12]                 
1          1          1          rdata[11]                 
1          1          1          rdata[10]                 
1          1          1          rdata[9]                  
1          1          1          rdata[8]                  
1          1          1          rdata[7]                  
1          1          1          rdata[6]                  
1          1          1          rdata[5]                  
1          1          1          rdata[4]                  
1          1          1          rdata[3]                  
1          1          1          rdata[2]                  
1          1          1          rdata[1]                  
1          1          1          rdata[0]                  
1          1          1          rlast                     
0          0          0          rresp[1]                  
0          0          0          rresp[0]                  
1          1          1          rvalid                    
1          1          1          rready                    
1          1          1          slave_wr_en_o             
1          1          1          slave_wr_addr[31]         
1          1          1          slave_wr_addr[30]         
1          1          1          slave_wr_addr[29]         
1          1          1          slave_wr_addr[28]         
1          1          1          slave_wr_addr[27]         
1          1          1          slave_wr_addr[26]         
1          1          1          slave_wr_addr[25]         
1          1          1          slave_wr_addr[24]         
1          1          1          slave_wr_addr[23]         
1          1          1          slave_wr_addr[22]         
1          1          1          slave_wr_addr[21]         
1          1          1          slave_wr_addr[20]         
1          1          1          slave_wr_addr[19]         
1          1          1          slave_wr_addr[18]         
1          1          1          slave_wr_addr[17]         
1          1          1          slave_wr_addr[16]         
1          1          1          slave_wr_addr[15]         
1          1          1          slave_wr_addr[14]         
1          1          1          slave_wr_addr[13]         
1          1          1          slave_wr_addr[12]         
1          1          1          slave_wr_addr[11]         
1          1          1          slave_wr_addr[10]         
1          1          1          slave_wr_addr[9]          
1          1          1          slave_wr_addr[8]          
1          1          1          slave_wr_addr[7]          
1          1          1          slave_wr_addr[6]          
1          1          1          slave_wr_addr[5]          
1          1          1          slave_wr_addr[4]          
1          1          1          slave_wr_addr[3]          
1          1          1          slave_wr_addr[2]          
1          1          1          slave_wr_addr[1]          
1          1          1          slave_wr_addr[0]          
1          1          1          slave_wr_data[31]         
1          1          1          slave_wr_data[30]         
1          1          1          slave_wr_data[29]         
1          1          1          slave_wr_data[28]         
1          1          1          slave_wr_data[27]         
1          1          1          slave_wr_data[26]         
1          1          1          slave_wr_data[25]         
1          1          1          slave_wr_data[24]         
1          1          1          slave_wr_data[23]         
1          1          1          slave_wr_data[22]         
1          1          1          slave_wr_data[21]         
1          1          1          slave_wr_data[20]         
1          1          1          slave_wr_data[19]         
1          1          1          slave_wr_data[18]         
1          1          1          slave_wr_data[17]         
1          1          1          slave_wr_data[16]         
1          1          1          slave_wr_data[15]         
1          1          1          slave_wr_data[14]         
1          1          1          slave_wr_data[13]         
1          1          1          slave_wr_data[12]         
1          1          1          slave_wr_data[11]         
1          1          1          slave_wr_data[10]         
1          1          1          slave_wr_data[9]          
1          1          1          slave_wr_data[8]          
1          1          1          slave_wr_data[7]          
1          1          1          slave_wr_data[6]          
1          1          1          slave_wr_data[5]          
1          1          1          slave_wr_data[4]          
1          1          1          slave_wr_data[3]          
1          1          1          slave_wr_data[2]          
1          1          1          slave_wr_data[1]          
1          1          1          slave_wr_data[0]          
1          1          1          slave_wr_strb[3]          
1          1          1          slave_wr_strb[2]          
1          1          1          slave_wr_strb[1]          
1          1          1          slave_wr_strb[0]          
0          0          0          slave_wr_resp[1]          
0          0          0          slave_wr_resp[0]          
1          1          1          slave_rd_en_o             
1          1          1          slave_rd_addr[31]         
1          1          1          slave_rd_addr[30]         
1          1          1          slave_rd_addr[29]         
1          1          1          slave_rd_addr[28]         
1          1          1          slave_rd_addr[27]         
1          1          1          slave_rd_addr[26]         
1          1          1          slave_rd_addr[25]         
1          1          1          slave_rd_addr[24]         
1          1          1          slave_rd_addr[23]         
1          1          1          slave_rd_addr[22]         
1          1          1          slave_rd_addr[21]         
1          1          1          slave_rd_addr[20]         
1          1          1          slave_rd_addr[19]         
1          1          1          slave_rd_addr[18]         
1          1          1          slave_rd_addr[17]         
1          1          1          slave_rd_addr[16]         
1          1          1          slave_rd_addr[15]         
1          1          1          slave_rd_addr[14]         
1          1          1          slave_rd_addr[13]         
1          1          1          slave_rd_addr[12]         
1          1          1          slave_rd_addr[11]         
1          1          1          slave_rd_addr[10]         
1          1          1          slave_rd_addr[9]          
1          1          1          slave_rd_addr[8]          
1          1          1          slave_rd_addr[7]          
1          1          1          slave_rd_addr[6]          
1          1          1          slave_rd_addr[5]          
1          1          1          slave_rd_addr[4]          
1          1          1          slave_rd_addr[3]          
1          1          1          slave_rd_addr[2]          
1          1          1          slave_rd_addr[1]          
1          1          1          slave_rd_addr[0]          
1          1          1          slave_rd_data[31]         
1          1          1          slave_rd_data[30]         
1          1          1          slave_rd_data[29]         
1          1          1          slave_rd_data[28]         
1          1          1          slave_rd_data[27]         
1          1          1          slave_rd_data[26]         
1          1          1          slave_rd_data[25]         
1          1          1          slave_rd_data[24]         
1          1          1          slave_rd_data[23]         
1          1          1          slave_rd_data[22]         
1          1          1          slave_rd_data[21]         
1          1          1          slave_rd_data[20]         
1          1          1          slave_rd_data[19]         
1          1          1          slave_rd_data[18]         
1          1          1          slave_rd_data[17]         
1          1          1          slave_rd_data[16]         
1          1          1          slave_rd_data[15]         
1          1          1          slave_rd_data[14]         
1          1          1          slave_rd_data[13]         
1          1          1          slave_rd_data[12]         
1          1          1          slave_rd_data[11]         
1          1          1          slave_rd_data[10]         
1          1          1          slave_rd_data[9]          
1          1          1          slave_rd_data[8]          
1          1          1          slave_rd_data[7]          
1          1          1          slave_rd_data[6]          
1          1          1          slave_rd_data[5]          
1          1          1          slave_rd_data[4]          
1          1          1          slave_rd_data[3]          
1          1          1          slave_rd_data[2]          
1          1          1          slave_rd_data[1]          
1          1          1          slave_rd_data[0]          
0          0          0          slave_rd_resp[1]          
0          0          0          slave_rd_resp[0]          
1          1          1          wr_present_state[1]       
1          1          1          wr_present_state[0]       
1          1          1          wr_next_state[1]          
1          1          1          wr_next_state[0]          
1          1          1          wr_down_counter[3]        
1          1          1          wr_down_counter[2]        
1          1          1          wr_down_counter[1]        
1          1          1          wr_down_counter[0]        
1          1          1          wr_addr_valid             
1          1          1          rd_present_state[1]       
1          1          1          rd_present_state[0]       
1          1          1          rd_next_state[1]          
1          1          1          rd_next_state[0]          
1          1          1          rd_down_counter[3]        
1          1          1          rd_down_counter[2]        
1          1          1          rd_down_counter[1]        
1          1          1          rd_down_counter[0]        
1          1          1          rd_addr_valid             
1          1          1          slave_rd_en_r             
1          1          1          present_state_wr[1]       
1          1          1          present_state_wr[0]       
1          1          1          next_state_wr[1]          
1          1          1          next_state_wr[0]          
1          1          1          wr_addr_r[31]             
1          1          1          wr_addr_r[30]             
1          1          1          wr_addr_r[29]             
1          1          1          wr_addr_r[28]             
1          1          1          wr_addr_r[27]             
1          1          1          wr_addr_r[26]             
1          1          1          wr_addr_r[25]             
1          1          1          wr_addr_r[24]             
1          1          1          wr_addr_r[23]             
1          1          1          wr_addr_r[22]             
1          1          1          wr_addr_r[21]             
1          1          1          wr_addr_r[20]             
1          1          1          wr_addr_r[19]             
1          1          1          wr_addr_r[18]             
1          1          1          wr_addr_r[17]             
1          1          1          wr_addr_r[16]             
1          1          1          wr_addr_r[15]             
1          1          1          wr_addr_r[14]             
1          1          1          wr_addr_r[13]             
1          1          1          wr_addr_r[12]             
1          1          1          wr_addr_r[11]             
1          1          1          wr_addr_r[10]             
1          1          1          wr_addr_r[9]              
1          1          1          wr_addr_r[8]              
1          1          1          wr_addr_r[7]              
1          1          1          wr_addr_r[6]              
1          1          1          wr_addr_r[5]              
1          1          1          wr_addr_r[4]              
1          1          1          wr_addr_r[3]              
1          1          1          wr_addr_r[2]              
1          1          1          wr_addr_r[1]              
1          1          1          wr_addr_r[0]              
1          1          1          wr_addr_w[31]             
1          1          1          wr_addr_w[30]             
1          1          1          wr_addr_w[29]             
1          1          1          wr_addr_w[28]             
1          1          1          wr_addr_w[27]             
1          1          1          wr_addr_w[26]             
1          1          1          wr_addr_w[25]             
1          1          1          wr_addr_w[24]             
1          1          1          wr_addr_w[23]             
1          1          1          wr_addr_w[22]             
1          1          1          wr_addr_w[21]             
1          1          1          wr_addr_w[20]             
1          1          1          wr_addr_w[19]             
1          1          1          wr_addr_w[18]             
1          1          1          wr_addr_w[17]             
1          1          1          wr_addr_w[16]             
1          1          1          wr_addr_w[15]             
1          1          1          wr_addr_w[14]             
1          1          1          wr_addr_w[13]             
1          1          1          wr_addr_w[12]             
1          1          1          wr_addr_w[11]             
1          1          1          wr_addr_w[10]             
1          1          1          wr_addr_w[9]              
1          1          1          wr_addr_w[8]              
1          1          1          wr_addr_w[7]              
1          1          1          wr_addr_w[6]              
1          1          1          wr_addr_w[5]              
1          1          1          wr_addr_w[4]              
1          1          1          wr_addr_w[3]              
1          1          1          wr_addr_w[2]              
1          1          1          wr_addr_w[1]              
1          1          1          wr_addr_w[0]              
1          1          1          wr_addr_w1[31]            
1          1          1          wr_addr_w1[30]            
1          1          1          wr_addr_w1[29]            
1          1          1          wr_addr_w1[28]            
1          1          1          wr_addr_w1[27]            
1          1          1          wr_addr_w1[26]            
1          1          1          wr_addr_w1[25]            
1          1          1          wr_addr_w1[24]            
1          1          1          wr_addr_w1[23]            
1          1          1          wr_addr_w1[22]            
1          1          1          wr_addr_w1[21]            
1          1          1          wr_addr_w1[20]            
1          1          1          wr_addr_w1[19]            
1          1          1          wr_addr_w1[18]            
1          1          1          wr_addr_w1[17]            
1          1          1          wr_addr_w1[16]            
1          1          1          wr_addr_w1[15]            
1          1          1          wr_addr_w1[14]            
1          1          1          wr_addr_w1[13]            
1          1          1          wr_addr_w1[12]            
1          1          1          wr_addr_w1[11]            
1          1          1          wr_addr_w1[10]            
1          1          1          wr_addr_w1[9]             
1          1          1          wr_addr_w1[8]             
1          1          1          wr_addr_w1[7]             
1          1          1          wr_addr_w1[6]             
1          1          1          wr_addr_w1[5]             
1          1          1          wr_addr_w1[4]             
1          1          1          wr_addr_w1[3]             
1          1          1          wr_addr_w1[2]             
1          1          1          wr_addr_w1[1]             
1          1          1          wr_addr_w1[0]             
1          1          1          addr_n_wr[31]             
1          1          1          addr_n_wr[30]             
1          1          1          addr_n_wr[29]             
1          1          1          addr_n_wr[28]             
1          1          1          addr_n_wr[27]             
1          1          1          addr_n_wr[26]             
1          1          1          addr_n_wr[25]             
1          1          1          addr_n_wr[24]             
1          1          1          addr_n_wr[23]             
1          1          1          addr_n_wr[22]             
1          1          1          addr_n_wr[21]             
1          1          1          addr_n_wr[20]             
1          1          1          addr_n_wr[19]             
1          1          1          addr_n_wr[18]             
1          1          1          addr_n_wr[17]             
1          1          1          addr_n_wr[16]             
1          1          1          addr_n_wr[15]             
1          1          1          addr_n_wr[14]             
1          1          1          addr_n_wr[13]             
1          1          1          addr_n_wr[12]             
1          1          1          addr_n_wr[11]             
1          1          1          addr_n_wr[10]             
1          1          1          addr_n_wr[9]              
1          1          1          addr_n_wr[8]              
1          1          1          addr_n_wr[7]              
1          1          1          addr_n_wr[6]              
1          1          1          addr_n_wr[5]              
1          1          1          addr_n_wr[4]              
1          1          1          addr_n_wr[3]              
1          1          1          addr_n_wr[2]              
0          0          0          addr_n_wr[1]              
0          0          0          addr_n_wr[0]              
1          1          1          addr_n_r[31]              
1          1          1          addr_n_r[30]              
1          1          1          addr_n_r[29]              
1          1          1          addr_n_r[28]              
1          1          1          addr_n_r[27]              
1          1          1          addr_n_r[26]              
1          1          1          addr_n_r[25]              
1          1          1          addr_n_r[24]              
1          1          1          addr_n_r[23]              
1          1          1          addr_n_r[22]              
1          1          1          addr_n_r[21]              
1          1          1          addr_n_r[20]              
1          1          1          addr_n_r[19]              
1          1          1          addr_n_r[18]              
1          1          1          addr_n_r[17]              
1          1          1          addr_n_r[16]              
1          1          1          addr_n_r[15]              
1          1          1          addr_n_r[14]              
1          1          1          addr_n_r[13]              
1          1          1          addr_n_r[12]              
1          1          1          addr_n_r[11]              
1          1          1          addr_n_r[10]              
1          1          1          addr_n_r[9]               
1          1          1          addr_n_r[8]               
1          1          1          addr_n_r[7]               
1          1          1          addr_n_r[6]               
0          0          0          addr_n_r[5]               
0          0          0          addr_n_r[4]               
0          0          0          addr_n_r[3]               
0          0          0          addr_n_r[2]               
0          0          0          addr_n_r[1]               
0          0          0          addr_n_r[0]               
1          1          1          wrap_bndry[31]            
1          1          1          wrap_bndry[30]            
1          1          1          wrap_bndry[29]            
1          1          1          wrap_bndry[28]            
1          1          1          wrap_bndry[27]            
1          1          1          wrap_bndry[26]            
1          1          1          wrap_bndry[25]            
1          1          1          wrap_bndry[24]            
1          1          1          wrap_bndry[23]            
1          1          1          wrap_bndry[22]            
1          1          1          wrap_bndry[21]            
1          1          1          wrap_bndry[20]            
1          1          1          wrap_bndry[19]            
1          1          1          wrap_bndry[18]            
1          1          1          wrap_bndry[17]            
1          1          1          wrap_bndry[16]            
1          1          1          wrap_bndry[15]            
1          1          1          wrap_bndry[14]            
1          1          1          wrap_bndry[13]            
1          1          1          wrap_bndry[12]            
1          1          1          wrap_bndry[11]            
1          1          1          wrap_bndry[10]            
1          1          1          wrap_bndry[9]             
1          1          1          wrap_bndry[8]             
1          1          1          wrap_bndry[7]             
1          1          1          wrap_bndry[6]             
1          1          1          wrap_bndry[5]             
1          1          1          wrap_bndry[4]             
1          1          1          wrap_bndry[3]             
1          1          1          wrap_bndry[2]             
0          0          0          wrap_bndry[1]             
0          0          0          wrap_bndry[0]             
1          1          1          wrap_bndry_r[31]          
1          1          1          wrap_bndry_r[30]          
1          1          1          wrap_bndry_r[29]          
1          1          1          wrap_bndry_r[28]          
1          1          1          wrap_bndry_r[27]          
1          1          1          wrap_bndry_r[26]          
1          1          1          wrap_bndry_r[25]          
1          1          1          wrap_bndry_r[24]          
1          1          1          wrap_bndry_r[23]          
1          1          1          wrap_bndry_r[22]          
1          1          1          wrap_bndry_r[21]          
1          1          1          wrap_bndry_r[20]          
1          1          1          wrap_bndry_r[19]          
1          1          1          wrap_bndry_r[18]          
1          1          1          wrap_bndry_r[17]          
1          1          1          wrap_bndry_r[16]          
1          1          1          wrap_bndry_r[15]          
1          1          1          wrap_bndry_r[14]          
1          1          1          wrap_bndry_r[13]          
1          1          1          wrap_bndry_r[12]          
1          1          1          wrap_bndry_r[11]          
1          1          1          wrap_bndry_r[10]          
1          1          1          wrap_bndry_r[9]           
1          1          1          wrap_bndry_r[8]           
1          1          1          wrap_bndry_r[7]           
1          1          1          wrap_bndry_r[6]           
0          0          0          wrap_bndry_r[5]           
0          0          0          wrap_bndry_r[4]           
0          0          0          wrap_bndry_r[3]           
0          0          0          wrap_bndry_r[2]           
0          0          0          wrap_bndry_r[1]           
0          0          0          wrap_bndry_r[0]           
0          0          0          add_wr[31]                
0          0          0          add_wr[30]                
0          0          0          add_wr[29]                
0          0          0          add_wr[28]                
0          0          0          add_wr[27]                
0          0          0          add_wr[26]                
0          0          0          add_wr[25]                
0          0          0          add_wr[24]                
0          0          0          add_wr[23]                
0          0          0          add_wr[22]                
0          0          0          add_wr[21]                
0          0          0          add_wr[20]                
0          0          0          add_wr[19]                
0          0          0          add_wr[18]                
0          0          0          add_wr[17]                
0          0          0          add_wr[16]                
0          0          0          add_wr[15]                
0          0          0          add_wr[14]                
0          0          0          add_wr[13]                
0          0          0          add_wr[12]                
0          0          0          add_wr[11]                
0          0          0          add_wr[10]                
0          0          0          add_wr[9]                 
0          0          0          add_wr[8]                 
0          0          0          add_wr[7]                 
1          1          1          add_wr[6]                 
1          1          1          add_wr[5]                 
1          1          1          add_wr[4]                 
1          1          1          add_wr[3]                 
1          1          1          add_wr[2]                 
0          0          0          add_wr[1]                 
0          0          0          add_wr[0]                 
1          1          1          awlen_r[3]                
1          1          1          awlen_r[2]                
1          1          1          awlen_r[1]                
1          1          1          awlen_r[0]                
0          1          0          awlen_reg[3]              
0          1          0          awlen_reg[2]              
0          1          0          awlen_reg[1]              
0          1          0          awlen_reg[0]              
1          1          1          present_state_rd[1]       
1          1          1          present_state_rd[0]       
1          1          1          next_state_rd[1]          
1          1          1          next_state_rd[0]          
1          1          1          rd_addr_r[31]             
1          1          1          rd_addr_r[30]             
1          1          1          rd_addr_r[29]             
1          1          1          rd_addr_r[28]             
1          1          1          rd_addr_r[27]             
1          1          1          rd_addr_r[26]             
1          1          1          rd_addr_r[25]             
1          1          1          rd_addr_r[24]             
1          1          1          rd_addr_r[23]             
1          1          1          rd_addr_r[22]             
1          1          1          rd_addr_r[21]             
1          1          1          rd_addr_r[20]             
1          1          1          rd_addr_r[19]             
1          1          1          rd_addr_r[18]             
1          1          1          rd_addr_r[17]             
1          1          1          rd_addr_r[16]             
1          1          1          rd_addr_r[15]             
1          1          1          rd_addr_r[14]             
1          1          1          rd_addr_r[13]             
1          1          1          rd_addr_r[12]             
1          1          1          rd_addr_r[11]             
1          1          1          rd_addr_r[10]             
1          1          1          rd_addr_r[9]              
1          1          1          rd_addr_r[8]              
1          1          1          rd_addr_r[7]              
1          1          1          rd_addr_r[6]              
1          1          1          rd_addr_r[5]              
1          1          1          rd_addr_r[4]              
1          1          1          rd_addr_r[3]              
1          1          1          rd_addr_r[2]              
1          1          1          rd_addr_r[1]              
1          1          1          rd_addr_r[0]              
1          1          1          rd_addr_w[31]             
1          1          1          rd_addr_w[30]             
1          1          1          rd_addr_w[29]             
1          1          1          rd_addr_w[28]             
1          1          1          rd_addr_w[27]             
1          1          1          rd_addr_w[26]             
1          1          1          rd_addr_w[25]             
1          1          1          rd_addr_w[24]             
1          1          1          rd_addr_w[23]             
1          1          1          rd_addr_w[22]             
1          1          1          rd_addr_w[21]             
1          1          1          rd_addr_w[20]             
1          1          1          rd_addr_w[19]             
1          1          1          rd_addr_w[18]             
1          1          1          rd_addr_w[17]             
1          1          1          rd_addr_w[16]             
1          1          1          rd_addr_w[15]             
1          1          1          rd_addr_w[14]             
1          1          1          rd_addr_w[13]             
1          1          1          rd_addr_w[12]             
1          1          1          rd_addr_w[11]             
1          1          1          rd_addr_w[10]             
1          1          1          rd_addr_w[9]              
1          1          1          rd_addr_w[8]              
1          1          1          rd_addr_w[7]              
1          1          1          rd_addr_w[6]              
1          1          1          rd_addr_w[5]              
1          1          1          rd_addr_w[4]              
1          1          1          rd_addr_w[3]              
1          1          1          rd_addr_w[2]              
1          1          1          rd_addr_w[1]              
1          1          1          rd_addr_w[0]              
1          1          1          rd_addr_w1[31]            
1          1          1          rd_addr_w1[30]            
1          1          1          rd_addr_w1[29]            
1          1          1          rd_addr_w1[28]            
1          1          1          rd_addr_w1[27]            
1          1          1          rd_addr_w1[26]            
1          1          1          rd_addr_w1[25]            
1          1          1          rd_addr_w1[24]            
1          1          1          rd_addr_w1[23]            
1          1          1          rd_addr_w1[22]            
1          1          1          rd_addr_w1[21]            
1          1          1          rd_addr_w1[20]            
1          1          1          rd_addr_w1[19]            
1          1          1          rd_addr_w1[18]            
1          1          1          rd_addr_w1[17]            
1          1          1          rd_addr_w1[16]            
1          1          1          rd_addr_w1[15]            
1          1          1          rd_addr_w1[14]            
1          1          1          rd_addr_w1[13]            
1          1          1          rd_addr_w1[12]            
1          1          1          rd_addr_w1[11]            
1          1          1          rd_addr_w1[10]            
1          1          1          rd_addr_w1[9]             
1          1          1          rd_addr_w1[8]             
1          1          1          rd_addr_w1[7]             
1          1          1          rd_addr_w1[6]             
1          1          1          rd_addr_w1[5]             
1          1          1          rd_addr_w1[4]             
1          1          1          rd_addr_w1[3]             
1          1          1          rd_addr_w1[2]             
1          1          1          rd_addr_w1[1]             
1          1          1          rd_addr_w1[0]             
1          1          1          addr_n_rd[31]             
1          1          1          addr_n_rd[30]             
1          1          1          addr_n_rd[29]             
1          1          1          addr_n_rd[28]             
1          1          1          addr_n_rd[27]             
1          1          1          addr_n_rd[26]             
1          1          1          addr_n_rd[25]             
1          1          1          addr_n_rd[24]             
1          1          1          addr_n_rd[23]             
1          1          1          addr_n_rd[22]             
1          1          1          addr_n_rd[21]             
1          1          1          addr_n_rd[20]             
1          1          1          addr_n_rd[19]             
1          1          1          addr_n_rd[18]             
1          1          1          addr_n_rd[17]             
1          1          1          addr_n_rd[16]             
1          1          1          addr_n_rd[15]             
1          1          1          addr_n_rd[14]             
1          1          1          addr_n_rd[13]             
1          1          1          addr_n_rd[12]             
1          1          1          addr_n_rd[11]             
1          1          1          addr_n_rd[10]             
1          1          1          addr_n_rd[9]              
1          1          1          addr_n_rd[8]              
1          1          1          addr_n_rd[7]              
1          1          1          addr_n_rd[6]              
1          1          1          addr_n_rd[5]              
1          1          1          addr_n_rd[4]              
1          1          1          addr_n_rd[3]              
1          1          1          addr_n_rd[2]              
0          0          0          addr_n_rd[1]              
0          0          0          addr_n_rd[0]              
1          1          1          addr_n_w[31]              
1          1          1          addr_n_w[30]              
1          1          1          addr_n_w[29]              
1          1          1          addr_n_w[28]              
1          1          1          addr_n_w[27]              
1          1          1          addr_n_w[26]              
1          1          1          addr_n_w[25]              
1          1          1          addr_n_w[24]              
1          1          1          addr_n_w[23]              
1          1          1          addr_n_w[22]              
1          1          1          addr_n_w[21]              
1          1          1          addr_n_w[20]              
1          1          1          addr_n_w[19]              
1          1          1          addr_n_w[18]              
1          1          1          addr_n_w[17]              
1          1          1          addr_n_w[16]              
1          1          1          addr_n_w[15]              
1          1          1          addr_n_w[14]              
1          1          1          addr_n_w[13]              
1          1          1          addr_n_w[12]              
1          1          1          addr_n_w[11]              
1          1          1          addr_n_w[10]              
1          1          1          addr_n_w[9]               
1          1          1          addr_n_w[8]               
1          1          1          addr_n_w[7]               
1          1          1          addr_n_w[6]               
0          0          0          addr_n_w[5]               
0          0          0          addr_n_w[4]               
0          0          0          addr_n_w[3]               
0          0          0          addr_n_w[2]               
0          0          0          addr_n_w[1]               
0          0          0          addr_n_w[0]               
1          1          1          wrap_bndry_rd[31]         
1          1          1          wrap_bndry_rd[30]         
1          1          1          wrap_bndry_rd[29]         
1          1          1          wrap_bndry_rd[28]         
1          1          1          wrap_bndry_rd[27]         
1          1          1          wrap_bndry_rd[26]         
1          1          1          wrap_bndry_rd[25]         
1          1          1          wrap_bndry_rd[24]         
1          1          1          wrap_bndry_rd[23]         
1          1          1          wrap_bndry_rd[22]         
1          1          1          wrap_bndry_rd[21]         
1          1          1          wrap_bndry_rd[20]         
1          1          1          wrap_bndry_rd[19]         
1          1          1          wrap_bndry_rd[18]         
1          1          1          wrap_bndry_rd[17]         
1          1          1          wrap_bndry_rd[16]         
1          1          1          wrap_bndry_rd[15]         
1          1          1          wrap_bndry_rd[14]         
1          1          1          wrap_bndry_rd[13]         
1          1          1          wrap_bndry_rd[12]         
1          1          1          wrap_bndry_rd[11]         
1          1          1          wrap_bndry_rd[10]         
1          1          1          wrap_bndry_rd[9]          
1          1          1          wrap_bndry_rd[8]          
1          1          1          wrap_bndry_rd[7]          
1          1          1          wrap_bndry_rd[6]          
1          1          1          wrap_bndry_rd[5]          
1          1          1          wrap_bndry_rd[4]          
1          1          1          wrap_bndry_rd[3]          
1          1          1          wrap_bndry_rd[2]          
0          0          0          wrap_bndry_rd[1]          
0          0          0          wrap_bndry_rd[0]          
1          1          1          wrap_bndry_w[31]          
1          1          1          wrap_bndry_w[30]          
1          1          1          wrap_bndry_w[29]          
1          1          1          wrap_bndry_w[28]          
1          1          1          wrap_bndry_w[27]          
1          1          1          wrap_bndry_w[26]          
1          1          1          wrap_bndry_w[25]          
1          1          1          wrap_bndry_w[24]          
1          1          1          wrap_bndry_w[23]          
1          1          1          wrap_bndry_w[22]          
1          1          1          wrap_bndry_w[21]          
1          1          1          wrap_bndry_w[20]          
1          1          1          wrap_bndry_w[19]          
1          1          1          wrap_bndry_w[18]          
1          1          1          wrap_bndry_w[17]          
1          1          1          wrap_bndry_w[16]          
1          1          1          wrap_bndry_w[15]          
1          1          1          wrap_bndry_w[14]          
1          1          1          wrap_bndry_w[13]          
1          1          1          wrap_bndry_w[12]          
1          1          1          wrap_bndry_w[11]          
1          1          1          wrap_bndry_w[10]          
1          1          1          wrap_bndry_w[9]           
1          1          1          wrap_bndry_w[8]           
1          1          1          wrap_bndry_w[7]           
1          1          1          wrap_bndry_w[6]           
0          0          0          wrap_bndry_w[5]           
0          0          0          wrap_bndry_w[4]           
0          0          0          wrap_bndry_w[3]           
0          0          0          wrap_bndry_w[2]           
0          0          0          wrap_bndry_w[1]           
0          0          0          wrap_bndry_w[0]           
0          0          0          add_rd[31]                
0          0          0          add_rd[30]                
0          0          0          add_rd[29]                
0          0          0          add_rd[28]                
0          0          0          add_rd[27]                
0          0          0          add_rd[26]                
0          0          0          add_rd[25]                
0          0          0          add_rd[24]                
0          0          0          add_rd[23]                
0          0          0          add_rd[22]                
0          0          0          add_rd[21]                
0          0          0          add_rd[20]                
0          0          0          add_rd[19]                
0          0          0          add_rd[18]                
0          0          0          add_rd[17]                
0          0          0          add_rd[16]                
0          0          0          add_rd[15]                
0          0          0          add_rd[14]                
0          0          0          add_rd[13]                
0          0          0          add_rd[12]                
0          0          0          add_rd[11]                
0          0          0          add_rd[10]                
0          0          0          add_rd[9]                 
0          0          0          add_rd[8]                 
0          0          0          add_rd[7]                 
1          1          1          add_rd[6]                 
1          1          1          add_rd[5]                 
1          1          1          add_rd[4]                 
1          1          1          add_rd[3]                 
1          1          1          add_rd[2]                 
0          0          0          add_rd[1]                 
0          0          0          add_rd[0]                 
1          1          1          arlen_r[3]                
1          1          1          arlen_r[2]                
1          1          1          arlen_r[1]                
1          1          1          arlen_r[0]                
0          1          0          arlen_reg[3]              
0          1          0          arlen_reg[2]              
0          1          0          arlen_reg[1]              
0          1          0          arlen_reg[0]              

Instance name: zmc_axi4_top.mem_ctrl_inst
Type name: mem_ctrl
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/Memory_Controller_ECC.sv
Number of covered signal bits: 413 of 646
Number of uncovered signal bits: 233 of 646
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 5 of 646
Number of signal bits partially toggled(fall): 1 of 646

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          MEM_ctrl_clk              
0          1          0          MEM_ctrl_rstn             
1          1          1          MEM_ctrl_sw_rst           
1          1          1          MEM_ctrl_mem_init         
1          1          1          MEM_ctrl_wr_en            
1          1          1          MEM_ctrl_wr_addr_bus[13]  
1          1          1          MEM_ctrl_wr_addr_bus[12]  
1          1          1          MEM_ctrl_wr_addr_bus[11]  
1          1          1          MEM_ctrl_wr_addr_bus[10]  
1          1          1          MEM_ctrl_wr_addr_bus[9]   
1          1          1          MEM_ctrl_wr_addr_bus[8]   
1          1          1          MEM_ctrl_wr_addr_bus[7]   
1          1          1          MEM_ctrl_wr_addr_bus[6]   
1          1          1          MEM_ctrl_wr_addr_bus[5]   
1          1          1          MEM_ctrl_wr_addr_bus[4]   
1          1          1          MEM_ctrl_wr_addr_bus[3]   
1          1          1          MEM_ctrl_wr_addr_bus[2]   
1          1          1          MEM_ctrl_wr_addr_bus[1]   
1          1          1          MEM_ctrl_wr_addr_bus[0]   
1          1          1          MEM_ctrl_write_data_bus[31] 
1          1          1          MEM_ctrl_write_data_bus[30] 
1          1          1          MEM_ctrl_write_data_bus[29] 
1          1          1          MEM_ctrl_write_data_bus[28] 
1          1          1          MEM_ctrl_write_data_bus[27] 
1          1          1          MEM_ctrl_write_data_bus[26] 
1          1          1          MEM_ctrl_write_data_bus[25] 
1          1          1          MEM_ctrl_write_data_bus[24] 
1          1          1          MEM_ctrl_write_data_bus[23] 
1          1          1          MEM_ctrl_write_data_bus[22] 
1          1          1          MEM_ctrl_write_data_bus[21] 
1          1          1          MEM_ctrl_write_data_bus[20] 
1          1          1          MEM_ctrl_write_data_bus[19] 
1          1          1          MEM_ctrl_write_data_bus[18] 
1          1          1          MEM_ctrl_write_data_bus[17] 
1          1          1          MEM_ctrl_write_data_bus[16] 
1          1          1          MEM_ctrl_write_data_bus[15] 
1          1          1          MEM_ctrl_write_data_bus[14] 
1          1          1          MEM_ctrl_write_data_bus[13] 
1          1          1          MEM_ctrl_write_data_bus[12] 
1          1          1          MEM_ctrl_write_data_bus[11] 
1          1          1          MEM_ctrl_write_data_bus[10] 
1          1          1          MEM_ctrl_write_data_bus[9] 
1          1          1          MEM_ctrl_write_data_bus[8] 
1          1          1          MEM_ctrl_write_data_bus[7] 
1          1          1          MEM_ctrl_write_data_bus[6] 
1          1          1          MEM_ctrl_write_data_bus[5] 
1          1          1          MEM_ctrl_write_data_bus[4] 
1          1          1          MEM_ctrl_write_data_bus[3] 
1          1          1          MEM_ctrl_write_data_bus[2] 
1          1          1          MEM_ctrl_write_data_bus[1] 
1          1          1          MEM_ctrl_write_data_bus[0] 
1          1          1          MEM_ctrl_wr_strobe[3]     
1          1          1          MEM_ctrl_wr_strobe[2]     
1          1          1          MEM_ctrl_wr_strobe[1]     
1          1          1          MEM_ctrl_wr_strobe[0]     
0          0          0          wr_resp[1]                
0          0          0          wr_resp[0]                
1          1          1          MEM_ctrl_rd_en            
1          1          1          MEM_ctrl_rd_addr_bus[13]  
1          1          1          MEM_ctrl_rd_addr_bus[12]  
1          1          1          MEM_ctrl_rd_addr_bus[11]  
1          1          1          MEM_ctrl_rd_addr_bus[10]  
1          1          1          MEM_ctrl_rd_addr_bus[9]   
1          1          1          MEM_ctrl_rd_addr_bus[8]   
1          1          1          MEM_ctrl_rd_addr_bus[7]   
1          1          1          MEM_ctrl_rd_addr_bus[6]   
1          1          1          MEM_ctrl_rd_addr_bus[5]   
1          1          1          MEM_ctrl_rd_addr_bus[4]   
1          1          1          MEM_ctrl_rd_addr_bus[3]   
1          1          1          MEM_ctrl_rd_addr_bus[2]   
1          1          1          MEM_ctrl_rd_addr_bus[1]   
1          1          1          MEM_ctrl_rd_addr_bus[0]   
1          1          1          MEM_ctrl_data_out[31]     
1          1          1          MEM_ctrl_data_out[30]     
1          1          1          MEM_ctrl_data_out[29]     
1          1          1          MEM_ctrl_data_out[28]     
1          1          1          MEM_ctrl_data_out[27]     
1          1          1          MEM_ctrl_data_out[26]     
1          1          1          MEM_ctrl_data_out[25]     
1          1          1          MEM_ctrl_data_out[24]     
1          1          1          MEM_ctrl_data_out[23]     
1          1          1          MEM_ctrl_data_out[22]     
1          1          1          MEM_ctrl_data_out[21]     
1          1          1          MEM_ctrl_data_out[20]     
1          1          1          MEM_ctrl_data_out[19]     
1          1          1          MEM_ctrl_data_out[18]     
1          1          1          MEM_ctrl_data_out[17]     
1          1          1          MEM_ctrl_data_out[16]     
1          1          1          MEM_ctrl_data_out[15]     
1          1          1          MEM_ctrl_data_out[14]     
1          1          1          MEM_ctrl_data_out[13]     
1          1          1          MEM_ctrl_data_out[12]     
1          1          1          MEM_ctrl_data_out[11]     
1          1          1          MEM_ctrl_data_out[10]     
1          1          1          MEM_ctrl_data_out[9]      
1          1          1          MEM_ctrl_data_out[8]      
1          1          1          MEM_ctrl_data_out[7]      
1          1          1          MEM_ctrl_data_out[6]      
1          1          1          MEM_ctrl_data_out[5]      
1          1          1          MEM_ctrl_data_out[4]      
1          1          1          MEM_ctrl_data_out[3]      
1          1          1          MEM_ctrl_data_out[2]      
1          1          1          MEM_ctrl_data_out[1]      
1          1          1          MEM_ctrl_data_out[0]      
0          0          0          rd_resp[1]                
0          0          0          rd_resp[0]                
1          1          1          ECC_interrupt             
1          1          1          MEM_init_ACK              
1          1          1          BRAM_en                   
1          1          1          BRAM_wr_en                
1          1          1          BRAM_wr_addr[13]          
1          1          1          BRAM_wr_addr[12]          
1          1          1          BRAM_wr_addr[11]          
1          1          1          BRAM_wr_addr[10]          
1          1          1          BRAM_wr_addr[9]           
1          1          1          BRAM_wr_addr[8]           
1          1          1          BRAM_wr_addr[7]           
1          1          1          BRAM_wr_addr[6]           
1          1          1          BRAM_wr_addr[5]           
1          1          1          BRAM_wr_addr[4]           
1          1          1          BRAM_wr_addr[3]           
1          1          1          BRAM_wr_addr[2]           
1          1          1          BRAM_wr_addr[1]           
1          1          1          BRAM_wr_addr[0]           
1          1          1          BRAM_wr_data[38]          
1          1          1          BRAM_wr_data[37]          
1          1          1          BRAM_wr_data[36]          
1          1          1          BRAM_wr_data[35]          
1          1          1          BRAM_wr_data[34]          
1          1          1          BRAM_wr_data[33]          
1          1          1          BRAM_wr_data[32]          
1          1          1          BRAM_wr_data[31]          
1          1          1          BRAM_wr_data[30]          
1          1          1          BRAM_wr_data[29]          
1          1          1          BRAM_wr_data[28]          
1          1          1          BRAM_wr_data[27]          
1          1          1          BRAM_wr_data[26]          
1          1          1          BRAM_wr_data[25]          
1          1          1          BRAM_wr_data[24]          
1          1          1          BRAM_wr_data[23]          
1          1          1          BRAM_wr_data[22]          
1          1          1          BRAM_wr_data[21]          
1          1          1          BRAM_wr_data[20]          
1          1          1          BRAM_wr_data[19]          
1          1          1          BRAM_wr_data[18]          
1          1          1          BRAM_wr_data[17]          
1          1          1          BRAM_wr_data[16]          
1          1          1          BRAM_wr_data[15]          
1          1          1          BRAM_wr_data[14]          
1          1          1          BRAM_wr_data[13]          
1          1          1          BRAM_wr_data[12]          
1          1          1          BRAM_wr_data[11]          
1          1          1          BRAM_wr_data[10]          
1          1          1          BRAM_wr_data[9]           
1          1          1          BRAM_wr_data[8]           
1          1          1          BRAM_wr_data[7]           
1          1          1          BRAM_wr_data[6]           
1          1          1          BRAM_wr_data[5]           
1          1          1          BRAM_wr_data[4]           
1          1          1          BRAM_wr_data[3]           
1          1          1          BRAM_wr_data[2]           
1          1          1          BRAM_wr_data[1]           
1          1          1          BRAM_wr_data[0]           
1          1          1          BRAM_rd_en                
0          0          0          BRAM_rd_addr[13]          
0          0          0          BRAM_rd_addr[12]          
1          1          1          BRAM_rd_addr[11]          
1          1          1          BRAM_rd_addr[10]          
1          1          1          BRAM_rd_addr[9]           
1          1          1          BRAM_rd_addr[8]           
1          1          1          BRAM_rd_addr[7]           
1          1          1          BRAM_rd_addr[6]           
1          1          1          BRAM_rd_addr[5]           
1          1          1          BRAM_rd_addr[4]           
1          1          1          BRAM_rd_addr[3]           
1          1          1          BRAM_rd_addr[2]           
1          1          1          BRAM_rd_addr[1]           
1          1          1          BRAM_rd_addr[0]           
1          1          1          BRAM_rd_data[38]          
1          1          1          BRAM_rd_data[37]          
1          1          1          BRAM_rd_data[36]          
1          1          1          BRAM_rd_data[35]          
1          1          1          BRAM_rd_data[34]          
1          1          1          BRAM_rd_data[33]          
1          1          1          BRAM_rd_data[32]          
1          1          1          BRAM_rd_data[31]          
1          1          1          BRAM_rd_data[30]          
1          1          1          BRAM_rd_data[29]          
1          1          1          BRAM_rd_data[28]          
1          1          1          BRAM_rd_data[27]          
1          1          1          BRAM_rd_data[26]          
1          1          1          BRAM_rd_data[25]          
1          1          1          BRAM_rd_data[24]          
1          1          1          BRAM_rd_data[23]          
1          1          1          BRAM_rd_data[22]          
1          1          1          BRAM_rd_data[21]          
1          1          1          BRAM_rd_data[20]          
1          1          1          BRAM_rd_data[19]          
1          1          1          BRAM_rd_data[18]          
1          1          1          BRAM_rd_data[17]          
1          1          1          BRAM_rd_data[16]          
1          1          1          BRAM_rd_data[15]          
1          1          1          BRAM_rd_data[14]          
1          1          1          BRAM_rd_data[13]          
1          1          1          BRAM_rd_data[12]          
1          1          1          BRAM_rd_data[11]          
1          1          1          BRAM_rd_data[10]          
1          1          1          BRAM_rd_data[9]           
1          1          1          BRAM_rd_data[8]           
1          1          1          BRAM_rd_data[7]           
1          1          1          BRAM_rd_data[6]           
1          1          1          BRAM_rd_data[5]           
1          1          1          BRAM_rd_data[4]           
1          1          1          BRAM_rd_data[3]           
1          1          1          BRAM_rd_data[2]           
1          1          1          BRAM_rd_data[1]           
1          1          1          BRAM_rd_data[0]           
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[31] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[30] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[29] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[28] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[27] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[26] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[25] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[24] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[23] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[22] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[21] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[20] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[19] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[18] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[17] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[16] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[15] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[14] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[13] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[12] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[11] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[10] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[9] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[8] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[7] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[6] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[5] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[4] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[3] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[2] 
0          1          0          o_ECC_STAUS_REG_ECC_STATUS[1] 
0          1          0          o_ECC_STAUS_REG_ECC_STATUS[0] 
1          1          1          i_psel                    
1          1          1          i_penable                 
1          1          1          i_pwrite                  
0          0          0          i_pwdata[31]              
0          0          0          i_pwdata[30]              
0          0          0          i_pwdata[29]              
0          0          0          i_pwdata[28]              
0          0          0          i_pwdata[27]              
0          0          0          i_pwdata[26]              
0          0          0          i_pwdata[25]              
0          0          0          i_pwdata[24]              
0          0          0          i_pwdata[23]              
0          0          0          i_pwdata[22]              
0          0          0          i_pwdata[21]              
0          0          0          i_pwdata[20]              
0          0          0          i_pwdata[19]              
0          0          0          i_pwdata[18]              
0          0          0          i_pwdata[17]              
0          0          0          i_pwdata[16]              
0          0          0          i_pwdata[15]              
0          0          0          i_pwdata[14]              
0          0          0          i_pwdata[13]              
0          0          0          i_pwdata[12]              
0          0          0          i_pwdata[11]              
0          0          0          i_pwdata[10]              
0          0          0          i_pwdata[9]               
0          0          0          i_pwdata[8]               
0          0          0          i_pwdata[7]               
0          0          0          i_pwdata[6]               
0          0          0          i_pwdata[5]               
0          0          0          i_pwdata[4]               
0          0          0          i_pwdata[3]               
0          0          0          i_pwdata[2]               
0          0          0          i_pwdata[1]               
1          1          1          i_pwdata[0]               
0          0          0          i_paddr[9]                
0          0          0          i_paddr[8]                
0          0          0          i_paddr[7]                
0          0          0          i_paddr[6]                
0          0          0          i_paddr[5]                
0          0          0          i_paddr[4]                
0          0          1          i_paddr[3]                
1          1          1          i_paddr[2]                
0          0          0          i_paddr[1]                
0          0          0          i_paddr[0]                
1          1          1          i_pstrb[3]                
1          1          1          i_pstrb[2]                
1          1          1          i_pstrb[1]                
1          1          1          i_pstrb[0]                
0          0          0          i_ECC_STAUS_REG_ECC_STATUS_clear 
0          0          0          wr_addr_w[13]             
0          0          0          wr_addr_w[12]             
1          1          1          wr_addr_w[11]             
1          1          1          wr_addr_w[10]             
1          1          1          wr_addr_w[9]              
1          1          1          wr_addr_w[8]              
1          1          1          wr_addr_w[7]              
1          1          1          wr_addr_w[6]              
1          1          1          wr_addr_w[5]              
1          1          1          wr_addr_w[4]              
1          1          1          wr_addr_w[3]              
1          1          1          wr_addr_w[2]              
1          1          1          wr_addr_w[1]              
1          1          1          wr_addr_w[0]              
0          0          0          rd_addr_w[13]             
0          0          0          rd_addr_w[12]             
1          1          1          rd_addr_w[11]             
1          1          1          rd_addr_w[10]             
1          1          1          rd_addr_w[9]              
1          1          1          rd_addr_w[8]              
1          1          1          rd_addr_w[7]              
1          1          1          rd_addr_w[6]              
1          1          1          rd_addr_w[5]              
1          1          1          rd_addr_w[4]              
1          1          1          rd_addr_w[3]              
1          1          1          rd_addr_w[2]              
1          1          1          rd_addr_w[1]              
1          1          1          rd_addr_w[0]              
0          0          0          ECC_en_w[31]              
0          0          0          ECC_en_w[30]              
0          0          0          ECC_en_w[29]              
0          0          0          ECC_en_w[28]              
0          0          0          ECC_en_w[27]              
0          0          0          ECC_en_w[26]              
0          0          0          ECC_en_w[25]              
0          0          0          ECC_en_w[24]              
0          0          0          ECC_en_w[23]              
0          0          0          ECC_en_w[22]              
0          0          0          ECC_en_w[21]              
0          0          0          ECC_en_w[20]              
0          0          0          ECC_en_w[19]              
0          0          0          ECC_en_w[18]              
0          0          0          ECC_en_w[17]              
0          0          0          ECC_en_w[16]              
0          0          0          ECC_en_w[15]              
0          0          0          ECC_en_w[14]              
0          0          0          ECC_en_w[13]              
0          0          0          ECC_en_w[12]              
0          0          0          ECC_en_w[11]              
0          0          0          ECC_en_w[10]              
0          0          0          ECC_en_w[9]               
0          0          0          ECC_en_w[8]               
0          0          0          ECC_en_w[7]               
0          0          0          ECC_en_w[6]               
0          0          0          ECC_en_w[5]               
0          0          0          ECC_en_w[4]               
0          0          0          ECC_en_w[3]               
0          0          0          ECC_en_w[2]               
0          0          0          ECC_en_w[1]               
0          1          0          ECC_en_w[0]               
0          0          0          ECC_status_w[31]          
0          0          0          ECC_status_w[30]          
0          0          0          ECC_status_w[29]          
0          0          0          ECC_status_w[28]          
0          0          0          ECC_status_w[27]          
0          0          0          ECC_status_w[26]          
0          0          0          ECC_status_w[25]          
0          0          0          ECC_status_w[24]          
0          0          0          ECC_status_w[23]          
0          0          0          ECC_status_w[22]          
0          0          0          ECC_status_w[21]          
0          0          0          ECC_status_w[20]          
0          0          0          ECC_status_w[19]          
0          0          0          ECC_status_w[18]          
0          0          0          ECC_status_w[17]          
0          0          0          ECC_status_w[16]          
0          0          0          ECC_status_w[15]          
0          0          0          ECC_status_w[14]          
0          0          0          ECC_status_w[13]          
0          0          0          ECC_status_w[12]          
0          0          0          ECC_status_w[11]          
0          0          0          ECC_status_w[10]          
0          0          0          ECC_status_w[9]           
0          0          0          ECC_status_w[8]           
0          0          0          ECC_status_w[7]           
0          0          0          ECC_status_w[6]           
0          0          0          ECC_status_w[5]           
0          0          0          ECC_status_w[4]           
0          0          0          ECC_status_w[3]           
0          0          0          ECC_status_w[2]           
1          1          1          ECC_status_w[1]           
1          1          1          ECC_status_w[0]           
0          0          0          data_valid_w              
1          1          1          i_psel_w                  
1          1          1          i_penable_w               
0          0          0          i_paddr_w[9]              
0          0          0          i_paddr_w[8]              
0          0          0          i_paddr_w[7]              
0          0          0          i_paddr_w[6]              
0          0          0          i_paddr_w[5]              
0          0          0          i_paddr_w[4]              
0          0          0          i_paddr_w[3]              
0          0          0          i_paddr_w[2]              
0          0          0          i_paddr_w[1]              
0          0          0          i_paddr_w[0]              
1          1          1          i_pwrite_w                
1          1          1          i_pstrb_w[3]              
1          1          1          i_pstrb_w[2]              
1          1          1          i_pstrb_w[1]              
1          1          1          i_pstrb_w[0]              
1          1          1          i_psel_w2                 
1          1          1          i_penable_w2              
0          0          0          i_paddr_w2[9]             
0          0          0          i_paddr_w2[8]             
0          0          0          i_paddr_w2[7]             
0          0          0          i_paddr_w2[6]             
0          0          0          i_paddr_w2[5]             
0          0          0          i_paddr_w2[4]             
1          1          1          i_paddr_w2[3]             
1          1          1          i_paddr_w2[2]             
0          0          0          i_paddr_w2[1]             
0          0          0          i_paddr_w2[0]             
1          1          1          i_pwrite_w2               
0          0          0          i_pwdata_w2[31]           
0          0          0          i_pwdata_w2[30]           
0          0          0          i_pwdata_w2[29]           
0          0          0          i_pwdata_w2[28]           
0          0          0          i_pwdata_w2[27]           
0          0          0          i_pwdata_w2[26]           
0          0          0          i_pwdata_w2[25]           
0          0          0          i_pwdata_w2[24]           
0          0          0          i_pwdata_w2[23]           
0          0          0          i_pwdata_w2[22]           
0          0          0          i_pwdata_w2[21]           
0          0          0          i_pwdata_w2[20]           
0          0          0          i_pwdata_w2[19]           
0          0          0          i_pwdata_w2[18]           
0          0          0          i_pwdata_w2[17]           
0          0          0          i_pwdata_w2[16]           
0          0          0          i_pwdata_w2[15]           
0          0          0          i_pwdata_w2[14]           
0          0          0          i_pwdata_w2[13]           
0          0          0          i_pwdata_w2[12]           
0          0          0          i_pwdata_w2[11]           
0          0          0          i_pwdata_w2[10]           
0          0          0          i_pwdata_w2[9]            
0          0          0          i_pwdata_w2[8]            
0          0          0          i_pwdata_w2[7]            
0          0          0          i_pwdata_w2[6]            
0          0          0          i_pwdata_w2[5]            
0          0          0          i_pwdata_w2[4]            
0          0          0          i_pwdata_w2[3]            
0          0          0          i_pwdata_w2[2]            
1          1          1          i_pwdata_w2[1]            
1          1          1          i_pwdata_w2[0]            
1          1          1          i_pstrb_w2[3]             
1          1          1          i_pstrb_w2[2]             
1          1          1          i_pstrb_w2[1]             
1          1          1          i_pstrb_w2[0]             
1          1          1          penable                   
1          1          1          penable_w                 
1          1          1          MEM_ctrl_data_out_w2[31]  
1          1          1          MEM_ctrl_data_out_w2[30]  
1          1          1          MEM_ctrl_data_out_w2[29]  
1          1          1          MEM_ctrl_data_out_w2[28]  
1          1          1          MEM_ctrl_data_out_w2[27]  
1          1          1          MEM_ctrl_data_out_w2[26]  
1          1          1          MEM_ctrl_data_out_w2[25]  
1          1          1          MEM_ctrl_data_out_w2[24]  
1          1          1          MEM_ctrl_data_out_w2[23]  
1          1          1          MEM_ctrl_data_out_w2[22]  
1          1          1          MEM_ctrl_data_out_w2[21]  
1          1          1          MEM_ctrl_data_out_w2[20]  
1          1          1          MEM_ctrl_data_out_w2[19]  
1          1          1          MEM_ctrl_data_out_w2[18]  
1          1          1          MEM_ctrl_data_out_w2[17]  
1          1          1          MEM_ctrl_data_out_w2[16]  
1          1          1          MEM_ctrl_data_out_w2[15]  
1          1          1          MEM_ctrl_data_out_w2[14]  
1          1          1          MEM_ctrl_data_out_w2[13]  
1          1          1          MEM_ctrl_data_out_w2[12]  
1          1          1          MEM_ctrl_data_out_w2[11]  
1          1          1          MEM_ctrl_data_out_w2[10]  
1          1          1          MEM_ctrl_data_out_w2[9]   
1          1          1          MEM_ctrl_data_out_w2[8]   
1          1          1          MEM_ctrl_data_out_w2[7]   
1          1          1          MEM_ctrl_data_out_w2[6]   
1          1          1          MEM_ctrl_data_out_w2[5]   
1          1          1          MEM_ctrl_data_out_w2[4]   
1          1          1          MEM_ctrl_data_out_w2[3]   
1          1          1          MEM_ctrl_data_out_w2[2]   
1          1          1          MEM_ctrl_data_out_w2[1]   
1          1          1          MEM_ctrl_data_out_w2[0]   
1          1          1          MEM_ctrl_data_out_w[31]   
1          1          1          MEM_ctrl_data_out_w[30]   
1          1          1          MEM_ctrl_data_out_w[29]   
1          1          1          MEM_ctrl_data_out_w[28]   
1          1          1          MEM_ctrl_data_out_w[27]   
1          1          1          MEM_ctrl_data_out_w[26]   
1          1          1          MEM_ctrl_data_out_w[25]   
1          1          1          MEM_ctrl_data_out_w[24]   
1          1          1          MEM_ctrl_data_out_w[23]   
1          1          1          MEM_ctrl_data_out_w[22]   
1          1          1          MEM_ctrl_data_out_w[21]   
1          1          1          MEM_ctrl_data_out_w[20]   
1          1          1          MEM_ctrl_data_out_w[19]   
1          1          1          MEM_ctrl_data_out_w[18]   
1          1          1          MEM_ctrl_data_out_w[17]   
1          1          1          MEM_ctrl_data_out_w[16]   
1          1          1          MEM_ctrl_data_out_w[15]   
1          1          1          MEM_ctrl_data_out_w[14]   
1          1          1          MEM_ctrl_data_out_w[13]   
1          1          1          MEM_ctrl_data_out_w[12]   
1          1          1          MEM_ctrl_data_out_w[11]   
1          1          1          MEM_ctrl_data_out_w[10]   
1          1          1          MEM_ctrl_data_out_w[9]    
1          1          1          MEM_ctrl_data_out_w[8]    
1          1          1          MEM_ctrl_data_out_w[7]    
1          1          1          MEM_ctrl_data_out_w[6]    
1          1          1          MEM_ctrl_data_out_w[5]    
1          1          1          MEM_ctrl_data_out_w[4]    
1          1          1          MEM_ctrl_data_out_w[3]    
1          1          1          MEM_ctrl_data_out_w[2]    
1          1          1          MEM_ctrl_data_out_w[1]    
1          1          1          MEM_ctrl_data_out_w[0]    
0          0          0          ECC_irq_en_w[31]          
0          0          0          ECC_irq_en_w[30]          
0          0          0          ECC_irq_en_w[29]          
0          0          0          ECC_irq_en_w[28]          
0          0          0          ECC_irq_en_w[27]          
0          0          0          ECC_irq_en_w[26]          
0          0          0          ECC_irq_en_w[25]          
0          0          0          ECC_irq_en_w[24]          
0          0          0          ECC_irq_en_w[23]          
0          0          0          ECC_irq_en_w[22]          
0          0          0          ECC_irq_en_w[21]          
0          0          0          ECC_irq_en_w[20]          
0          0          0          ECC_irq_en_w[19]          
0          0          0          ECC_irq_en_w[18]          
0          0          0          ECC_irq_en_w[17]          
0          0          0          ECC_irq_en_w[16]          
0          0          0          ECC_irq_en_w[15]          
0          0          0          ECC_irq_en_w[14]          
0          0          0          ECC_irq_en_w[13]          
0          0          0          ECC_irq_en_w[12]          
0          0          0          ECC_irq_en_w[11]          
0          0          0          ECC_irq_en_w[10]          
0          0          0          ECC_irq_en_w[9]           
0          0          0          ECC_irq_en_w[8]           
0          0          0          ECC_irq_en_w[7]           
0          0          0          ECC_irq_en_w[6]           
0          0          0          ECC_irq_en_w[5]           
0          0          0          ECC_irq_en_w[4]           
0          0          0          ECC_irq_en_w[3]           
0          0          0          ECC_irq_en_w[2]           
0          0          0          ECC_irq_en_w[1]           
0          1          0          ECC_irq_en_w[0]           
1          1          1          counter[13]               
1          1          1          counter[12]               
1          1          1          counter[11]               
1          1          1          counter[10]               
1          1          1          counter[9]                
1          1          1          counter[8]                
1          1          1          counter[7]                
1          1          1          counter[6]                
1          1          1          counter[5]                
1          1          1          counter[4]                
1          1          1          counter[3]                
1          1          1          counter[2]                
1          1          1          counter[1]                
1          1          1          counter[0]                
1          1          1          BRAM_wr_en_w              
1          1          1          BRAM_wr_data_w[38]        
1          1          1          BRAM_wr_data_w[37]        
1          1          1          BRAM_wr_data_w[36]        
1          1          1          BRAM_wr_data_w[35]        
1          1          1          BRAM_wr_data_w[34]        
1          1          1          BRAM_wr_data_w[33]        
1          1          1          BRAM_wr_data_w[32]        
1          1          1          BRAM_wr_data_w[31]        
1          1          1          BRAM_wr_data_w[30]        
1          1          1          BRAM_wr_data_w[29]        
1          1          1          BRAM_wr_data_w[28]        
1          1          1          BRAM_wr_data_w[27]        
1          1          1          BRAM_wr_data_w[26]        
1          1          1          BRAM_wr_data_w[25]        
1          1          1          BRAM_wr_data_w[24]        
1          1          1          BRAM_wr_data_w[23]        
1          1          1          BRAM_wr_data_w[22]        
1          1          1          BRAM_wr_data_w[21]        
1          1          1          BRAM_wr_data_w[20]        
1          1          1          BRAM_wr_data_w[19]        
1          1          1          BRAM_wr_data_w[18]        
1          1          1          BRAM_wr_data_w[17]        
1          1          1          BRAM_wr_data_w[16]        
1          1          1          BRAM_wr_data_w[15]        
1          1          1          BRAM_wr_data_w[14]        
1          1          1          BRAM_wr_data_w[13]        
1          1          1          BRAM_wr_data_w[12]        
1          1          1          BRAM_wr_data_w[11]        
1          1          1          BRAM_wr_data_w[10]        
1          1          1          BRAM_wr_data_w[9]         
1          1          1          BRAM_wr_data_w[8]         
1          1          1          BRAM_wr_data_w[7]         
1          1          1          BRAM_wr_data_w[6]         
1          1          1          BRAM_wr_data_w[5]         
1          1          1          BRAM_wr_data_w[4]         
1          1          1          BRAM_wr_data_w[3]         
1          1          1          BRAM_wr_data_w[2]         
1          1          1          BRAM_wr_data_w[1]         
1          1          1          BRAM_wr_data_w[0]         
0          0          0          wr_addr_valid             
0          0          0          rd_addr_valid             
0          0          0          wr_resp_r                 
0          0          0          wr_resp_reg               
0          0          0          rd_resp_r                 
0          0          0          rd_resp_reg               
1          1          1          MEM_ctrl_wr_en_w          
1          1          1          MEM_ctrl_wr_addr_bus_w[13] 
1          1          1          MEM_ctrl_wr_addr_bus_w[12] 
1          1          1          MEM_ctrl_wr_addr_bus_w[11] 
1          1          1          MEM_ctrl_wr_addr_bus_w[10] 
1          1          1          MEM_ctrl_wr_addr_bus_w[9] 
1          1          1          MEM_ctrl_wr_addr_bus_w[8] 
1          1          1          MEM_ctrl_wr_addr_bus_w[7] 
1          1          1          MEM_ctrl_wr_addr_bus_w[6] 
1          1          1          MEM_ctrl_wr_addr_bus_w[5] 
1          1          1          MEM_ctrl_wr_addr_bus_w[4] 
1          1          1          MEM_ctrl_wr_addr_bus_w[3] 
1          1          1          MEM_ctrl_wr_addr_bus_w[2] 
1          1          1          MEM_ctrl_wr_addr_bus_w[1] 
1          1          1          MEM_ctrl_wr_addr_bus_w[0] 
1          1          1          MEM_ctrl_rd_en_w          
1          1          1          MEM_ctrl_rd_addr_bus_w[13] 
1          1          1          MEM_ctrl_rd_addr_bus_w[12] 
1          1          1          MEM_ctrl_rd_addr_bus_w[11] 
1          1          1          MEM_ctrl_rd_addr_bus_w[10] 
1          1          1          MEM_ctrl_rd_addr_bus_w[9] 
1          1          1          MEM_ctrl_rd_addr_bus_w[8] 
1          1          1          MEM_ctrl_rd_addr_bus_w[7] 
1          1          1          MEM_ctrl_rd_addr_bus_w[6] 
1          1          1          MEM_ctrl_rd_addr_bus_w[5] 
1          1          1          MEM_ctrl_rd_addr_bus_w[4] 
1          1          1          MEM_ctrl_rd_addr_bus_w[3] 
1          1          1          MEM_ctrl_rd_addr_bus_w[2] 
1          1          1          MEM_ctrl_rd_addr_bus_w[1] 
1          1          1          MEM_ctrl_rd_addr_bus_w[0] 

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_encoding_inst
Type name: ECC_encoding
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/ECC_encoding_top.sv
Number of covered signal bits: 158 of 194
Number of uncovered signal bits: 36 of 194
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 3 of 194
Number of signal bits partially toggled(fall): 0 of 194

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          ecc_enc_clk               
0          1          0          ecc_enc_rstn              
1          1          1          ecc_enc_sw_rst            
0          0          0          ECC_en[31]                
0          0          0          ECC_en[30]                
0          0          0          ECC_en[29]                
0          0          0          ECC_en[28]                
0          0          0          ECC_en[27]                
0          0          0          ECC_en[26]                
0          0          0          ECC_en[25]                
0          0          0          ECC_en[24]                
0          0          0          ECC_en[23]                
0          0          0          ECC_en[22]                
0          0          0          ECC_en[21]                
0          0          0          ECC_en[20]                
0          0          0          ECC_en[19]                
0          0          0          ECC_en[18]                
0          0          0          ECC_en[17]                
0          0          0          ECC_en[16]                
0          0          0          ECC_en[15]                
0          0          0          ECC_en[14]                
0          0          0          ECC_en[13]                
0          0          0          ECC_en[12]                
0          0          0          ECC_en[11]                
0          0          0          ECC_en[10]                
0          0          0          ECC_en[9]                 
0          0          0          ECC_en[8]                 
0          0          0          ECC_en[7]                 
0          0          0          ECC_en[6]                 
0          0          0          ECC_en[5]                 
0          0          0          ECC_en[4]                 
0          0          0          ECC_en[3]                 
0          0          0          ECC_en[2]                 
0          0          0          ECC_en[1]                 
0          1          0          ECC_en[0]                 
1          1          1          wr_en_i                   
1          1          1          wr_addr_i[13]             
1          1          1          wr_addr_i[12]             
1          1          1          wr_addr_i[11]             
1          1          1          wr_addr_i[10]             
1          1          1          wr_addr_i[9]              
1          1          1          wr_addr_i[8]              
1          1          1          wr_addr_i[7]              
1          1          1          wr_addr_i[6]              
1          1          1          wr_addr_i[5]              
1          1          1          wr_addr_i[4]              
1          1          1          wr_addr_i[3]              
1          1          1          wr_addr_i[2]              
1          1          1          wr_addr_i[1]              
1          1          1          wr_addr_i[0]              
1          1          1          wr_strobe[3]              
1          1          1          wr_strobe[2]              
1          1          1          wr_strobe[1]              
1          1          1          wr_strobe[0]              
1          1          1          data_in[31]               
1          1          1          data_in[30]               
1          1          1          data_in[29]               
1          1          1          data_in[28]               
1          1          1          data_in[27]               
1          1          1          data_in[26]               
1          1          1          data_in[25]               
1          1          1          data_in[24]               
1          1          1          data_in[23]               
1          1          1          data_in[22]               
1          1          1          data_in[21]               
1          1          1          data_in[20]               
1          1          1          data_in[19]               
1          1          1          data_in[18]               
1          1          1          data_in[17]               
1          1          1          data_in[16]               
1          1          1          data_in[15]               
1          1          1          data_in[14]               
1          1          1          data_in[13]               
1          1          1          data_in[12]               
1          1          1          data_in[11]               
1          1          1          data_in[10]               
1          1          1          data_in[9]                
1          1          1          data_in[8]                
1          1          1          data_in[7]                
1          1          1          data_in[6]                
1          1          1          data_in[5]                
1          1          1          data_in[4]                
1          1          1          data_in[3]                
1          1          1          data_in[2]                
1          1          1          data_in[1]                
1          1          1          data_in[0]                
1          1          1          wr_en_o                   
0          0          0          wr_addr_o[13]             
0          0          0          wr_addr_o[12]             
1          1          1          wr_addr_o[11]             
1          1          1          wr_addr_o[10]             
1          1          1          wr_addr_o[9]              
1          1          1          wr_addr_o[8]              
1          1          1          wr_addr_o[7]              
1          1          1          wr_addr_o[6]              
1          1          1          wr_addr_o[5]              
1          1          1          wr_addr_o[4]              
1          1          1          wr_addr_o[3]              
1          1          1          wr_addr_o[2]              
1          1          1          wr_addr_o[1]              
1          1          1          wr_addr_o[0]              
1          1          1          encoded_data[38]          
1          1          1          encoded_data[37]          
1          1          1          encoded_data[36]          
1          1          1          encoded_data[35]          
1          1          1          encoded_data[34]          
1          1          1          encoded_data[33]          
1          1          1          encoded_data[32]          
1          1          1          encoded_data[31]          
1          1          1          encoded_data[30]          
1          1          1          encoded_data[29]          
1          1          1          encoded_data[28]          
1          1          1          encoded_data[27]          
1          1          1          encoded_data[26]          
1          1          1          encoded_data[25]          
1          1          1          encoded_data[24]          
1          1          1          encoded_data[23]          
1          1          1          encoded_data[22]          
1          1          1          encoded_data[21]          
1          1          1          encoded_data[20]          
1          1          1          encoded_data[19]          
1          1          1          encoded_data[18]          
1          1          1          encoded_data[17]          
1          1          1          encoded_data[16]          
1          1          1          encoded_data[15]          
1          1          1          encoded_data[14]          
1          1          1          encoded_data[13]          
1          1          1          encoded_data[12]          
1          1          1          encoded_data[11]          
1          1          1          encoded_data[10]          
1          1          1          encoded_data[9]           
1          1          1          encoded_data[8]           
1          1          1          encoded_data[7]           
1          1          1          encoded_data[6]           
1          1          1          encoded_data[5]           
1          1          1          encoded_data[4]           
1          1          1          encoded_data[3]           
1          1          1          encoded_data[2]           
1          1          1          encoded_data[1]           
1          1          1          encoded_data[0]           
1          1          1          wr_en_w                   
1          1          1          parity_out_w[6]           
1          1          1          parity_out_w[5]           
1          1          1          parity_out_w[4]           
1          1          1          parity_out_w[3]           
1          1          1          parity_out_w[2]           
1          1          1          parity_out_w[1]           
1          1          1          wr_addr_w[13]             
1          1          1          wr_addr_w[12]             
1          1          1          wr_addr_w[11]             
1          1          1          wr_addr_w[10]             
1          1          1          wr_addr_w[9]              
1          1          1          wr_addr_w[8]              
1          1          1          wr_addr_w[7]              
1          1          1          wr_addr_w[6]              
1          1          1          wr_addr_w[5]              
1          1          1          wr_addr_w[4]              
1          1          1          wr_addr_w[3]              
1          1          1          wr_addr_w[2]              
1          1          1          wr_addr_w[1]              
1          1          1          wr_addr_w[0]              
1          1          1          data_w[31]                
1          1          1          data_w[30]                
1          1          1          data_w[29]                
1          1          1          data_w[28]                
1          1          1          data_w[27]                
1          1          1          data_w[26]                
1          1          1          data_w[25]                
1          1          1          data_w[24]                
1          1          1          data_w[23]                
1          1          1          data_w[22]                
1          1          1          data_w[21]                
1          1          1          data_w[20]                
1          1          1          data_w[19]                
1          1          1          data_w[18]                
1          1          1          data_w[17]                
1          1          1          data_w[16]                
1          1          1          data_w[15]                
1          1          1          data_w[14]                
1          1          1          data_w[13]                
1          1          1          data_w[12]                
1          1          1          data_w[11]                
1          1          1          data_w[10]                
1          1          1          data_w[9]                 
1          1          1          data_w[8]                 
1          1          1          data_w[7]                 
1          1          1          data_w[6]                 
1          1          1          data_w[5]                 
1          1          1          data_w[4]                 
1          1          1          data_w[3]                 
1          1          1          data_w[2]                 
1          1          1          data_w[1]                 
1          1          1          data_w[0]                 
0          1          0          ecc_en_w                  

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_encoding_inst.parity_calculator_inst
Type name: parity_calculator
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/parity_calculator_wr.sv
Number of covered signal bits: 137 of 169
Number of uncovered signal bits: 32 of 169
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 169
Number of signal bits partially toggled(fall): 0 of 169

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          ECC_en[31]                
0          0          0          ECC_en[30]                
0          0          0          ECC_en[29]                
0          0          0          ECC_en[28]                
0          0          0          ECC_en[27]                
0          0          0          ECC_en[26]                
0          0          0          ECC_en[25]                
0          0          0          ECC_en[24]                
0          0          0          ECC_en[23]                
0          0          0          ECC_en[22]                
0          0          0          ECC_en[21]                
0          0          0          ECC_en[20]                
0          0          0          ECC_en[19]                
0          0          0          ECC_en[18]                
0          0          0          ECC_en[17]                
0          0          0          ECC_en[16]                
0          0          0          ECC_en[15]                
0          0          0          ECC_en[14]                
0          0          0          ECC_en[13]                
0          0          0          ECC_en[12]                
0          0          0          ECC_en[11]                
0          0          0          ECC_en[10]                
0          0          0          ECC_en[9]                 
0          0          0          ECC_en[8]                 
0          0          0          ECC_en[7]                 
0          0          0          ECC_en[6]                 
0          0          0          ECC_en[5]                 
0          0          0          ECC_en[4]                 
0          0          0          ECC_en[3]                 
0          0          0          ECC_en[2]                 
0          0          0          ECC_en[1]                 
0          1          0          ECC_en[0]                 
1          1          1          wr_en_i                   
1          1          1          wr_addr_i[13]             
1          1          1          wr_addr_i[12]             
1          1          1          wr_addr_i[11]             
1          1          1          wr_addr_i[10]             
1          1          1          wr_addr_i[9]              
1          1          1          wr_addr_i[8]              
1          1          1          wr_addr_i[7]              
1          1          1          wr_addr_i[6]              
1          1          1          wr_addr_i[5]              
1          1          1          wr_addr_i[4]              
1          1          1          wr_addr_i[3]              
1          1          1          wr_addr_i[2]              
1          1          1          wr_addr_i[1]              
1          1          1          wr_addr_i[0]              
1          1          1          data_in[31]               
1          1          1          data_in[30]               
1          1          1          data_in[29]               
1          1          1          data_in[28]               
1          1          1          data_in[27]               
1          1          1          data_in[26]               
1          1          1          data_in[25]               
1          1          1          data_in[24]               
1          1          1          data_in[23]               
1          1          1          data_in[22]               
1          1          1          data_in[21]               
1          1          1          data_in[20]               
1          1          1          data_in[19]               
1          1          1          data_in[18]               
1          1          1          data_in[17]               
1          1          1          data_in[16]               
1          1          1          data_in[15]               
1          1          1          data_in[14]               
1          1          1          data_in[13]               
1          1          1          data_in[12]               
1          1          1          data_in[11]               
1          1          1          data_in[10]               
1          1          1          data_in[9]                
1          1          1          data_in[8]                
1          1          1          data_in[7]                
1          1          1          data_in[6]                
1          1          1          data_in[5]                
1          1          1          data_in[4]                
1          1          1          data_in[3]                
1          1          1          data_in[2]                
1          1          1          data_in[1]                
1          1          1          data_in[0]                
1          1          1          wr_strobe[3]              
1          1          1          wr_strobe[2]              
1          1          1          wr_strobe[1]              
1          1          1          wr_strobe[0]              
1          1          1          wr_en_o                   
1          1          1          parity_out[6]             
1          1          1          parity_out[5]             
1          1          1          parity_out[4]             
1          1          1          parity_out[3]             
1          1          1          parity_out[2]             
1          1          1          parity_out[1]             
1          1          1          wr_addr_o[13]             
1          1          1          wr_addr_o[12]             
1          1          1          wr_addr_o[11]             
1          1          1          wr_addr_o[10]             
1          1          1          wr_addr_o[9]              
1          1          1          wr_addr_o[8]              
1          1          1          wr_addr_o[7]              
1          1          1          wr_addr_o[6]              
1          1          1          wr_addr_o[5]              
1          1          1          wr_addr_o[4]              
1          1          1          wr_addr_o[3]              
1          1          1          wr_addr_o[2]              
1          1          1          wr_addr_o[1]              
1          1          1          wr_addr_o[0]              
1          1          1          data_out[31]              
1          1          1          data_out[30]              
1          1          1          data_out[29]              
1          1          1          data_out[28]              
1          1          1          data_out[27]              
1          1          1          data_out[26]              
1          1          1          data_out[25]              
1          1          1          data_out[24]              
1          1          1          data_out[23]              
1          1          1          data_out[22]              
1          1          1          data_out[21]              
1          1          1          data_out[20]              
1          1          1          data_out[19]              
1          1          1          data_out[18]              
1          1          1          data_out[17]              
1          1          1          data_out[16]              
1          1          1          data_out[15]              
1          1          1          data_out[14]              
1          1          1          data_out[13]              
1          1          1          data_out[12]              
1          1          1          data_out[11]              
1          1          1          data_out[10]              
1          1          1          data_out[9]               
1          1          1          data_out[8]               
1          1          1          data_out[7]               
1          1          1          data_out[6]               
1          1          1          data_out[5]               
1          1          1          data_out[4]               
1          1          1          data_out[3]               
1          1          1          data_out[2]               
1          1          1          data_out[1]               
1          1          1          data_out[0]               
1          1          1          data_in_r[31]             
1          1          1          data_in_r[30]             
1          1          1          data_in_r[29]             
1          1          1          data_in_r[28]             
1          1          1          data_in_r[27]             
1          1          1          data_in_r[26]             
1          1          1          data_in_r[25]             
1          1          1          data_in_r[24]             
1          1          1          data_in_r[23]             
1          1          1          data_in_r[22]             
1          1          1          data_in_r[21]             
1          1          1          data_in_r[20]             
1          1          1          data_in_r[19]             
1          1          1          data_in_r[18]             
1          1          1          data_in_r[17]             
1          1          1          data_in_r[16]             
1          1          1          data_in_r[15]             
1          1          1          data_in_r[14]             
1          1          1          data_in_r[13]             
1          1          1          data_in_r[12]             
1          1          1          data_in_r[11]             
1          1          1          data_in_r[10]             
1          1          1          data_in_r[9]              
1          1          1          data_in_r[8]              
1          1          1          data_in_r[7]              
1          1          1          data_in_r[6]              
1          1          1          data_in_r[5]              
1          1          1          data_in_r[4]              
1          1          1          data_in_r[3]              
1          1          1          data_in_r[2]              
1          1          1          data_in_r[1]              
1          1          1          data_in_r[0]              
1          1          1          str_flag                  

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_encoding_inst.data_enc_inst
Type name: data_enc
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/data_encoding.sv
Number of covered signal bits: 130 of 137
Number of uncovered signal bits: 7 of 137
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 137
Number of signal bits partially toggled(fall): 0 of 137

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          1          0          ECC_en                    
1          1          1          wr_en_i                   
1          1          1          wr_addr_i[13]             
1          1          1          wr_addr_i[12]             
1          1          1          wr_addr_i[11]             
1          1          1          wr_addr_i[10]             
1          1          1          wr_addr_i[9]              
1          1          1          wr_addr_i[8]              
1          1          1          wr_addr_i[7]              
1          1          1          wr_addr_i[6]              
1          1          1          wr_addr_i[5]              
1          1          1          wr_addr_i[4]              
1          1          1          wr_addr_i[3]              
1          1          1          wr_addr_i[2]              
1          1          1          wr_addr_i[1]              
1          1          1          wr_addr_i[0]              
1          1          1          data_in[31]               
1          1          1          data_in[30]               
1          1          1          data_in[29]               
1          1          1          data_in[28]               
1          1          1          data_in[27]               
1          1          1          data_in[26]               
1          1          1          data_in[25]               
1          1          1          data_in[24]               
1          1          1          data_in[23]               
1          1          1          data_in[22]               
1          1          1          data_in[21]               
1          1          1          data_in[20]               
1          1          1          data_in[19]               
1          1          1          data_in[18]               
1          1          1          data_in[17]               
1          1          1          data_in[16]               
1          1          1          data_in[15]               
1          1          1          data_in[14]               
1          1          1          data_in[13]               
1          1          1          data_in[12]               
1          1          1          data_in[11]               
1          1          1          data_in[10]               
1          1          1          data_in[9]                
1          1          1          data_in[8]                
1          1          1          data_in[7]                
1          1          1          data_in[6]                
1          1          1          data_in[5]                
1          1          1          data_in[4]                
1          1          1          data_in[3]                
1          1          1          data_in[2]                
1          1          1          data_in[1]                
1          1          1          data_in[0]                
1          1          1          parity_bits_in[6]         
1          1          1          parity_bits_in[5]         
1          1          1          parity_bits_in[4]         
1          1          1          parity_bits_in[3]         
1          1          1          parity_bits_in[2]         
1          1          1          parity_bits_in[1]         
1          1          1          wr_en_o                   
0          0          0          wr_addr_o[13]             
0          0          0          wr_addr_o[12]             
1          1          1          wr_addr_o[11]             
1          1          1          wr_addr_o[10]             
1          1          1          wr_addr_o[9]              
1          1          1          wr_addr_o[8]              
1          1          1          wr_addr_o[7]              
1          1          1          wr_addr_o[6]              
1          1          1          wr_addr_o[5]              
1          1          1          wr_addr_o[4]              
1          1          1          wr_addr_o[3]              
1          1          1          wr_addr_o[2]              
1          1          1          wr_addr_o[1]              
1          1          1          wr_addr_o[0]              
1          1          1          encoded_data[38]          
1          1          1          encoded_data[37]          
1          1          1          encoded_data[36]          
1          1          1          encoded_data[35]          
1          1          1          encoded_data[34]          
1          1          1          encoded_data[33]          
1          1          1          encoded_data[32]          
1          1          1          encoded_data[31]          
1          1          1          encoded_data[30]          
1          1          1          encoded_data[29]          
1          1          1          encoded_data[28]          
1          1          1          encoded_data[27]          
1          1          1          encoded_data[26]          
1          1          1          encoded_data[25]          
1          1          1          encoded_data[24]          
1          1          1          encoded_data[23]          
1          1          1          encoded_data[22]          
1          1          1          encoded_data[21]          
1          1          1          encoded_data[20]          
1          1          1          encoded_data[19]          
1          1          1          encoded_data[18]          
1          1          1          encoded_data[17]          
1          1          1          encoded_data[16]          
1          1          1          encoded_data[15]          
1          1          1          encoded_data[14]          
1          1          1          encoded_data[13]          
1          1          1          encoded_data[12]          
1          1          1          encoded_data[11]          
1          1          1          encoded_data[10]          
1          1          1          encoded_data[9]           
1          1          1          encoded_data[8]           
1          1          1          encoded_data[7]           
1          1          1          encoded_data[6]           
1          1          1          encoded_data[5]           
1          1          1          encoded_data[4]           
1          1          1          encoded_data[3]           
1          1          1          encoded_data[2]           
1          1          1          encoded_data[1]           
1          1          1          encoded_data[0]           
1          1          1          parity_bit                
1          1          1          wr_addr_w[13]             
1          1          1          wr_addr_w[12]             
1          1          1          wr_addr_w[11]             
1          1          1          wr_addr_w[10]             
1          1          1          wr_addr_w[9]              
1          1          1          wr_addr_w[8]              
1          1          1          wr_addr_w[7]              
1          1          1          wr_addr_w[6]              
1          1          1          wr_addr_w[5]              
1          1          1          wr_addr_w[4]              
1          1          1          wr_addr_w[3]              
1          1          1          wr_addr_w[2]              
0          0          0          wr_addr_w[1]              
0          0          0          wr_addr_w[0]              
0          0          0          wr_addr_w1[13]            
0          0          0          wr_addr_w1[12]            
1          1          1          wr_addr_w1[11]            
1          1          1          wr_addr_w1[10]            
1          1          1          wr_addr_w1[9]             
1          1          1          wr_addr_w1[8]             
1          1          1          wr_addr_w1[7]             
1          1          1          wr_addr_w1[6]             
1          1          1          wr_addr_w1[5]             
1          1          1          wr_addr_w1[4]             
1          1          1          wr_addr_w1[3]             
1          1          1          wr_addr_w1[2]             
1          1          1          wr_addr_w1[1]             
1          1          1          wr_addr_w1[0]             

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst
Type name: ECC_decoding
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/ECC_decoding_top.sv
Number of covered signal bits: 220 of 372
Number of uncovered signal bits: 152 of 372
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 3 of 372
Number of signal bits partially toggled(fall): 0 of 372

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          ECC_decoding_clk          
0          1          0          ECC_decoding_rstn         
1          1          1          ECC_decoding_sw_rst       
0          0          0          ECC_en[31]                
0          0          0          ECC_en[30]                
0          0          0          ECC_en[29]                
0          0          0          ECC_en[28]                
0          0          0          ECC_en[27]                
0          0          0          ECC_en[26]                
0          0          0          ECC_en[25]                
0          0          0          ECC_en[24]                
0          0          0          ECC_en[23]                
0          0          0          ECC_en[22]                
0          0          0          ECC_en[21]                
0          0          0          ECC_en[20]                
0          0          0          ECC_en[19]                
0          0          0          ECC_en[18]                
0          0          0          ECC_en[17]                
0          0          0          ECC_en[16]                
0          0          0          ECC_en[15]                
0          0          0          ECC_en[14]                
0          0          0          ECC_en[13]                
0          0          0          ECC_en[12]                
0          0          0          ECC_en[11]                
0          0          0          ECC_en[10]                
0          0          0          ECC_en[9]                 
0          0          0          ECC_en[8]                 
0          0          0          ECC_en[7]                 
0          0          0          ECC_en[6]                 
0          0          0          ECC_en[5]                 
0          0          0          ECC_en[4]                 
0          0          0          ECC_en[3]                 
0          0          0          ECC_en[2]                 
0          0          0          ECC_en[1]                 
0          1          0          ECC_en[0]                 
0          0          0          ECC_irq_en[31]            
0          0          0          ECC_irq_en[30]            
0          0          0          ECC_irq_en[29]            
0          0          0          ECC_irq_en[28]            
0          0          0          ECC_irq_en[27]            
0          0          0          ECC_irq_en[26]            
0          0          0          ECC_irq_en[25]            
0          0          0          ECC_irq_en[24]            
0          0          0          ECC_irq_en[23]            
0          0          0          ECC_irq_en[22]            
0          0          0          ECC_irq_en[21]            
0          0          0          ECC_irq_en[20]            
0          0          0          ECC_irq_en[19]            
0          0          0          ECC_irq_en[18]            
0          0          0          ECC_irq_en[17]            
0          0          0          ECC_irq_en[16]            
0          0          0          ECC_irq_en[15]            
0          0          0          ECC_irq_en[14]            
0          0          0          ECC_irq_en[13]            
0          0          0          ECC_irq_en[12]            
0          0          0          ECC_irq_en[11]            
0          0          0          ECC_irq_en[10]            
0          0          0          ECC_irq_en[9]             
0          0          0          ECC_irq_en[8]             
0          0          0          ECC_irq_en[7]             
0          0          0          ECC_irq_en[6]             
0          0          0          ECC_irq_en[5]             
0          0          0          ECC_irq_en[4]             
0          0          0          ECC_irq_en[3]             
0          0          0          ECC_irq_en[2]             
0          0          0          ECC_irq_en[1]             
0          1          0          ECC_irq_en[0]             
1          1          1          rd_en_i                   
1          1          1          rd_addr_i[13]             
1          1          1          rd_addr_i[12]             
1          1          1          rd_addr_i[11]             
1          1          1          rd_addr_i[10]             
1          1          1          rd_addr_i[9]              
1          1          1          rd_addr_i[8]              
1          1          1          rd_addr_i[7]              
1          1          1          rd_addr_i[6]              
1          1          1          rd_addr_i[5]              
1          1          1          rd_addr_i[4]              
1          1          1          rd_addr_i[3]              
1          1          1          rd_addr_i[2]              
1          1          1          rd_addr_i[1]              
1          1          1          rd_addr_i[0]              
1          1          1          rd_data_i[38]             
1          1          1          rd_data_i[37]             
1          1          1          rd_data_i[36]             
1          1          1          rd_data_i[35]             
1          1          1          rd_data_i[34]             
1          1          1          rd_data_i[33]             
1          1          1          rd_data_i[32]             
1          1          1          rd_data_i[31]             
1          1          1          rd_data_i[30]             
1          1          1          rd_data_i[29]             
1          1          1          rd_data_i[28]             
1          1          1          rd_data_i[27]             
1          1          1          rd_data_i[26]             
1          1          1          rd_data_i[25]             
1          1          1          rd_data_i[24]             
1          1          1          rd_data_i[23]             
1          1          1          rd_data_i[22]             
1          1          1          rd_data_i[21]             
1          1          1          rd_data_i[20]             
1          1          1          rd_data_i[19]             
1          1          1          rd_data_i[18]             
1          1          1          rd_data_i[17]             
1          1          1          rd_data_i[16]             
1          1          1          rd_data_i[15]             
1          1          1          rd_data_i[14]             
1          1          1          rd_data_i[13]             
1          1          1          rd_data_i[12]             
1          1          1          rd_data_i[11]             
1          1          1          rd_data_i[10]             
1          1          1          rd_data_i[9]              
1          1          1          rd_data_i[8]              
1          1          1          rd_data_i[7]              
1          1          1          rd_data_i[6]              
1          1          1          rd_data_i[5]              
1          1          1          rd_data_i[4]              
1          1          1          rd_data_i[3]              
1          1          1          rd_data_i[2]              
1          1          1          rd_data_i[1]              
1          1          1          rd_data_i[0]              
1          1          1          rd_en_o                   
0          0          0          rd_addr_o[13]             
0          0          0          rd_addr_o[12]             
1          1          1          rd_addr_o[11]             
1          1          1          rd_addr_o[10]             
1          1          1          rd_addr_o[9]              
1          1          1          rd_addr_o[8]              
1          1          1          rd_addr_o[7]              
1          1          1          rd_addr_o[6]              
1          1          1          rd_addr_o[5]              
1          1          1          rd_addr_o[4]              
1          1          1          rd_addr_o[3]              
1          1          1          rd_addr_o[2]              
1          1          1          rd_addr_o[1]              
1          1          1          rd_addr_o[0]              
1          1          1          rd_data_o[31]             
1          1          1          rd_data_o[30]             
1          1          1          rd_data_o[29]             
1          1          1          rd_data_o[28]             
1          1          1          rd_data_o[27]             
1          1          1          rd_data_o[26]             
1          1          1          rd_data_o[25]             
1          1          1          rd_data_o[24]             
1          1          1          rd_data_o[23]             
1          1          1          rd_data_o[22]             
1          1          1          rd_data_o[21]             
1          1          1          rd_data_o[20]             
1          1          1          rd_data_o[19]             
1          1          1          rd_data_o[18]             
1          1          1          rd_data_o[17]             
1          1          1          rd_data_o[16]             
1          1          1          rd_data_o[15]             
1          1          1          rd_data_o[14]             
1          1          1          rd_data_o[13]             
1          1          1          rd_data_o[12]             
1          1          1          rd_data_o[11]             
1          1          1          rd_data_o[10]             
1          1          1          rd_data_o[9]              
1          1          1          rd_data_o[8]              
1          1          1          rd_data_o[7]              
1          1          1          rd_data_o[6]              
1          1          1          rd_data_o[5]              
1          1          1          rd_data_o[4]              
1          1          1          rd_data_o[3]              
1          1          1          rd_data_o[2]              
1          1          1          rd_data_o[1]              
1          1          1          rd_data_o[0]              
0          0          0          data_valid                
0          0          0          error_type[31]            
0          0          0          error_type[30]            
0          0          0          error_type[29]            
0          0          0          error_type[28]            
0          0          0          error_type[27]            
0          0          0          error_type[26]            
0          0          0          error_type[25]            
0          0          0          error_type[24]            
0          0          0          error_type[23]            
0          0          0          error_type[22]            
0          0          0          error_type[21]            
0          0          0          error_type[20]            
0          0          0          error_type[19]            
0          0          0          error_type[18]            
0          0          0          error_type[17]            
0          0          0          error_type[16]            
0          0          0          error_type[15]            
0          0          0          error_type[14]            
0          0          0          error_type[13]            
0          0          0          error_type[12]            
0          0          0          error_type[11]            
0          0          0          error_type[10]            
0          0          0          error_type[9]             
0          0          0          error_type[8]             
0          0          0          error_type[7]             
0          0          0          error_type[6]             
0          0          0          error_type[5]             
0          0          0          error_type[4]             
0          0          0          error_type[3]             
0          0          0          error_type[2]             
1          1          1          error_type[1]             
1          1          1          error_type[0]             
1          1          1          ECC_interrupt             
1          1          1          i_psel                    
1          1          1          i_penable                 
0          0          0          i_paddr[9]                
0          0          0          i_paddr[8]                
0          0          0          i_paddr[7]                
0          0          0          i_paddr[6]                
0          0          0          i_paddr[5]                
0          0          0          i_paddr[4]                
0          0          0          i_paddr[3]                
0          0          0          i_paddr[2]                
0          0          0          i_paddr[1]                
0          0          0          i_paddr[0]                
1          1          1          i_pwrite                  
1          1          1          i_pstrb[3]                
1          1          1          i_pstrb[2]                
1          1          1          i_pstrb[1]                
1          1          1          i_pstrb[0]                
1          1          1          rd_data_dec_w[31]         
1          1          1          rd_data_dec_w[30]         
1          1          1          rd_data_dec_w[29]         
1          1          1          rd_data_dec_w[28]         
1          1          1          rd_data_dec_w[27]         
1          1          1          rd_data_dec_w[26]         
1          1          1          rd_data_dec_w[25]         
1          1          1          rd_data_dec_w[24]         
1          1          1          rd_data_dec_w[23]         
1          1          1          rd_data_dec_w[22]         
1          1          1          rd_data_dec_w[21]         
1          1          1          rd_data_dec_w[20]         
1          1          1          rd_data_dec_w[19]         
1          1          1          rd_data_dec_w[18]         
1          1          1          rd_data_dec_w[17]         
1          1          1          rd_data_dec_w[16]         
1          1          1          rd_data_dec_w[15]         
1          1          1          rd_data_dec_w[14]         
1          1          1          rd_data_dec_w[13]         
1          1          1          rd_data_dec_w[12]         
1          1          1          rd_data_dec_w[11]         
1          1          1          rd_data_dec_w[10]         
1          1          1          rd_data_dec_w[9]          
1          1          1          rd_data_dec_w[8]          
1          1          1          rd_data_dec_w[7]          
1          1          1          rd_data_dec_w[6]          
1          1          1          rd_data_dec_w[5]          
1          1          1          rd_data_dec_w[4]          
1          1          1          rd_data_dec_w[3]          
1          1          1          rd_data_dec_w[2]          
1          1          1          rd_data_dec_w[1]          
1          1          1          rd_data_dec_w[0]          
1          1          1          parity_dec_w[6]           
1          1          1          parity_dec_w[5]           
1          1          1          parity_dec_w[4]           
1          1          1          parity_dec_w[3]           
1          1          1          parity_dec_w[2]           
1          1          1          parity_dec_w[1]           
1          1          1          parity_dec_w[0]           
0          0          0          rd_data_w2[38]            
0          0          0          rd_data_w2[37]            
0          0          0          rd_data_w2[36]            
0          0          0          rd_data_w2[35]            
0          0          0          rd_data_w2[34]            
0          0          0          rd_data_w2[33]            
0          0          0          rd_data_w2[32]            
0          0          0          rd_data_w2[31]            
0          0          0          rd_data_w2[30]            
0          0          0          rd_data_w2[29]            
0          0          0          rd_data_w2[28]            
0          0          0          rd_data_w2[27]            
0          0          0          rd_data_w2[26]            
0          0          0          rd_data_w2[25]            
0          0          0          rd_data_w2[24]            
0          0          0          rd_data_w2[23]            
0          0          0          rd_data_w2[22]            
0          0          0          rd_data_w2[21]            
0          0          0          rd_data_w2[20]            
0          0          0          rd_data_w2[19]            
0          0          0          rd_data_w2[18]            
0          0          0          rd_data_w2[17]            
0          0          0          rd_data_w2[16]            
0          0          0          rd_data_w2[15]            
0          0          0          rd_data_w2[14]            
0          0          0          rd_data_w2[13]            
0          0          0          rd_data_w2[12]            
0          0          0          rd_data_w2[11]            
0          0          0          rd_data_w2[10]            
0          0          0          rd_data_w2[9]             
0          0          0          rd_data_w2[8]             
0          0          0          rd_data_w2[7]             
0          0          0          rd_data_w2[6]             
0          0          0          rd_data_w2[5]             
0          0          0          rd_data_w2[4]             
0          0          0          rd_data_w2[3]             
0          0          0          rd_data_w2[2]             
0          0          0          rd_data_w2[1]             
0          0          0          rd_data_w2[0]             
1          1          1          rd_data_w[38]             
1          1          1          rd_data_w[37]             
1          1          1          rd_data_w[36]             
1          1          1          rd_data_w[35]             
1          1          1          rd_data_w[34]             
1          1          1          rd_data_w[33]             
1          1          1          rd_data_w[32]             
1          1          1          rd_data_w[31]             
1          1          1          rd_data_w[30]             
1          1          1          rd_data_w[29]             
1          1          1          rd_data_w[28]             
1          1          1          rd_data_w[27]             
1          1          1          rd_data_w[26]             
1          1          1          rd_data_w[25]             
1          1          1          rd_data_w[24]             
1          1          1          rd_data_w[23]             
1          1          1          rd_data_w[22]             
1          1          1          rd_data_w[21]             
1          1          1          rd_data_w[20]             
1          1          1          rd_data_w[19]             
1          1          1          rd_data_w[18]             
1          1          1          rd_data_w[17]             
1          1          1          rd_data_w[16]             
1          1          1          rd_data_w[15]             
1          1          1          rd_data_w[14]             
1          1          1          rd_data_w[13]             
1          1          1          rd_data_w[12]             
1          1          1          rd_data_w[11]             
1          1          1          rd_data_w[10]             
1          1          1          rd_data_w[9]              
1          1          1          rd_data_w[8]              
1          1          1          rd_data_w[7]              
1          1          1          rd_data_w[6]              
1          1          1          rd_data_w[5]              
1          1          1          rd_data_w[4]              
1          1          1          rd_data_w[3]              
1          1          1          rd_data_w[2]              
1          1          1          rd_data_w[1]              
1          1          1          rd_data_w[0]              
0          0          0          parity_bits_w[6]          
1          1          1          parity_bits_w[5]          
1          1          1          parity_bits_w[4]          
1          1          1          parity_bits_w[3]          
1          1          1          parity_bits_w[2]          
1          1          1          parity_bits_w[1]          
1          1          1          parity_bits_w[0]          
1          1          1          rd_en_w                   
1          1          1          rd_addr_w[13]             
1          1          1          rd_addr_w[12]             
1          1          1          rd_addr_w[11]             
1          1          1          rd_addr_w[10]             
1          1          1          rd_addr_w[9]              
1          1          1          rd_addr_w[8]              
1          1          1          rd_addr_w[7]              
1          1          1          rd_addr_w[6]              
1          1          1          rd_addr_w[5]              
1          1          1          rd_addr_w[4]              
1          1          1          rd_addr_w[3]              
1          1          1          rd_addr_w[2]              
0          0          0          rd_addr_w[1]              
0          0          0          rd_addr_w[0]              
0          0          0          rd_addr_w1[13]            
0          0          0          rd_addr_w1[12]            
1          1          1          rd_addr_w1[11]            
1          1          1          rd_addr_w1[10]            
1          1          1          rd_addr_w1[9]             
1          1          1          rd_addr_w1[8]             
1          1          1          rd_addr_w1[7]             
1          1          1          rd_addr_w1[6]             
1          1          1          rd_addr_w1[5]             
1          1          1          rd_addr_w1[4]             
1          1          1          rd_addr_w1[3]             
1          1          1          rd_addr_w1[2]             
1          1          1          rd_addr_w1[1]             
1          1          1          rd_addr_w1[0]             

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst.data_decoding_inst
Type name: data_decoding
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/data_decoding.sv
Number of covered signal bits: 117 of 117
Number of uncovered signal bits: 0 of 117
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 117
Number of signal bits partially toggled(fall): 0 of 117

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          rd_data_i[38]             
1          1          1          rd_data_i[37]             
1          1          1          rd_data_i[36]             
1          1          1          rd_data_i[35]             
1          1          1          rd_data_i[34]             
1          1          1          rd_data_i[33]             
1          1          1          rd_data_i[32]             
1          1          1          rd_data_i[31]             
1          1          1          rd_data_i[30]             
1          1          1          rd_data_i[29]             
1          1          1          rd_data_i[28]             
1          1          1          rd_data_i[27]             
1          1          1          rd_data_i[26]             
1          1          1          rd_data_i[25]             
1          1          1          rd_data_i[24]             
1          1          1          rd_data_i[23]             
1          1          1          rd_data_i[22]             
1          1          1          rd_data_i[21]             
1          1          1          rd_data_i[20]             
1          1          1          rd_data_i[19]             
1          1          1          rd_data_i[18]             
1          1          1          rd_data_i[17]             
1          1          1          rd_data_i[16]             
1          1          1          rd_data_i[15]             
1          1          1          rd_data_i[14]             
1          1          1          rd_data_i[13]             
1          1          1          rd_data_i[12]             
1          1          1          rd_data_i[11]             
1          1          1          rd_data_i[10]             
1          1          1          rd_data_i[9]              
1          1          1          rd_data_i[8]              
1          1          1          rd_data_i[7]              
1          1          1          rd_data_i[6]              
1          1          1          rd_data_i[5]              
1          1          1          rd_data_i[4]              
1          1          1          rd_data_i[3]              
1          1          1          rd_data_i[2]              
1          1          1          rd_data_i[1]              
1          1          1          rd_data_i[0]              
1          1          1          rd_data_o[38]             
1          1          1          rd_data_o[37]             
1          1          1          rd_data_o[36]             
1          1          1          rd_data_o[35]             
1          1          1          rd_data_o[34]             
1          1          1          rd_data_o[33]             
1          1          1          rd_data_o[32]             
1          1          1          rd_data_o[31]             
1          1          1          rd_data_o[30]             
1          1          1          rd_data_o[29]             
1          1          1          rd_data_o[28]             
1          1          1          rd_data_o[27]             
1          1          1          rd_data_o[26]             
1          1          1          rd_data_o[25]             
1          1          1          rd_data_o[24]             
1          1          1          rd_data_o[23]             
1          1          1          rd_data_o[22]             
1          1          1          rd_data_o[21]             
1          1          1          rd_data_o[20]             
1          1          1          rd_data_o[19]             
1          1          1          rd_data_o[18]             
1          1          1          rd_data_o[17]             
1          1          1          rd_data_o[16]             
1          1          1          rd_data_o[15]             
1          1          1          rd_data_o[14]             
1          1          1          rd_data_o[13]             
1          1          1          rd_data_o[12]             
1          1          1          rd_data_o[11]             
1          1          1          rd_data_o[10]             
1          1          1          rd_data_o[9]              
1          1          1          rd_data_o[8]              
1          1          1          rd_data_o[7]              
1          1          1          rd_data_o[6]              
1          1          1          rd_data_o[5]              
1          1          1          rd_data_o[4]              
1          1          1          rd_data_o[3]              
1          1          1          rd_data_o[2]              
1          1          1          rd_data_o[1]              
1          1          1          rd_data_o[0]              
1          1          1          parity_dec_o[6]           
1          1          1          parity_dec_o[5]           
1          1          1          parity_dec_o[4]           
1          1          1          parity_dec_o[3]           
1          1          1          parity_dec_o[2]           
1          1          1          parity_dec_o[1]           
1          1          1          parity_dec_o[0]           
1          1          1          rd_data_dec[31]           
1          1          1          rd_data_dec[30]           
1          1          1          rd_data_dec[29]           
1          1          1          rd_data_dec[28]           
1          1          1          rd_data_dec[27]           
1          1          1          rd_data_dec[26]           
1          1          1          rd_data_dec[25]           
1          1          1          rd_data_dec[24]           
1          1          1          rd_data_dec[23]           
1          1          1          rd_data_dec[22]           
1          1          1          rd_data_dec[21]           
1          1          1          rd_data_dec[20]           
1          1          1          rd_data_dec[19]           
1          1          1          rd_data_dec[18]           
1          1          1          rd_data_dec[17]           
1          1          1          rd_data_dec[16]           
1          1          1          rd_data_dec[15]           
1          1          1          rd_data_dec[14]           
1          1          1          rd_data_dec[13]           
1          1          1          rd_data_dec[12]           
1          1          1          rd_data_dec[11]           
1          1          1          rd_data_dec[10]           
1          1          1          rd_data_dec[9]            
1          1          1          rd_data_dec[8]            
1          1          1          rd_data_dec[7]            
1          1          1          rd_data_dec[6]            
1          1          1          rd_data_dec[5]            
1          1          1          rd_data_dec[4]            
1          1          1          rd_data_dec[3]            
1          1          1          rd_data_dec[2]            
1          1          1          rd_data_dec[1]            
1          1          1          rd_data_dec[0]            

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst.parity_calc_rd_inst
Type name: parity_calc_rd
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/parity_calculator_rd.sv
Number of covered signal bits: 51 of 85
Number of uncovered signal bits: 34 of 85
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 2 of 85
Number of signal bits partially toggled(fall): 0 of 85

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          parity_calc_rd_clk        
0          1          0          parity_calc_rd_rstn       
1          1          1          parity_calc_sw_rst        
1          1          1          rd_en_i                   
0          0          0          ECC_en[31]                
0          0          0          ECC_en[30]                
0          0          0          ECC_en[29]                
0          0          0          ECC_en[28]                
0          0          0          ECC_en[27]                
0          0          0          ECC_en[26]                
0          0          0          ECC_en[25]                
0          0          0          ECC_en[24]                
0          0          0          ECC_en[23]                
0          0          0          ECC_en[22]                
0          0          0          ECC_en[21]                
0          0          0          ECC_en[20]                
0          0          0          ECC_en[19]                
0          0          0          ECC_en[18]                
0          0          0          ECC_en[17]                
0          0          0          ECC_en[16]                
0          0          0          ECC_en[15]                
0          0          0          ECC_en[14]                
0          0          0          ECC_en[13]                
0          0          0          ECC_en[12]                
0          0          0          ECC_en[11]                
0          0          0          ECC_en[10]                
0          0          0          ECC_en[9]                 
0          0          0          ECC_en[8]                 
0          0          0          ECC_en[7]                 
0          0          0          ECC_en[6]                 
0          0          0          ECC_en[5]                 
0          0          0          ECC_en[4]                 
0          0          0          ECC_en[3]                 
0          0          0          ECC_en[2]                 
0          0          0          ECC_en[1]                 
0          1          0          ECC_en[0]                 
1          1          1          parity_in_rd[6]           
1          1          1          parity_in_rd[5]           
1          1          1          parity_in_rd[4]           
1          1          1          parity_in_rd[3]           
1          1          1          parity_in_rd[2]           
1          1          1          parity_in_rd[1]           
1          1          1          parity_in_rd[0]           
1          1          1          rd_data_i[31]             
1          1          1          rd_data_i[30]             
1          1          1          rd_data_i[29]             
1          1          1          rd_data_i[28]             
1          1          1          rd_data_i[27]             
1          1          1          rd_data_i[26]             
1          1          1          rd_data_i[25]             
1          1          1          rd_data_i[24]             
1          1          1          rd_data_i[23]             
1          1          1          rd_data_i[22]             
1          1          1          rd_data_i[21]             
1          1          1          rd_data_i[20]             
1          1          1          rd_data_i[19]             
1          1          1          rd_data_i[18]             
1          1          1          rd_data_i[17]             
1          1          1          rd_data_i[16]             
1          1          1          rd_data_i[15]             
1          1          1          rd_data_i[14]             
1          1          1          rd_data_i[13]             
1          1          1          rd_data_i[12]             
1          1          1          rd_data_i[11]             
1          1          1          rd_data_i[10]             
1          1          1          rd_data_i[9]              
1          1          1          rd_data_i[8]              
1          1          1          rd_data_i[7]              
1          1          1          rd_data_i[6]              
1          1          1          rd_data_i[5]              
1          1          1          rd_data_i[4]              
1          1          1          rd_data_i[3]              
1          1          1          rd_data_i[2]              
1          1          1          rd_data_i[1]              
1          1          1          rd_data_i[0]              
1          1          1          rd_en_r                   
0          0          0          parity_out_rd[6]          
1          1          1          parity_out_rd[5]          
1          1          1          parity_out_rd[4]          
1          1          1          parity_out_rd[3]          
1          1          1          parity_out_rd[2]          
1          1          1          parity_out_rd[1]          
1          1          1          parity_out_rd[0]          
1          1          1          rd_en                     
1          1          1          rd_en_r1                  

Instance name: zmc_axi4_top.mem_ctrl_inst.ECC_decoding_inst.err_det_corr_inst
Type name: err_det_corr
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/err_det_corr.sv
Number of covered signal bits: 238 of 389
Number of uncovered signal bits: 151 of 389
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 2 of 389
Number of signal bits partially toggled(fall): 0 of 389

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          ECC_en[31]                
0          0          0          ECC_en[30]                
0          0          0          ECC_en[29]                
0          0          0          ECC_en[28]                
0          0          0          ECC_en[27]                
0          0          0          ECC_en[26]                
0          0          0          ECC_en[25]                
0          0          0          ECC_en[24]                
0          0          0          ECC_en[23]                
0          0          0          ECC_en[22]                
0          0          0          ECC_en[21]                
0          0          0          ECC_en[20]                
0          0          0          ECC_en[19]                
0          0          0          ECC_en[18]                
0          0          0          ECC_en[17]                
0          0          0          ECC_en[16]                
0          0          0          ECC_en[15]                
0          0          0          ECC_en[14]                
0          0          0          ECC_en[13]                
0          0          0          ECC_en[12]                
0          0          0          ECC_en[11]                
0          0          0          ECC_en[10]                
0          0          0          ECC_en[9]                 
0          0          0          ECC_en[8]                 
0          0          0          ECC_en[7]                 
0          0          0          ECC_en[6]                 
0          0          0          ECC_en[5]                 
0          0          0          ECC_en[4]                 
0          0          0          ECC_en[3]                 
0          0          0          ECC_en[2]                 
0          0          0          ECC_en[1]                 
0          1          0          ECC_en[0]                 
0          0          0          ECC_irq_en[31]            
0          0          0          ECC_irq_en[30]            
0          0          0          ECC_irq_en[29]            
0          0          0          ECC_irq_en[28]            
0          0          0          ECC_irq_en[27]            
0          0          0          ECC_irq_en[26]            
0          0          0          ECC_irq_en[25]            
0          0          0          ECC_irq_en[24]            
0          0          0          ECC_irq_en[23]            
0          0          0          ECC_irq_en[22]            
0          0          0          ECC_irq_en[21]            
0          0          0          ECC_irq_en[20]            
0          0          0          ECC_irq_en[19]            
0          0          0          ECC_irq_en[18]            
0          0          0          ECC_irq_en[17]            
0          0          0          ECC_irq_en[16]            
0          0          0          ECC_irq_en[15]            
0          0          0          ECC_irq_en[14]            
0          0          0          ECC_irq_en[13]            
0          0          0          ECC_irq_en[12]            
0          0          0          ECC_irq_en[11]            
0          0          0          ECC_irq_en[10]            
0          0          0          ECC_irq_en[9]             
0          0          0          ECC_irq_en[8]             
0          0          0          ECC_irq_en[7]             
0          0          0          ECC_irq_en[6]             
0          0          0          ECC_irq_en[5]             
0          0          0          ECC_irq_en[4]             
0          0          0          ECC_irq_en[3]             
0          0          0          ECC_irq_en[2]             
0          0          0          ECC_irq_en[1]             
0          1          0          ECC_irq_en[0]             
1          1          1          rd_en                     
1          1          1          rd_data_i[38]             
1          1          1          rd_data_i[37]             
1          1          1          rd_data_i[36]             
1          1          1          rd_data_i[35]             
1          1          1          rd_data_i[34]             
1          1          1          rd_data_i[33]             
1          1          1          rd_data_i[32]             
1          1          1          rd_data_i[31]             
1          1          1          rd_data_i[30]             
1          1          1          rd_data_i[29]             
1          1          1          rd_data_i[28]             
1          1          1          rd_data_i[27]             
1          1          1          rd_data_i[26]             
1          1          1          rd_data_i[25]             
1          1          1          rd_data_i[24]             
1          1          1          rd_data_i[23]             
1          1          1          rd_data_i[22]             
1          1          1          rd_data_i[21]             
1          1          1          rd_data_i[20]             
1          1          1          rd_data_i[19]             
1          1          1          rd_data_i[18]             
1          1          1          rd_data_i[17]             
1          1          1          rd_data_i[16]             
1          1          1          rd_data_i[15]             
1          1          1          rd_data_i[14]             
1          1          1          rd_data_i[13]             
1          1          1          rd_data_i[12]             
1          1          1          rd_data_i[11]             
1          1          1          rd_data_i[10]             
1          1          1          rd_data_i[9]              
1          1          1          rd_data_i[8]              
1          1          1          rd_data_i[7]              
1          1          1          rd_data_i[6]              
1          1          1          rd_data_i[5]              
1          1          1          rd_data_i[4]              
1          1          1          rd_data_i[3]              
1          1          1          rd_data_i[2]              
1          1          1          rd_data_i[1]              
1          1          1          rd_data_i[0]              
0          0          0          parity_rd_in[6]           
1          1          1          parity_rd_in[5]           
1          1          1          parity_rd_in[4]           
1          1          1          parity_rd_in[3]           
1          1          1          parity_rd_in[2]           
1          1          1          parity_rd_in[1]           
1          1          1          parity_rd_in[0]           
1          1          1          rd_data_o[31]             
1          1          1          rd_data_o[30]             
1          1          1          rd_data_o[29]             
1          1          1          rd_data_o[28]             
1          1          1          rd_data_o[27]             
1          1          1          rd_data_o[26]             
1          1          1          rd_data_o[25]             
1          1          1          rd_data_o[24]             
1          1          1          rd_data_o[23]             
1          1          1          rd_data_o[22]             
1          1          1          rd_data_o[21]             
1          1          1          rd_data_o[20]             
1          1          1          rd_data_o[19]             
1          1          1          rd_data_o[18]             
1          1          1          rd_data_o[17]             
1          1          1          rd_data_o[16]             
1          1          1          rd_data_o[15]             
1          1          1          rd_data_o[14]             
1          1          1          rd_data_o[13]             
1          1          1          rd_data_o[12]             
1          1          1          rd_data_o[11]             
1          1          1          rd_data_o[10]             
1          1          1          rd_data_o[9]              
1          1          1          rd_data_o[8]              
1          1          1          rd_data_o[7]              
1          1          1          rd_data_o[6]              
1          1          1          rd_data_o[5]              
1          1          1          rd_data_o[4]              
1          1          1          rd_data_o[3]              
1          1          1          rd_data_o[2]              
1          1          1          rd_data_o[1]              
1          1          1          rd_data_o[0]              
0          0          0          data_valid                
0          0          0          error_type[31]            
0          0          0          error_type[30]            
0          0          0          error_type[29]            
0          0          0          error_type[28]            
0          0          0          error_type[27]            
0          0          0          error_type[26]            
0          0          0          error_type[25]            
0          0          0          error_type[24]            
0          0          0          error_type[23]            
0          0          0          error_type[22]            
0          0          0          error_type[21]            
0          0          0          error_type[20]            
0          0          0          error_type[19]            
0          0          0          error_type[18]            
0          0          0          error_type[17]            
0          0          0          error_type[16]            
0          0          0          error_type[15]            
0          0          0          error_type[14]            
0          0          0          error_type[13]            
0          0          0          error_type[12]            
0          0          0          error_type[11]            
0          0          0          error_type[10]            
0          0          0          error_type[9]             
0          0          0          error_type[8]             
0          0          0          error_type[7]             
0          0          0          error_type[6]             
0          0          0          error_type[5]             
0          0          0          error_type[4]             
0          0          0          error_type[3]             
0          0          0          error_type[2]             
1          1          1          error_type[1]             
1          1          1          error_type[0]             
1          1          1          ECC_interrupt             
1          1          1          i_psel                    
1          1          1          i_penable                 
0          0          0          i_paddr[9]                
0          0          0          i_paddr[8]                
0          0          0          i_paddr[7]                
0          0          0          i_paddr[6]                
0          0          0          i_paddr[5]                
0          0          0          i_paddr[4]                
0          0          0          i_paddr[3]                
0          0          0          i_paddr[2]                
0          0          0          i_paddr[1]                
0          0          0          i_paddr[0]                
1          1          1          i_pwrite                  
1          1          1          i_pstrb[3]                
1          1          1          i_pstrb[2]                
1          1          1          i_pstrb[1]                
1          1          1          i_pstrb[0]                
1          1          1          rd_data_r[38]             
1          1          1          rd_data_r[37]             
1          1          1          rd_data_r[36]             
1          1          1          rd_data_r[35]             
1          1          1          rd_data_r[34]             
1          1          1          rd_data_r[33]             
1          1          1          rd_data_r[32]             
1          1          1          rd_data_r[31]             
1          1          1          rd_data_r[30]             
1          1          1          rd_data_r[29]             
1          1          1          rd_data_r[28]             
1          1          1          rd_data_r[27]             
1          1          1          rd_data_r[26]             
1          1          1          rd_data_r[25]             
1          1          1          rd_data_r[24]             
1          1          1          rd_data_r[23]             
1          1          1          rd_data_r[22]             
1          1          1          rd_data_r[21]             
1          1          1          rd_data_r[20]             
1          1          1          rd_data_r[19]             
1          1          1          rd_data_r[18]             
1          1          1          rd_data_r[17]             
1          1          1          rd_data_r[16]             
1          1          1          rd_data_r[15]             
1          1          1          rd_data_r[14]             
1          1          1          rd_data_r[13]             
1          1          1          rd_data_r[12]             
1          1          1          rd_data_r[11]             
1          1          1          rd_data_r[10]             
1          1          1          rd_data_r[9]              
1          1          1          rd_data_r[8]              
1          1          1          rd_data_r[7]              
1          1          1          rd_data_r[6]              
1          1          1          rd_data_r[5]              
1          1          1          rd_data_r[4]              
1          1          1          rd_data_r[3]              
1          1          1          rd_data_r[2]              
1          1          1          rd_data_r[1]              
1          1          1          rd_data_r[0]              
1          1          1          rd_data_r1[38]            
1          1          1          rd_data_r1[37]            
1          1          1          rd_data_r1[36]            
1          1          1          rd_data_r1[35]            
1          1          1          rd_data_r1[34]            
1          1          1          rd_data_r1[33]            
0          0          0          rd_data_r1[32]            
1          1          1          rd_data_r1[31]            
1          1          1          rd_data_r1[30]            
1          1          1          rd_data_r1[29]            
1          1          1          rd_data_r1[28]            
1          1          1          rd_data_r1[27]            
1          1          1          rd_data_r1[26]            
1          1          1          rd_data_r1[25]            
1          1          1          rd_data_r1[24]            
1          1          1          rd_data_r1[23]            
1          1          1          rd_data_r1[22]            
1          1          1          rd_data_r1[21]            
1          1          1          rd_data_r1[20]            
1          1          1          rd_data_r1[19]            
1          1          1          rd_data_r1[18]            
1          1          1          rd_data_r1[17]            
0          0          0          rd_data_r1[16]            
1          1          1          rd_data_r1[15]            
1          1          1          rd_data_r1[14]            
1          1          1          rd_data_r1[13]            
1          1          1          rd_data_r1[12]            
1          1          1          rd_data_r1[11]            
1          1          1          rd_data_r1[10]            
1          1          1          rd_data_r1[9]             
0          0          0          rd_data_r1[8]             
1          1          1          rd_data_r1[7]             
1          1          1          rd_data_r1[6]             
1          1          1          rd_data_r1[5]             
0          0          0          rd_data_r1[4]             
1          1          1          rd_data_r1[3]             
0          0          0          rd_data_r1[2]             
0          0          0          rd_data_r1[1]             
0          0          0          rd_data_r1[0]             
1          1          1          rd_data_r2[38]            
1          1          1          rd_data_r2[37]            
1          1          1          rd_data_r2[36]            
1          1          1          rd_data_r2[35]            
1          1          1          rd_data_r2[34]            
1          1          1          rd_data_r2[33]            
1          1          1          rd_data_r2[32]            
1          1          1          rd_data_r2[31]            
1          1          1          rd_data_r2[30]            
1          1          1          rd_data_r2[29]            
1          1          1          rd_data_r2[28]            
1          1          1          rd_data_r2[27]            
1          1          1          rd_data_r2[26]            
1          1          1          rd_data_r2[25]            
1          1          1          rd_data_r2[24]            
1          1          1          rd_data_r2[23]            
1          1          1          rd_data_r2[22]            
1          1          1          rd_data_r2[21]            
1          1          1          rd_data_r2[20]            
1          1          1          rd_data_r2[19]            
1          1          1          rd_data_r2[18]            
1          1          1          rd_data_r2[17]            
1          1          1          rd_data_r2[16]            
1          1          1          rd_data_r2[15]            
1          1          1          rd_data_r2[14]            
1          1          1          rd_data_r2[13]            
1          1          1          rd_data_r2[12]            
1          1          1          rd_data_r2[11]            
1          1          1          rd_data_r2[10]            
1          1          1          rd_data_r2[9]             
1          1          1          rd_data_r2[8]             
1          1          1          rd_data_r2[7]             
1          1          1          rd_data_r2[6]             
1          1          1          rd_data_r2[5]             
1          1          1          rd_data_r2[4]             
1          1          1          rd_data_r2[3]             
1          1          1          rd_data_r2[2]             
1          1          1          rd_data_r2[1]             
1          1          1          rd_data_r2[0]             
1          1          1          rd_data_r3[31]            
1          1          1          rd_data_r3[30]            
1          1          1          rd_data_r3[29]            
1          1          1          rd_data_r3[28]            
1          1          1          rd_data_r3[27]            
1          1          1          rd_data_r3[26]            
1          1          1          rd_data_r3[25]            
1          1          1          rd_data_r3[24]            
1          1          1          rd_data_r3[23]            
1          1          1          rd_data_r3[22]            
1          1          1          rd_data_r3[21]            
1          1          1          rd_data_r3[20]            
1          1          1          rd_data_r3[19]            
1          1          1          rd_data_r3[18]            
1          1          1          rd_data_r3[17]            
1          1          1          rd_data_r3[16]            
1          1          1          rd_data_r3[15]            
1          1          1          rd_data_r3[14]            
1          1          1          rd_data_r3[13]            
1          1          1          rd_data_r3[12]            
1          1          1          rd_data_r3[11]            
1          1          1          rd_data_r3[10]            
1          1          1          rd_data_r3[9]             
1          1          1          rd_data_r3[8]             
1          1          1          rd_data_r3[7]             
1          1          1          rd_data_r3[6]             
1          1          1          rd_data_r3[5]             
1          1          1          rd_data_r3[4]             
1          1          1          rd_data_r3[3]             
1          1          1          rd_data_r3[2]             
1          1          1          rd_data_r3[1]             
1          1          1          rd_data_r3[0]             
0          0          0          bit_position[5]           
1          1          1          bit_position[4]           
1          1          1          bit_position[3]           
1          1          1          bit_position[2]           
0          0          0          bit_position[1]           
1          1          1          bit_position[0]           
1          1          1          bit_swap_en               
0          0          0          mask[38]                  
0          0          0          mask[37]                  
0          0          0          mask[36]                  
0          0          0          mask[35]                  
0          0          0          mask[34]                  
0          0          0          mask[33]                  
0          0          0          mask[32]                  
0          0          0          mask[31]                  
0          0          0          mask[30]                  
0          0          0          mask[29]                  
0          0          0          mask[28]                  
0          0          0          mask[27]                  
0          0          0          mask[26]                  
0          0          0          mask[25]                  
0          0          0          mask[24]                  
0          0          0          mask[23]                  
0          0          0          mask[22]                  
1          1          1          mask[21]                  
0          0          0          mask[20]                  
0          0          0          mask[19]                  
0          0          0          mask[18]                  
0          0          0          mask[17]                  
0          0          0          mask[16]                  
0          0          0          mask[15]                  
0          0          0          mask[14]                  
1          1          1          mask[13]                  
0          0          0          mask[12]                  
0          0          0          mask[11]                  
0          0          0          mask[10]                  
0          0          0          mask[9]                   
0          0          0          mask[8]                   
0          0          0          mask[7]                   
0          0          0          mask[6]                   
0          0          0          mask[5]                   
0          0          0          mask[4]                   
0          0          0          mask[3]                   
0          0          0          mask[2]                   
0          0          0          mask[1]                   
1          1          1          mask[0]                   

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst
Type name: CSR_registers
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/MC_CSR_reg.sv
Number of covered signal bits: 29 of 938
Number of uncovered signal bits: 909 of 938
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 14 of 938
Number of signal bits partially toggled(fall): 0 of 938

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_psel                    
1          1          1          i_penable                 
0          0          0          i_paddr[9]                
0          0          0          i_paddr[8]                
0          0          0          i_paddr[7]                
0          0          0          i_paddr[6]                
0          0          0          i_paddr[5]                
0          0          0          i_paddr[4]                
1          1          1          i_paddr[3]                
1          1          1          i_paddr[2]                
0          0          0          i_paddr[1]                
0          0          0          i_paddr[0]                
0          0          0          i_pprot[2]                
0          0          0          i_pprot[1]                
0          0          0          i_pprot[0]                
1          1          1          i_pwrite                  
1          1          1          i_pstrb[3]                
1          1          1          i_pstrb[2]                
1          1          1          i_pstrb[1]                
1          1          1          i_pstrb[0]                
0          0          0          i_pwdata[31]              
0          0          0          i_pwdata[30]              
0          0          0          i_pwdata[29]              
0          0          0          i_pwdata[28]              
0          0          0          i_pwdata[27]              
0          0          0          i_pwdata[26]              
0          0          0          i_pwdata[25]              
0          0          0          i_pwdata[24]              
0          0          0          i_pwdata[23]              
0          0          0          i_pwdata[22]              
0          0          0          i_pwdata[21]              
0          0          0          i_pwdata[20]              
0          0          0          i_pwdata[19]              
0          0          0          i_pwdata[18]              
0          0          0          i_pwdata[17]              
0          0          0          i_pwdata[16]              
0          0          0          i_pwdata[15]              
0          0          0          i_pwdata[14]              
0          0          0          i_pwdata[13]              
0          0          0          i_pwdata[12]              
0          0          0          i_pwdata[11]              
0          0          0          i_pwdata[10]              
0          0          0          i_pwdata[9]               
0          0          0          i_pwdata[8]               
0          0          0          i_pwdata[7]               
0          0          0          i_pwdata[6]               
0          0          0          i_pwdata[5]               
0          0          0          i_pwdata[4]               
0          0          0          i_pwdata[3]               
0          0          0          i_pwdata[2]               
1          1          1          i_pwdata[1]               
1          1          1          i_pwdata[0]               
1          1          1          o_pready                  
0          0          0          o_prdata[31]              
0          0          0          o_prdata[30]              
0          0          0          o_prdata[29]              
0          0          0          o_prdata[28]              
0          0          0          o_prdata[27]              
0          0          0          o_prdata[26]              
0          0          0          o_prdata[25]              
0          0          0          o_prdata[24]              
0          0          0          o_prdata[23]              
0          0          0          o_prdata[22]              
0          0          0          o_prdata[21]              
0          0          0          o_prdata[20]              
0          0          0          o_prdata[19]              
0          0          0          o_prdata[18]              
0          0          0          o_prdata[17]              
0          0          0          o_prdata[16]              
0          0          0          o_prdata[15]              
0          0          0          o_prdata[14]              
0          0          0          o_prdata[13]              
0          0          0          o_prdata[12]              
0          0          0          o_prdata[11]              
0          0          0          o_prdata[10]              
0          0          0          o_prdata[9]               
0          0          0          o_prdata[8]               
0          0          0          o_prdata[7]               
0          0          0          o_prdata[6]               
0          0          0          o_prdata[5]               
0          0          0          o_prdata[4]               
0          0          0          o_prdata[3]               
0          0          0          o_prdata[2]               
0          1          0          o_prdata[1]               
0          0          0          o_prdata[0]               
0          0          0          o_pslverr                 
0          0          0          i_ECC_STAUS_REG_ECC_STATUS_clear 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[31] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[30] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[29] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[28] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[27] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[26] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[25] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[24] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[23] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[22] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[21] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[20] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[19] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[18] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[17] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[16] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[15] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[14] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[13] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[12] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[11] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[10] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[9] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[8] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[7] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[6] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[5] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[4] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[3] 
0          0          0          o_ECC_STAUS_REG_ECC_STATUS[2] 
0          1          0          o_ECC_STAUS_REG_ECC_STATUS[1] 
0          1          0          o_ECC_STAUS_REG_ECC_STATUS[0] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[31] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[30] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[29] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[28] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[27] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[26] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[25] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[24] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[23] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[22] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[21] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[20] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[19] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[18] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[17] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[16] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[15] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[14] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[13] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[12] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[11] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[10] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[9] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[8] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[7] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[6] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[5] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[4] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[3] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[2] 
0          0          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[1] 
0          1          0          o_ECC_EN_IRQ_REG_ECC_EN_IRQ_REG[0] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[31] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[30] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[29] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[28] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[27] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[26] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[25] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[24] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[23] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[22] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[21] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[20] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[19] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[18] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[17] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[16] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[15] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[14] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[13] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[12] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[11] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[10] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[9] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[8] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[7] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[6] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[5] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[4] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[3] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[2] 
0          0          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[1] 
0          1          0          o_ECC_ONOFF_REG_ECC_ONOFF_REG[0] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[31] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[30] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[29] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[28] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[27] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[26] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[25] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[24] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[23] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[22] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[21] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[20] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[19] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[18] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[17] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[16] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[15] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[14] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[13] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[12] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[11] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[10] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[9] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[8] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[7] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[6] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[5] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[4] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[3] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[2] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[1] 
0          0          0          o_CE_CNT_REG_CE_CNT_REG[0] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[31] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[30] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[29] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[28] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[27] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[26] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[25] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[24] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[23] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[22] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[21] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[20] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[19] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[18] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[17] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[16] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[15] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[14] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[13] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[12] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[11] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[10] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[9] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[8] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[7] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[6] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[5] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[4] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[3] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[2] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[1] 
0          0          0          i_CE_FFD_REG_CE_FFD_REG[0] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[31] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[30] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[29] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[28] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[27] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[26] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[25] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[24] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[23] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[22] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[21] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[20] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[19] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[18] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[17] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[16] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[15] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[14] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[13] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[12] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[11] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[10] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[9] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[8] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[7] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[6] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[5] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[4] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[3] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[2] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[1] 
0          0          0          i_CE_FFE_REG_CE_FFE_REG[0] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[31] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[30] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[29] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[28] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[27] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[26] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[25] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[24] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[23] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[22] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[21] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[20] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[19] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[18] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[17] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[16] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[15] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[14] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[13] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[12] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[11] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[10] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[9] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[8] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[7] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[6] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[5] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[4] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[3] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[2] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[1] 
0          0          0          i_UE_FFE_REG_UE_FFE_REG[0] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[31] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[30] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[29] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[28] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[27] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[26] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[25] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[24] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[23] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[22] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[21] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[20] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[19] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[18] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[17] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[16] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[15] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[14] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[13] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[12] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[11] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[10] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[9] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[8] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[7] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[6] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[5] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[4] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[3] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[2] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[1] 
0          0          0          i_UE_FFD_REG_UE_FFD_REG[0] 
1          1          1          w_register_valid          
0          0          0          w_register_access[1]      
1          1          1          w_register_access[0]      
0          0          0          w_register_address[9]     
0          0          0          w_register_address[8]     
0          0          0          w_register_address[7]     
0          0          0          w_register_address[6]     
0          0          0          w_register_address[5]     
0          0          0          w_register_address[4]     
1          1          1          w_register_address[3]     
1          1          1          w_register_address[2]     
0          0          0          w_register_address[1]     
0          0          0          w_register_address[0]     
0          0          0          w_register_write_data[31] 
0          0          0          w_register_write_data[30] 
0          0          0          w_register_write_data[29] 
0          0          0          w_register_write_data[28] 
0          0          0          w_register_write_data[27] 
0          0          0          w_register_write_data[26] 
0          0          0          w_register_write_data[25] 
0          0          0          w_register_write_data[24] 
0          0          0          w_register_write_data[23] 
0          0          0          w_register_write_data[22] 
0          0          0          w_register_write_data[21] 
0          0          0          w_register_write_data[20] 
0          0          0          w_register_write_data[19] 
0          0          0          w_register_write_data[18] 
0          0          0          w_register_write_data[17] 
0          0          0          w_register_write_data[16] 
0          0          0          w_register_write_data[15] 
0          0          0          w_register_write_data[14] 
0          0          0          w_register_write_data[13] 
0          0          0          w_register_write_data[12] 
0          0          0          w_register_write_data[11] 
0          0          0          w_register_write_data[10] 
0          0          0          w_register_write_data[9]  
0          0          0          w_register_write_data[8]  
0          0          0          w_register_write_data[7]  
0          0          0          w_register_write_data[6]  
0          0          0          w_register_write_data[5]  
0          0          0          w_register_write_data[4]  
0          0          0          w_register_write_data[3]  
0          0          0          w_register_write_data[2]  
1          1          1          w_register_write_data[1]  
1          1          1          w_register_write_data[0]  
1          1          1          w_register_strobe[3]      
1          1          1          w_register_strobe[2]      
1          1          1          w_register_strobe[1]      
1          1          1          w_register_strobe[0]      
0          0          0          w_register_active[7]      
0          0          0          w_register_active[6]      
0          0          0          w_register_active[5]      
0          0          0          w_register_active[4]      
0          0          0          w_register_active[3]      
1          1          1          w_register_active[2]      
1          1          1          w_register_active[1]      
1          1          1          w_register_active[0]      
0          0          0          w_register_ready[7]       
0          0          0          w_register_ready[6]       
0          0          0          w_register_ready[5]       
0          0          0          w_register_ready[4]       
0          0          0          w_register_ready[3]       
1          1          1          w_register_ready[2]       
1          1          1          w_register_ready[1]       
1          1          1          w_register_ready[0]       
0          0          0          w_register_status[15]     
0          0          0          w_register_status[14]     
0          0          0          w_register_status[13]     
0          0          0          w_register_status[12]     
0          0          0          w_register_status[11]     
0          0          0          w_register_status[10]     
0          0          0          w_register_status[9]      
0          0          0          w_register_status[8]      
0          0          0          w_register_status[7]      
0          0          0          w_register_status[6]      
0          0          0          w_register_status[5]      
0          0          0          w_register_status[4]      
0          0          0          w_register_status[3]      
0          0          0          w_register_status[2]      
0          0          0          w_register_status[1]      
0          0          0          w_register_status[0]      
0          0          0          w_register_read_data[255] 
0          0          0          w_register_read_data[254] 
0          0          0          w_register_read_data[253] 
0          0          0          w_register_read_data[252] 
0          0          0          w_register_read_data[251] 
0          0          0          w_register_read_data[250] 
0          0          0          w_register_read_data[249] 
0          0          0          w_register_read_data[248] 
0          0          0          w_register_read_data[247] 
0          0          0          w_register_read_data[246] 
0          0          0          w_register_read_data[245] 
0          0          0          w_register_read_data[244] 
0          0          0          w_register_read_data[243] 
0          0          0          w_register_read_data[242] 
0          0          0          w_register_read_data[241] 
0          0          0          w_register_read_data[240] 
0          0          0          w_register_read_data[239] 
0          0          0          w_register_read_data[238] 
0          0          0          w_register_read_data[237] 
0          0          0          w_register_read_data[236] 
0          0          0          w_register_read_data[235] 
0          0          0          w_register_read_data[234] 
0          0          0          w_register_read_data[233] 
0          0          0          w_register_read_data[232] 
0          0          0          w_register_read_data[231] 
0          0          0          w_register_read_data[230] 
0          0          0          w_register_read_data[229] 
0          0          0          w_register_read_data[228] 
0          0          0          w_register_read_data[227] 
0          0          0          w_register_read_data[226] 
0          0          0          w_register_read_data[225] 
0          0          0          w_register_read_data[224] 
0          0          0          w_register_read_data[223] 
0          0          0          w_register_read_data[222] 
0          0          0          w_register_read_data[221] 
0          0          0          w_register_read_data[220] 
0          0          0          w_register_read_data[219] 
0          0          0          w_register_read_data[218] 
0          0          0          w_register_read_data[217] 
0          0          0          w_register_read_data[216] 
0          0          0          w_register_read_data[215] 
0          0          0          w_register_read_data[214] 
0          0          0          w_register_read_data[213] 
0          0          0          w_register_read_data[212] 
0          0          0          w_register_read_data[211] 
0          0          0          w_register_read_data[210] 
0          0          0          w_register_read_data[209] 
0          0          0          w_register_read_data[208] 
0          0          0          w_register_read_data[207] 
0          0          0          w_register_read_data[206] 
0          0          0          w_register_read_data[205] 
0          0          0          w_register_read_data[204] 
0          0          0          w_register_read_data[203] 
0          0          0          w_register_read_data[202] 
0          0          0          w_register_read_data[201] 
0          0          0          w_register_read_data[200] 
0          0          0          w_register_read_data[199] 
0          0          0          w_register_read_data[198] 
0          0          0          w_register_read_data[197] 
0          0          0          w_register_read_data[196] 
0          0          0          w_register_read_data[195] 
0          0          0          w_register_read_data[194] 
0          0          0          w_register_read_data[193] 
0          0          0          w_register_read_data[192] 
0          0          0          w_register_read_data[191] 
0          0          0          w_register_read_data[190] 
0          0          0          w_register_read_data[189] 
0          0          0          w_register_read_data[188] 
0          0          0          w_register_read_data[187] 
0          0          0          w_register_read_data[186] 
0          0          0          w_register_read_data[185] 
0          0          0          w_register_read_data[184] 
0          0          0          w_register_read_data[183] 
0          0          0          w_register_read_data[182] 
0          0          0          w_register_read_data[181] 
0          0          0          w_register_read_data[180] 
0          0          0          w_register_read_data[179] 
0          0          0          w_register_read_data[178] 
0          0          0          w_register_read_data[177] 
0          0          0          w_register_read_data[176] 
0          0          0          w_register_read_data[175] 
0          0          0          w_register_read_data[174] 
0          0          0          w_register_read_data[173] 
0          0          0          w_register_read_data[172] 
0          0          0          w_register_read_data[171] 
0          0          0          w_register_read_data[170] 
0          0          0          w_register_read_data[169] 
0          0          0          w_register_read_data[168] 
0          0          0          w_register_read_data[167] 
0          0          0          w_register_read_data[166] 
0          0          0          w_register_read_data[165] 
0          0          0          w_register_read_data[164] 
0          0          0          w_register_read_data[163] 
0          0          0          w_register_read_data[162] 
0          0          0          w_register_read_data[161] 
0          0          0          w_register_read_data[160] 
0          0          0          w_register_read_data[159] 
0          0          0          w_register_read_data[158] 
0          0          0          w_register_read_data[157] 
0          0          0          w_register_read_data[156] 
0          0          0          w_register_read_data[155] 
0          0          0          w_register_read_data[154] 
0          0          0          w_register_read_data[153] 
0          0          0          w_register_read_data[152] 
0          0          0          w_register_read_data[151] 
0          0          0          w_register_read_data[150] 
0          0          0          w_register_read_data[149] 
0          0          0          w_register_read_data[148] 
0          0          0          w_register_read_data[147] 
0          0          0          w_register_read_data[146] 
0          0          0          w_register_read_data[145] 
0          0          0          w_register_read_data[144] 
0          0          0          w_register_read_data[143] 
0          0          0          w_register_read_data[142] 
0          0          0          w_register_read_data[141] 
0          0          0          w_register_read_data[140] 
0          0          0          w_register_read_data[139] 
0          0          0          w_register_read_data[138] 
0          0          0          w_register_read_data[137] 
0          0          0          w_register_read_data[136] 
0          0          0          w_register_read_data[135] 
0          0          0          w_register_read_data[134] 
0          0          0          w_register_read_data[133] 
0          0          0          w_register_read_data[132] 
0          0          0          w_register_read_data[131] 
0          0          0          w_register_read_data[130] 
0          0          0          w_register_read_data[129] 
0          0          0          w_register_read_data[128] 
0          0          0          w_register_read_data[127] 
0          0          0          w_register_read_data[126] 
0          0          0          w_register_read_data[125] 
0          0          0          w_register_read_data[124] 
0          0          0          w_register_read_data[123] 
0          0          0          w_register_read_data[122] 
0          0          0          w_register_read_data[121] 
0          0          0          w_register_read_data[120] 
0          0          0          w_register_read_data[119] 
0          0          0          w_register_read_data[118] 
0          0          0          w_register_read_data[117] 
0          0          0          w_register_read_data[116] 
0          0          0          w_register_read_data[115] 
0          0          0          w_register_read_data[114] 
0          0          0          w_register_read_data[113] 
0          0          0          w_register_read_data[112] 
0          0          0          w_register_read_data[111] 
0          0          0          w_register_read_data[110] 
0          0          0          w_register_read_data[109] 
0          0          0          w_register_read_data[108] 
0          0          0          w_register_read_data[107] 
0          0          0          w_register_read_data[106] 
0          0          0          w_register_read_data[105] 
0          0          0          w_register_read_data[104] 
0          0          0          w_register_read_data[103] 
0          0          0          w_register_read_data[102] 
0          0          0          w_register_read_data[101] 
0          0          0          w_register_read_data[100] 
0          0          0          w_register_read_data[99]  
0          0          0          w_register_read_data[98]  
0          0          0          w_register_read_data[97]  
0          0          0          w_register_read_data[96]  
0          0          0          w_register_read_data[95]  
0          0          0          w_register_read_data[94]  
0          0          0          w_register_read_data[93]  
0          0          0          w_register_read_data[92]  
0          0          0          w_register_read_data[91]  
0          0          0          w_register_read_data[90]  
0          0          0          w_register_read_data[89]  
0          0          0          w_register_read_data[88]  
0          0          0          w_register_read_data[87]  
0          0          0          w_register_read_data[86]  
0          0          0          w_register_read_data[85]  
0          0          0          w_register_read_data[84]  
0          0          0          w_register_read_data[83]  
0          0          0          w_register_read_data[82]  
0          0          0          w_register_read_data[81]  
0          0          0          w_register_read_data[80]  
0          0          0          w_register_read_data[79]  
0          0          0          w_register_read_data[78]  
0          0          0          w_register_read_data[77]  
0          0          0          w_register_read_data[76]  
0          0          0          w_register_read_data[75]  
0          0          0          w_register_read_data[74]  
0          0          0          w_register_read_data[73]  
0          0          0          w_register_read_data[72]  
0          0          0          w_register_read_data[71]  
0          0          0          w_register_read_data[70]  
0          0          0          w_register_read_data[69]  
0          0          0          w_register_read_data[68]  
0          0          0          w_register_read_data[67]  
0          0          0          w_register_read_data[66]  
0          0          0          w_register_read_data[65]  
0          1          0          w_register_read_data[64]  
0          0          0          w_register_read_data[63]  
0          0          0          w_register_read_data[62]  
0          0          0          w_register_read_data[61]  
0          0          0          w_register_read_data[60]  
0          0          0          w_register_read_data[59]  
0          0          0          w_register_read_data[58]  
0          0          0          w_register_read_data[57]  
0          0          0          w_register_read_data[56]  
0          0          0          w_register_read_data[55]  
0          0          0          w_register_read_data[54]  
0          0          0          w_register_read_data[53]  
0          0          0          w_register_read_data[52]  
0          0          0          w_register_read_data[51]  
0          0          0          w_register_read_data[50]  
0          0          0          w_register_read_data[49]  
0          0          0          w_register_read_data[48]  
0          0          0          w_register_read_data[47]  
0          0          0          w_register_read_data[46]  
0          0          0          w_register_read_data[45]  
0          0          0          w_register_read_data[44]  
0          0          0          w_register_read_data[43]  
0          0          0          w_register_read_data[42]  
0          0          0          w_register_read_data[41]  
0          0          0          w_register_read_data[40]  
0          0          0          w_register_read_data[39]  
0          0          0          w_register_read_data[38]  
0          0          0          w_register_read_data[37]  
0          0          0          w_register_read_data[36]  
0          0          0          w_register_read_data[35]  
0          0          0          w_register_read_data[34]  
0          0          0          w_register_read_data[33]  
0          1          0          w_register_read_data[32]  
0          0          0          w_register_read_data[31]  
0          0          0          w_register_read_data[30]  
0          0          0          w_register_read_data[29]  
0          0          0          w_register_read_data[28]  
0          0          0          w_register_read_data[27]  
0          0          0          w_register_read_data[26]  
0          0          0          w_register_read_data[25]  
0          0          0          w_register_read_data[24]  
0          0          0          w_register_read_data[23]  
0          0          0          w_register_read_data[22]  
0          0          0          w_register_read_data[21]  
0          0          0          w_register_read_data[20]  
0          0          0          w_register_read_data[19]  
0          0          0          w_register_read_data[18]  
0          0          0          w_register_read_data[17]  
0          0          0          w_register_read_data[16]  
0          0          0          w_register_read_data[15]  
0          0          0          w_register_read_data[14]  
0          0          0          w_register_read_data[13]  
0          0          0          w_register_read_data[12]  
0          0          0          w_register_read_data[11]  
0          0          0          w_register_read_data[10]  
0          0          0          w_register_read_data[9]   
0          0          0          w_register_read_data[8]   
0          0          0          w_register_read_data[7]   
0          0          0          w_register_read_data[6]   
0          0          0          w_register_read_data[5]   
0          0          0          w_register_read_data[4]   
0          0          0          w_register_read_data[3]   
0          0          0          w_register_read_data[2]   
0          1          0          w_register_read_data[1]   
0          1          0          w_register_read_data[0]   
0          0          0          w_register_value[255]     
0          0          0          w_register_value[254]     
0          0          0          w_register_value[253]     
0          0          0          w_register_value[252]     
0          0          0          w_register_value[251]     
0          0          0          w_register_value[250]     
0          0          0          w_register_value[249]     
0          0          0          w_register_value[248]     
0          0          0          w_register_value[247]     
0          0          0          w_register_value[246]     
0          0          0          w_register_value[245]     
0          0          0          w_register_value[244]     
0          0          0          w_register_value[243]     
0          0          0          w_register_value[242]     
0          0          0          w_register_value[241]     
0          0          0          w_register_value[240]     
0          0          0          w_register_value[239]     
0          0          0          w_register_value[238]     
0          0          0          w_register_value[237]     
0          0          0          w_register_value[236]     
0          0          0          w_register_value[235]     
0          0          0          w_register_value[234]     
0          0          0          w_register_value[233]     
0          0          0          w_register_value[232]     
0          0          0          w_register_value[231]     
0          0          0          w_register_value[230]     
0          0          0          w_register_value[229]     
0          0          0          w_register_value[228]     
0          0          0          w_register_value[227]     
0          0          0          w_register_value[226]     
0          0          0          w_register_value[225]     
0          0          0          w_register_value[224]     
0          0          0          w_register_value[223]     
0          0          0          w_register_value[222]     
0          0          0          w_register_value[221]     
0          0          0          w_register_value[220]     
0          0          0          w_register_value[219]     
0          0          0          w_register_value[218]     
0          0          0          w_register_value[217]     
0          0          0          w_register_value[216]     
0          0          0          w_register_value[215]     
0          0          0          w_register_value[214]     
0          0          0          w_register_value[213]     
0          0          0          w_register_value[212]     
0          0          0          w_register_value[211]     
0          0          0          w_register_value[210]     
0          0          0          w_register_value[209]     
0          0          0          w_register_value[208]     
0          0          0          w_register_value[207]     
0          0          0          w_register_value[206]     
0          0          0          w_register_value[205]     
0          0          0          w_register_value[204]     
0          0          0          w_register_value[203]     
0          0          0          w_register_value[202]     
0          0          0          w_register_value[201]     
0          0          0          w_register_value[200]     
0          0          0          w_register_value[199]     
0          0          0          w_register_value[198]     
0          0          0          w_register_value[197]     
0          0          0          w_register_value[196]     
0          0          0          w_register_value[195]     
0          0          0          w_register_value[194]     
0          0          0          w_register_value[193]     
0          0          0          w_register_value[192]     
0          0          0          w_register_value[191]     
0          0          0          w_register_value[190]     
0          0          0          w_register_value[189]     
0          0          0          w_register_value[188]     
0          0          0          w_register_value[187]     
0          0          0          w_register_value[186]     
0          0          0          w_register_value[185]     
0          0          0          w_register_value[184]     
0          0          0          w_register_value[183]     
0          0          0          w_register_value[182]     
0          0          0          w_register_value[181]     
0          0          0          w_register_value[180]     
0          0          0          w_register_value[179]     
0          0          0          w_register_value[178]     
0          0          0          w_register_value[177]     
0          0          0          w_register_value[176]     
0          0          0          w_register_value[175]     
0          0          0          w_register_value[174]     
0          0          0          w_register_value[173]     
0          0          0          w_register_value[172]     
0          0          0          w_register_value[171]     
0          0          0          w_register_value[170]     
0          0          0          w_register_value[169]     
0          0          0          w_register_value[168]     
0          0          0          w_register_value[167]     
0          0          0          w_register_value[166]     
0          0          0          w_register_value[165]     
0          0          0          w_register_value[164]     
0          0          0          w_register_value[163]     
0          0          0          w_register_value[162]     
0          0          0          w_register_value[161]     
0          0          0          w_register_value[160]     
0          0          0          w_register_value[159]     
0          0          0          w_register_value[158]     
0          0          0          w_register_value[157]     
0          0          0          w_register_value[156]     
0          0          0          w_register_value[155]     
0          0          0          w_register_value[154]     
0          0          0          w_register_value[153]     
0          0          0          w_register_value[152]     
0          0          0          w_register_value[151]     
0          0          0          w_register_value[150]     
0          0          0          w_register_value[149]     
0          0          0          w_register_value[148]     
0          0          0          w_register_value[147]     
0          0          0          w_register_value[146]     
0          0          0          w_register_value[145]     
0          0          0          w_register_value[144]     
0          0          0          w_register_value[143]     
0          0          0          w_register_value[142]     
0          0          0          w_register_value[141]     
0          0          0          w_register_value[140]     
0          0          0          w_register_value[139]     
0          0          0          w_register_value[138]     
0          0          0          w_register_value[137]     
0          0          0          w_register_value[136]     
0          0          0          w_register_value[135]     
0          0          0          w_register_value[134]     
0          0          0          w_register_value[133]     
0          0          0          w_register_value[132]     
0          0          0          w_register_value[131]     
0          0          0          w_register_value[130]     
0          0          0          w_register_value[129]     
0          0          0          w_register_value[128]     
0          0          0          w_register_value[127]     
0          0          0          w_register_value[126]     
0          0          0          w_register_value[125]     
0          0          0          w_register_value[124]     
0          0          0          w_register_value[123]     
0          0          0          w_register_value[122]     
0          0          0          w_register_value[121]     
0          0          0          w_register_value[120]     
0          0          0          w_register_value[119]     
0          0          0          w_register_value[118]     
0          0          0          w_register_value[117]     
0          0          0          w_register_value[116]     
0          0          0          w_register_value[115]     
0          0          0          w_register_value[114]     
0          0          0          w_register_value[113]     
0          0          0          w_register_value[112]     
0          0          0          w_register_value[111]     
0          0          0          w_register_value[110]     
0          0          0          w_register_value[109]     
0          0          0          w_register_value[108]     
0          0          0          w_register_value[107]     
0          0          0          w_register_value[106]     
0          0          0          w_register_value[105]     
0          0          0          w_register_value[104]     
0          0          0          w_register_value[103]     
0          0          0          w_register_value[102]     
0          0          0          w_register_value[101]     
0          0          0          w_register_value[100]     
0          0          0          w_register_value[99]      
0          0          0          w_register_value[98]      
0          0          0          w_register_value[97]      
0          0          0          w_register_value[96]      
0          0          0          w_register_value[95]      
0          0          0          w_register_value[94]      
0          0          0          w_register_value[93]      
0          0          0          w_register_value[92]      
0          0          0          w_register_value[91]      
0          0          0          w_register_value[90]      
0          0          0          w_register_value[89]      
0          0          0          w_register_value[88]      
0          0          0          w_register_value[87]      
0          0          0          w_register_value[86]      
0          0          0          w_register_value[85]      
0          0          0          w_register_value[84]      
0          0          0          w_register_value[83]      
0          0          0          w_register_value[82]      
0          0          0          w_register_value[81]      
0          0          0          w_register_value[80]      
0          0          0          w_register_value[79]      
0          0          0          w_register_value[78]      
0          0          0          w_register_value[77]      
0          0          0          w_register_value[76]      
0          0          0          w_register_value[75]      
0          0          0          w_register_value[74]      
0          0          0          w_register_value[73]      
0          0          0          w_register_value[72]      
0          0          0          w_register_value[71]      
0          0          0          w_register_value[70]      
0          0          0          w_register_value[69]      
0          0          0          w_register_value[68]      
0          0          0          w_register_value[67]      
0          0          0          w_register_value[66]      
0          0          0          w_register_value[65]      
0          1          0          w_register_value[64]      
0          0          0          w_register_value[63]      
0          0          0          w_register_value[62]      
0          0          0          w_register_value[61]      
0          0          0          w_register_value[60]      
0          0          0          w_register_value[59]      
0          0          0          w_register_value[58]      
0          0          0          w_register_value[57]      
0          0          0          w_register_value[56]      
0          0          0          w_register_value[55]      
0          0          0          w_register_value[54]      
0          0          0          w_register_value[53]      
0          0          0          w_register_value[52]      
0          0          0          w_register_value[51]      
0          0          0          w_register_value[50]      
0          0          0          w_register_value[49]      
0          0          0          w_register_value[48]      
0          0          0          w_register_value[47]      
0          0          0          w_register_value[46]      
0          0          0          w_register_value[45]      
0          0          0          w_register_value[44]      
0          0          0          w_register_value[43]      
0          0          0          w_register_value[42]      
0          0          0          w_register_value[41]      
0          0          0          w_register_value[40]      
0          0          0          w_register_value[39]      
0          0          0          w_register_value[38]      
0          0          0          w_register_value[37]      
0          0          0          w_register_value[36]      
0          0          0          w_register_value[35]      
0          0          0          w_register_value[34]      
0          0          0          w_register_value[33]      
0          1          0          w_register_value[32]      
0          0          0          w_register_value[31]      
0          0          0          w_register_value[30]      
0          0          0          w_register_value[29]      
0          0          0          w_register_value[28]      
0          0          0          w_register_value[27]      
0          0          0          w_register_value[26]      
0          0          0          w_register_value[25]      
0          0          0          w_register_value[24]      
0          0          0          w_register_value[23]      
0          0          0          w_register_value[22]      
0          0          0          w_register_value[21]      
0          0          0          w_register_value[20]      
0          0          0          w_register_value[19]      
0          0          0          w_register_value[18]      
0          0          0          w_register_value[17]      
0          0          0          w_register_value[16]      
0          0          0          w_register_value[15]      
0          0          0          w_register_value[14]      
0          0          0          w_register_value[13]      
0          0          0          w_register_value[12]      
0          0          0          w_register_value[11]      
0          0          0          w_register_value[10]      
0          0          0          w_register_value[9]       
0          0          0          w_register_value[8]       
0          0          0          w_register_value[7]       
0          0          0          w_register_value[6]       
0          0          0          w_register_value[5]       
0          0          0          w_register_value[4]       
0          0          0          w_register_value[3]       
0          0          0          w_register_value[2]       
0          1          0          w_register_value[1]       
0          1          0          w_register_value[0]       

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter
Type name: rggen_apb_adapter
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_apb_adapter.v
Number of covered signal bits: 41 of 543
Number of uncovered signal bits: 502 of 543
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 8 of 543
Number of signal bits partially toggled(fall): 0 of 543

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_psel                    
1          1          1          i_penable                 
0          0          0          i_paddr[9]                
0          0          0          i_paddr[8]                
0          0          0          i_paddr[7]                
0          0          0          i_paddr[6]                
0          0          0          i_paddr[5]                
0          0          0          i_paddr[4]                
1          1          1          i_paddr[3]                
1          1          1          i_paddr[2]                
0          0          0          i_paddr[1]                
0          0          0          i_paddr[0]                
0          0          0          i_pprot[2]                
0          0          0          i_pprot[1]                
0          0          0          i_pprot[0]                
1          1          1          i_pwrite                  
1          1          1          i_pstrb[3]                
1          1          1          i_pstrb[2]                
1          1          1          i_pstrb[1]                
1          1          1          i_pstrb[0]                
0          0          0          i_pwdata[31]              
0          0          0          i_pwdata[30]              
0          0          0          i_pwdata[29]              
0          0          0          i_pwdata[28]              
0          0          0          i_pwdata[27]              
0          0          0          i_pwdata[26]              
0          0          0          i_pwdata[25]              
0          0          0          i_pwdata[24]              
0          0          0          i_pwdata[23]              
0          0          0          i_pwdata[22]              
0          0          0          i_pwdata[21]              
0          0          0          i_pwdata[20]              
0          0          0          i_pwdata[19]              
0          0          0          i_pwdata[18]              
0          0          0          i_pwdata[17]              
0          0          0          i_pwdata[16]              
0          0          0          i_pwdata[15]              
0          0          0          i_pwdata[14]              
0          0          0          i_pwdata[13]              
0          0          0          i_pwdata[12]              
0          0          0          i_pwdata[11]              
0          0          0          i_pwdata[10]              
0          0          0          i_pwdata[9]               
0          0          0          i_pwdata[8]               
0          0          0          i_pwdata[7]               
0          0          0          i_pwdata[6]               
0          0          0          i_pwdata[5]               
0          0          0          i_pwdata[4]               
0          0          0          i_pwdata[3]               
0          0          0          i_pwdata[2]               
1          1          1          i_pwdata[1]               
1          1          1          i_pwdata[0]               
1          1          1          o_pready                  
0          0          0          o_prdata[31]              
0          0          0          o_prdata[30]              
0          0          0          o_prdata[29]              
0          0          0          o_prdata[28]              
0          0          0          o_prdata[27]              
0          0          0          o_prdata[26]              
0          0          0          o_prdata[25]              
0          0          0          o_prdata[24]              
0          0          0          o_prdata[23]              
0          0          0          o_prdata[22]              
0          0          0          o_prdata[21]              
0          0          0          o_prdata[20]              
0          0          0          o_prdata[19]              
0          0          0          o_prdata[18]              
0          0          0          o_prdata[17]              
0          0          0          o_prdata[16]              
0          0          0          o_prdata[15]              
0          0          0          o_prdata[14]              
0          0          0          o_prdata[13]              
0          0          0          o_prdata[12]              
0          0          0          o_prdata[11]              
0          0          0          o_prdata[10]              
0          0          0          o_prdata[9]               
0          0          0          o_prdata[8]               
0          0          0          o_prdata[7]               
0          0          0          o_prdata[6]               
0          0          0          o_prdata[5]               
0          0          0          o_prdata[4]               
0          0          0          o_prdata[3]               
0          0          0          o_prdata[2]               
0          1          0          o_prdata[1]               
0          0          0          o_prdata[0]               
0          0          0          o_pslverr                 
1          1          1          o_register_valid          
0          0          0          o_register_access[1]      
1          1          1          o_register_access[0]      
0          0          0          o_register_address[9]     
0          0          0          o_register_address[8]     
0          0          0          o_register_address[7]     
0          0          0          o_register_address[6]     
0          0          0          o_register_address[5]     
0          0          0          o_register_address[4]     
1          1          1          o_register_address[3]     
1          1          1          o_register_address[2]     
0          0          0          o_register_address[1]     
0          0          0          o_register_address[0]     
0          0          0          o_register_write_data[31] 
0          0          0          o_register_write_data[30] 
0          0          0          o_register_write_data[29] 
0          0          0          o_register_write_data[28] 
0          0          0          o_register_write_data[27] 
0          0          0          o_register_write_data[26] 
0          0          0          o_register_write_data[25] 
0          0          0          o_register_write_data[24] 
0          0          0          o_register_write_data[23] 
0          0          0          o_register_write_data[22] 
0          0          0          o_register_write_data[21] 
0          0          0          o_register_write_data[20] 
0          0          0          o_register_write_data[19] 
0          0          0          o_register_write_data[18] 
0          0          0          o_register_write_data[17] 
0          0          0          o_register_write_data[16] 
0          0          0          o_register_write_data[15] 
0          0          0          o_register_write_data[14] 
0          0          0          o_register_write_data[13] 
0          0          0          o_register_write_data[12] 
0          0          0          o_register_write_data[11] 
0          0          0          o_register_write_data[10] 
0          0          0          o_register_write_data[9]  
0          0          0          o_register_write_data[8]  
0          0          0          o_register_write_data[7]  
0          0          0          o_register_write_data[6]  
0          0          0          o_register_write_data[5]  
0          0          0          o_register_write_data[4]  
0          0          0          o_register_write_data[3]  
0          0          0          o_register_write_data[2]  
1          1          1          o_register_write_data[1]  
1          1          1          o_register_write_data[0]  
1          1          1          o_register_strobe[3]      
1          1          1          o_register_strobe[2]      
1          1          1          o_register_strobe[1]      
1          1          1          o_register_strobe[0]      
0          0          0          i_register_active[7]      
0          0          0          i_register_active[6]      
0          0          0          i_register_active[5]      
0          0          0          i_register_active[4]      
0          0          0          i_register_active[3]      
1          1          1          i_register_active[2]      
1          1          1          i_register_active[1]      
1          1          1          i_register_active[0]      
0          0          0          i_register_ready[7]       
0          0          0          i_register_ready[6]       
0          0          0          i_register_ready[5]       
0          0          0          i_register_ready[4]       
0          0          0          i_register_ready[3]       
1          1          1          i_register_ready[2]       
1          1          1          i_register_ready[1]       
1          1          1          i_register_ready[0]       
0          0          0          i_register_status[15]     
0          0          0          i_register_status[14]     
0          0          0          i_register_status[13]     
0          0          0          i_register_status[12]     
0          0          0          i_register_status[11]     
0          0          0          i_register_status[10]     
0          0          0          i_register_status[9]      
0          0          0          i_register_status[8]      
0          0          0          i_register_status[7]      
0          0          0          i_register_status[6]      
0          0          0          i_register_status[5]      
0          0          0          i_register_status[4]      
0          0          0          i_register_status[3]      
0          0          0          i_register_status[2]      
0          0          0          i_register_status[1]      
0          0          0          i_register_status[0]      
0          0          0          i_register_read_data[255] 
0          0          0          i_register_read_data[254] 
0          0          0          i_register_read_data[253] 
0          0          0          i_register_read_data[252] 
0          0          0          i_register_read_data[251] 
0          0          0          i_register_read_data[250] 
0          0          0          i_register_read_data[249] 
0          0          0          i_register_read_data[248] 
0          0          0          i_register_read_data[247] 
0          0          0          i_register_read_data[246] 
0          0          0          i_register_read_data[245] 
0          0          0          i_register_read_data[244] 
0          0          0          i_register_read_data[243] 
0          0          0          i_register_read_data[242] 
0          0          0          i_register_read_data[241] 
0          0          0          i_register_read_data[240] 
0          0          0          i_register_read_data[239] 
0          0          0          i_register_read_data[238] 
0          0          0          i_register_read_data[237] 
0          0          0          i_register_read_data[236] 
0          0          0          i_register_read_data[235] 
0          0          0          i_register_read_data[234] 
0          0          0          i_register_read_data[233] 
0          0          0          i_register_read_data[232] 
0          0          0          i_register_read_data[231] 
0          0          0          i_register_read_data[230] 
0          0          0          i_register_read_data[229] 
0          0          0          i_register_read_data[228] 
0          0          0          i_register_read_data[227] 
0          0          0          i_register_read_data[226] 
0          0          0          i_register_read_data[225] 
0          0          0          i_register_read_data[224] 
0          0          0          i_register_read_data[223] 
0          0          0          i_register_read_data[222] 
0          0          0          i_register_read_data[221] 
0          0          0          i_register_read_data[220] 
0          0          0          i_register_read_data[219] 
0          0          0          i_register_read_data[218] 
0          0          0          i_register_read_data[217] 
0          0          0          i_register_read_data[216] 
0          0          0          i_register_read_data[215] 
0          0          0          i_register_read_data[214] 
0          0          0          i_register_read_data[213] 
0          0          0          i_register_read_data[212] 
0          0          0          i_register_read_data[211] 
0          0          0          i_register_read_data[210] 
0          0          0          i_register_read_data[209] 
0          0          0          i_register_read_data[208] 
0          0          0          i_register_read_data[207] 
0          0          0          i_register_read_data[206] 
0          0          0          i_register_read_data[205] 
0          0          0          i_register_read_data[204] 
0          0          0          i_register_read_data[203] 
0          0          0          i_register_read_data[202] 
0          0          0          i_register_read_data[201] 
0          0          0          i_register_read_data[200] 
0          0          0          i_register_read_data[199] 
0          0          0          i_register_read_data[198] 
0          0          0          i_register_read_data[197] 
0          0          0          i_register_read_data[196] 
0          0          0          i_register_read_data[195] 
0          0          0          i_register_read_data[194] 
0          0          0          i_register_read_data[193] 
0          0          0          i_register_read_data[192] 
0          0          0          i_register_read_data[191] 
0          0          0          i_register_read_data[190] 
0          0          0          i_register_read_data[189] 
0          0          0          i_register_read_data[188] 
0          0          0          i_register_read_data[187] 
0          0          0          i_register_read_data[186] 
0          0          0          i_register_read_data[185] 
0          0          0          i_register_read_data[184] 
0          0          0          i_register_read_data[183] 
0          0          0          i_register_read_data[182] 
0          0          0          i_register_read_data[181] 
0          0          0          i_register_read_data[180] 
0          0          0          i_register_read_data[179] 
0          0          0          i_register_read_data[178] 
0          0          0          i_register_read_data[177] 
0          0          0          i_register_read_data[176] 
0          0          0          i_register_read_data[175] 
0          0          0          i_register_read_data[174] 
0          0          0          i_register_read_data[173] 
0          0          0          i_register_read_data[172] 
0          0          0          i_register_read_data[171] 
0          0          0          i_register_read_data[170] 
0          0          0          i_register_read_data[169] 
0          0          0          i_register_read_data[168] 
0          0          0          i_register_read_data[167] 
0          0          0          i_register_read_data[166] 
0          0          0          i_register_read_data[165] 
0          0          0          i_register_read_data[164] 
0          0          0          i_register_read_data[163] 
0          0          0          i_register_read_data[162] 
0          0          0          i_register_read_data[161] 
0          0          0          i_register_read_data[160] 
0          0          0          i_register_read_data[159] 
0          0          0          i_register_read_data[158] 
0          0          0          i_register_read_data[157] 
0          0          0          i_register_read_data[156] 
0          0          0          i_register_read_data[155] 
0          0          0          i_register_read_data[154] 
0          0          0          i_register_read_data[153] 
0          0          0          i_register_read_data[152] 
0          0          0          i_register_read_data[151] 
0          0          0          i_register_read_data[150] 
0          0          0          i_register_read_data[149] 
0          0          0          i_register_read_data[148] 
0          0          0          i_register_read_data[147] 
0          0          0          i_register_read_data[146] 
0          0          0          i_register_read_data[145] 
0          0          0          i_register_read_data[144] 
0          0          0          i_register_read_data[143] 
0          0          0          i_register_read_data[142] 
0          0          0          i_register_read_data[141] 
0          0          0          i_register_read_data[140] 
0          0          0          i_register_read_data[139] 
0          0          0          i_register_read_data[138] 
0          0          0          i_register_read_data[137] 
0          0          0          i_register_read_data[136] 
0          0          0          i_register_read_data[135] 
0          0          0          i_register_read_data[134] 
0          0          0          i_register_read_data[133] 
0          0          0          i_register_read_data[132] 
0          0          0          i_register_read_data[131] 
0          0          0          i_register_read_data[130] 
0          0          0          i_register_read_data[129] 
0          0          0          i_register_read_data[128] 
0          0          0          i_register_read_data[127] 
0          0          0          i_register_read_data[126] 
0          0          0          i_register_read_data[125] 
0          0          0          i_register_read_data[124] 
0          0          0          i_register_read_data[123] 
0          0          0          i_register_read_data[122] 
0          0          0          i_register_read_data[121] 
0          0          0          i_register_read_data[120] 
0          0          0          i_register_read_data[119] 
0          0          0          i_register_read_data[118] 
0          0          0          i_register_read_data[117] 
0          0          0          i_register_read_data[116] 
0          0          0          i_register_read_data[115] 
0          0          0          i_register_read_data[114] 
0          0          0          i_register_read_data[113] 
0          0          0          i_register_read_data[112] 
0          0          0          i_register_read_data[111] 
0          0          0          i_register_read_data[110] 
0          0          0          i_register_read_data[109] 
0          0          0          i_register_read_data[108] 
0          0          0          i_register_read_data[107] 
0          0          0          i_register_read_data[106] 
0          0          0          i_register_read_data[105] 
0          0          0          i_register_read_data[104] 
0          0          0          i_register_read_data[103] 
0          0          0          i_register_read_data[102] 
0          0          0          i_register_read_data[101] 
0          0          0          i_register_read_data[100] 
0          0          0          i_register_read_data[99]  
0          0          0          i_register_read_data[98]  
0          0          0          i_register_read_data[97]  
0          0          0          i_register_read_data[96]  
0          0          0          i_register_read_data[95]  
0          0          0          i_register_read_data[94]  
0          0          0          i_register_read_data[93]  
0          0          0          i_register_read_data[92]  
0          0          0          i_register_read_data[91]  
0          0          0          i_register_read_data[90]  
0          0          0          i_register_read_data[89]  
0          0          0          i_register_read_data[88]  
0          0          0          i_register_read_data[87]  
0          0          0          i_register_read_data[86]  
0          0          0          i_register_read_data[85]  
0          0          0          i_register_read_data[84]  
0          0          0          i_register_read_data[83]  
0          0          0          i_register_read_data[82]  
0          0          0          i_register_read_data[81]  
0          0          0          i_register_read_data[80]  
0          0          0          i_register_read_data[79]  
0          0          0          i_register_read_data[78]  
0          0          0          i_register_read_data[77]  
0          0          0          i_register_read_data[76]  
0          0          0          i_register_read_data[75]  
0          0          0          i_register_read_data[74]  
0          0          0          i_register_read_data[73]  
0          0          0          i_register_read_data[72]  
0          0          0          i_register_read_data[71]  
0          0          0          i_register_read_data[70]  
0          0          0          i_register_read_data[69]  
0          0          0          i_register_read_data[68]  
0          0          0          i_register_read_data[67]  
0          0          0          i_register_read_data[66]  
0          0          0          i_register_read_data[65]  
0          1          0          i_register_read_data[64]  
0          0          0          i_register_read_data[63]  
0          0          0          i_register_read_data[62]  
0          0          0          i_register_read_data[61]  
0          0          0          i_register_read_data[60]  
0          0          0          i_register_read_data[59]  
0          0          0          i_register_read_data[58]  
0          0          0          i_register_read_data[57]  
0          0          0          i_register_read_data[56]  
0          0          0          i_register_read_data[55]  
0          0          0          i_register_read_data[54]  
0          0          0          i_register_read_data[53]  
0          0          0          i_register_read_data[52]  
0          0          0          i_register_read_data[51]  
0          0          0          i_register_read_data[50]  
0          0          0          i_register_read_data[49]  
0          0          0          i_register_read_data[48]  
0          0          0          i_register_read_data[47]  
0          0          0          i_register_read_data[46]  
0          0          0          i_register_read_data[45]  
0          0          0          i_register_read_data[44]  
0          0          0          i_register_read_data[43]  
0          0          0          i_register_read_data[42]  
0          0          0          i_register_read_data[41]  
0          0          0          i_register_read_data[40]  
0          0          0          i_register_read_data[39]  
0          0          0          i_register_read_data[38]  
0          0          0          i_register_read_data[37]  
0          0          0          i_register_read_data[36]  
0          0          0          i_register_read_data[35]  
0          0          0          i_register_read_data[34]  
0          0          0          i_register_read_data[33]  
0          1          0          i_register_read_data[32]  
0          0          0          i_register_read_data[31]  
0          0          0          i_register_read_data[30]  
0          0          0          i_register_read_data[29]  
0          0          0          i_register_read_data[28]  
0          0          0          i_register_read_data[27]  
0          0          0          i_register_read_data[26]  
0          0          0          i_register_read_data[25]  
0          0          0          i_register_read_data[24]  
0          0          0          i_register_read_data[23]  
0          0          0          i_register_read_data[22]  
0          0          0          i_register_read_data[21]  
0          0          0          i_register_read_data[20]  
0          0          0          i_register_read_data[19]  
0          0          0          i_register_read_data[18]  
0          0          0          i_register_read_data[17]  
0          0          0          i_register_read_data[16]  
0          0          0          i_register_read_data[15]  
0          0          0          i_register_read_data[14]  
0          0          0          i_register_read_data[13]  
0          0          0          i_register_read_data[12]  
0          0          0          i_register_read_data[11]  
0          0          0          i_register_read_data[10]  
0          0          0          i_register_read_data[9]   
0          0          0          i_register_read_data[8]   
0          0          0          i_register_read_data[7]   
0          0          0          i_register_read_data[6]   
0          0          0          i_register_read_data[5]   
0          0          0          i_register_read_data[4]   
0          0          0          i_register_read_data[3]   
0          0          0          i_register_read_data[2]   
0          1          0          i_register_read_data[1]   
0          1          0          i_register_read_data[0]   
1          1          1          w_bus_valid               
0          0          0          w_bus_access[1]           
1          1          1          w_bus_access[0]           
0          0          0          w_bus_address[9]          
0          0          0          w_bus_address[8]          
0          0          0          w_bus_address[7]          
0          0          0          w_bus_address[6]          
0          0          0          w_bus_address[5]          
0          0          0          w_bus_address[4]          
1          1          1          w_bus_address[3]          
1          1          1          w_bus_address[2]          
0          0          0          w_bus_address[1]          
0          0          0          w_bus_address[0]          
0          0          0          w_bus_write_data[31]      
0          0          0          w_bus_write_data[30]      
0          0          0          w_bus_write_data[29]      
0          0          0          w_bus_write_data[28]      
0          0          0          w_bus_write_data[27]      
0          0          0          w_bus_write_data[26]      
0          0          0          w_bus_write_data[25]      
0          0          0          w_bus_write_data[24]      
0          0          0          w_bus_write_data[23]      
0          0          0          w_bus_write_data[22]      
0          0          0          w_bus_write_data[21]      
0          0          0          w_bus_write_data[20]      
0          0          0          w_bus_write_data[19]      
0          0          0          w_bus_write_data[18]      
0          0          0          w_bus_write_data[17]      
0          0          0          w_bus_write_data[16]      
0          0          0          w_bus_write_data[15]      
0          0          0          w_bus_write_data[14]      
0          0          0          w_bus_write_data[13]      
0          0          0          w_bus_write_data[12]      
0          0          0          w_bus_write_data[11]      
0          0          0          w_bus_write_data[10]      
0          0          0          w_bus_write_data[9]       
0          0          0          w_bus_write_data[8]       
0          0          0          w_bus_write_data[7]       
0          0          0          w_bus_write_data[6]       
0          0          0          w_bus_write_data[5]       
0          0          0          w_bus_write_data[4]       
0          0          0          w_bus_write_data[3]       
0          0          0          w_bus_write_data[2]       
1          1          1          w_bus_write_data[1]       
1          1          1          w_bus_write_data[0]       
1          1          1          w_bus_strobe[3]           
1          1          1          w_bus_strobe[2]           
1          1          1          w_bus_strobe[1]           
1          1          1          w_bus_strobe[0]           
0          0          0          w_bus_ready               
0          0          0          w_bus_status[1]           
0          0          0          w_bus_status[0]           
0          0          0          w_bus_read_data[31]       
0          0          0          w_bus_read_data[30]       
0          0          0          w_bus_read_data[29]       
0          0          0          w_bus_read_data[28]       
0          0          0          w_bus_read_data[27]       
0          0          0          w_bus_read_data[26]       
0          0          0          w_bus_read_data[25]       
0          0          0          w_bus_read_data[24]       
0          0          0          w_bus_read_data[23]       
0          0          0          w_bus_read_data[22]       
0          0          0          w_bus_read_data[21]       
0          0          0          w_bus_read_data[20]       
0          0          0          w_bus_read_data[19]       
0          0          0          w_bus_read_data[18]       
0          0          0          w_bus_read_data[17]       
0          0          0          w_bus_read_data[16]       
0          0          0          w_bus_read_data[15]       
0          0          0          w_bus_read_data[14]       
0          0          0          w_bus_read_data[13]       
0          0          0          w_bus_read_data[12]       
0          0          0          w_bus_read_data[11]       
0          0          0          w_bus_read_data[10]       
0          0          0          w_bus_read_data[9]        
0          0          0          w_bus_read_data[8]        
0          0          0          w_bus_read_data[7]        
0          0          0          w_bus_read_data[6]        
0          0          0          w_bus_read_data[5]        
0          0          0          w_bus_read_data[4]        
0          0          0          w_bus_read_data[3]        
0          0          0          w_bus_read_data[2]        
0          1          0          w_bus_read_data[1]        
1          1          1          w_bus_read_data[0]        
1          1          1          r_pready                  
0          0          0          r_prdata[31]              
0          0          0          r_prdata[30]              
0          0          0          r_prdata[29]              
0          0          0          r_prdata[28]              
0          0          0          r_prdata[27]              
0          0          0          r_prdata[26]              
0          0          0          r_prdata[25]              
0          0          0          r_prdata[24]              
0          0          0          r_prdata[23]              
0          0          0          r_prdata[22]              
0          0          0          r_prdata[21]              
0          0          0          r_prdata[20]              
0          0          0          r_prdata[19]              
0          0          0          r_prdata[18]              
0          0          0          r_prdata[17]              
0          0          0          r_prdata[16]              
0          0          0          r_prdata[15]              
0          0          0          r_prdata[14]              
0          0          0          r_prdata[13]              
0          0          0          r_prdata[12]              
0          0          0          r_prdata[11]              
0          0          0          r_prdata[10]              
0          0          0          r_prdata[9]               
0          0          0          r_prdata[8]               
0          0          0          r_prdata[7]               
0          0          0          r_prdata[6]               
0          0          0          r_prdata[5]               
0          0          0          r_prdata[4]               
0          0          0          r_prdata[3]               
0          0          0          r_prdata[2]               
0          1          0          r_prdata[1]               
0          0          0          r_prdata[0]               
0          0          0          r_pslverr                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common
Type name: rggen_adapter_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_adapter_common.v
Number of covered signal bits: 29 of 462
Number of uncovered signal bits: 433 of 462
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 7 of 462
Number of signal bits partially toggled(fall): 0 of 462

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_bus_valid               
0          0          0          i_bus_access[1]           
1          1          1          i_bus_access[0]           
0          0          0          i_bus_address[9]          
0          0          0          i_bus_address[8]          
0          0          0          i_bus_address[7]          
0          0          0          i_bus_address[6]          
0          0          0          i_bus_address[5]          
0          0          0          i_bus_address[4]          
1          1          1          i_bus_address[3]          
1          1          1          i_bus_address[2]          
0          0          0          i_bus_address[1]          
0          0          0          i_bus_address[0]          
0          0          0          i_bus_write_data[31]      
0          0          0          i_bus_write_data[30]      
0          0          0          i_bus_write_data[29]      
0          0          0          i_bus_write_data[28]      
0          0          0          i_bus_write_data[27]      
0          0          0          i_bus_write_data[26]      
0          0          0          i_bus_write_data[25]      
0          0          0          i_bus_write_data[24]      
0          0          0          i_bus_write_data[23]      
0          0          0          i_bus_write_data[22]      
0          0          0          i_bus_write_data[21]      
0          0          0          i_bus_write_data[20]      
0          0          0          i_bus_write_data[19]      
0          0          0          i_bus_write_data[18]      
0          0          0          i_bus_write_data[17]      
0          0          0          i_bus_write_data[16]      
0          0          0          i_bus_write_data[15]      
0          0          0          i_bus_write_data[14]      
0          0          0          i_bus_write_data[13]      
0          0          0          i_bus_write_data[12]      
0          0          0          i_bus_write_data[11]      
0          0          0          i_bus_write_data[10]      
0          0          0          i_bus_write_data[9]       
0          0          0          i_bus_write_data[8]       
0          0          0          i_bus_write_data[7]       
0          0          0          i_bus_write_data[6]       
0          0          0          i_bus_write_data[5]       
0          0          0          i_bus_write_data[4]       
0          0          0          i_bus_write_data[3]       
0          0          0          i_bus_write_data[2]       
1          1          1          i_bus_write_data[1]       
1          1          1          i_bus_write_data[0]       
1          1          1          i_bus_strobe[3]           
1          1          1          i_bus_strobe[2]           
1          1          1          i_bus_strobe[1]           
1          1          1          i_bus_strobe[0]           
0          0          0          o_bus_ready               
0          0          0          o_bus_status[1]           
0          0          0          o_bus_status[0]           
0          0          0          o_bus_read_data[31]       
0          0          0          o_bus_read_data[30]       
0          0          0          o_bus_read_data[29]       
0          0          0          o_bus_read_data[28]       
0          0          0          o_bus_read_data[27]       
0          0          0          o_bus_read_data[26]       
0          0          0          o_bus_read_data[25]       
0          0          0          o_bus_read_data[24]       
0          0          0          o_bus_read_data[23]       
0          0          0          o_bus_read_data[22]       
0          0          0          o_bus_read_data[21]       
0          0          0          o_bus_read_data[20]       
0          0          0          o_bus_read_data[19]       
0          0          0          o_bus_read_data[18]       
0          0          0          o_bus_read_data[17]       
0          0          0          o_bus_read_data[16]       
0          0          0          o_bus_read_data[15]       
0          0          0          o_bus_read_data[14]       
0          0          0          o_bus_read_data[13]       
0          0          0          o_bus_read_data[12]       
0          0          0          o_bus_read_data[11]       
0          0          0          o_bus_read_data[10]       
0          0          0          o_bus_read_data[9]        
0          0          0          o_bus_read_data[8]        
0          0          0          o_bus_read_data[7]        
0          0          0          o_bus_read_data[6]        
0          0          0          o_bus_read_data[5]        
0          0          0          o_bus_read_data[4]        
0          0          0          o_bus_read_data[3]        
0          0          0          o_bus_read_data[2]        
0          1          0          o_bus_read_data[1]        
1          1          1          o_bus_read_data[0]        
1          1          1          o_register_valid          
0          0          0          o_register_access[1]      
1          1          1          o_register_access[0]      
0          0          0          o_register_address[9]     
0          0          0          o_register_address[8]     
0          0          0          o_register_address[7]     
0          0          0          o_register_address[6]     
0          0          0          o_register_address[5]     
0          0          0          o_register_address[4]     
1          1          1          o_register_address[3]     
1          1          1          o_register_address[2]     
0          0          0          o_register_address[1]     
0          0          0          o_register_address[0]     
0          0          0          o_register_write_data[31] 
0          0          0          o_register_write_data[30] 
0          0          0          o_register_write_data[29] 
0          0          0          o_register_write_data[28] 
0          0          0          o_register_write_data[27] 
0          0          0          o_register_write_data[26] 
0          0          0          o_register_write_data[25] 
0          0          0          o_register_write_data[24] 
0          0          0          o_register_write_data[23] 
0          0          0          o_register_write_data[22] 
0          0          0          o_register_write_data[21] 
0          0          0          o_register_write_data[20] 
0          0          0          o_register_write_data[19] 
0          0          0          o_register_write_data[18] 
0          0          0          o_register_write_data[17] 
0          0          0          o_register_write_data[16] 
0          0          0          o_register_write_data[15] 
0          0          0          o_register_write_data[14] 
0          0          0          o_register_write_data[13] 
0          0          0          o_register_write_data[12] 
0          0          0          o_register_write_data[11] 
0          0          0          o_register_write_data[10] 
0          0          0          o_register_write_data[9]  
0          0          0          o_register_write_data[8]  
0          0          0          o_register_write_data[7]  
0          0          0          o_register_write_data[6]  
0          0          0          o_register_write_data[5]  
0          0          0          o_register_write_data[4]  
0          0          0          o_register_write_data[3]  
0          0          0          o_register_write_data[2]  
1          1          1          o_register_write_data[1]  
1          1          1          o_register_write_data[0]  
1          1          1          o_register_strobe[3]      
1          1          1          o_register_strobe[2]      
1          1          1          o_register_strobe[1]      
1          1          1          o_register_strobe[0]      
0          0          0          i_register_active[7]      
0          0          0          i_register_active[6]      
0          0          0          i_register_active[5]      
0          0          0          i_register_active[4]      
0          0          0          i_register_active[3]      
1          1          1          i_register_active[2]      
1          1          1          i_register_active[1]      
1          1          1          i_register_active[0]      
0          0          0          i_register_ready[7]       
0          0          0          i_register_ready[6]       
0          0          0          i_register_ready[5]       
0          0          0          i_register_ready[4]       
0          0          0          i_register_ready[3]       
1          1          1          i_register_ready[2]       
1          1          1          i_register_ready[1]       
1          1          1          i_register_ready[0]       
0          0          0          i_register_status[15]     
0          0          0          i_register_status[14]     
0          0          0          i_register_status[13]     
0          0          0          i_register_status[12]     
0          0          0          i_register_status[11]     
0          0          0          i_register_status[10]     
0          0          0          i_register_status[9]      
0          0          0          i_register_status[8]      
0          0          0          i_register_status[7]      
0          0          0          i_register_status[6]      
0          0          0          i_register_status[5]      
0          0          0          i_register_status[4]      
0          0          0          i_register_status[3]      
0          0          0          i_register_status[2]      
0          0          0          i_register_status[1]      
0          0          0          i_register_status[0]      
0          0          0          i_register_read_data[255] 
0          0          0          i_register_read_data[254] 
0          0          0          i_register_read_data[253] 
0          0          0          i_register_read_data[252] 
0          0          0          i_register_read_data[251] 
0          0          0          i_register_read_data[250] 
0          0          0          i_register_read_data[249] 
0          0          0          i_register_read_data[248] 
0          0          0          i_register_read_data[247] 
0          0          0          i_register_read_data[246] 
0          0          0          i_register_read_data[245] 
0          0          0          i_register_read_data[244] 
0          0          0          i_register_read_data[243] 
0          0          0          i_register_read_data[242] 
0          0          0          i_register_read_data[241] 
0          0          0          i_register_read_data[240] 
0          0          0          i_register_read_data[239] 
0          0          0          i_register_read_data[238] 
0          0          0          i_register_read_data[237] 
0          0          0          i_register_read_data[236] 
0          0          0          i_register_read_data[235] 
0          0          0          i_register_read_data[234] 
0          0          0          i_register_read_data[233] 
0          0          0          i_register_read_data[232] 
0          0          0          i_register_read_data[231] 
0          0          0          i_register_read_data[230] 
0          0          0          i_register_read_data[229] 
0          0          0          i_register_read_data[228] 
0          0          0          i_register_read_data[227] 
0          0          0          i_register_read_data[226] 
0          0          0          i_register_read_data[225] 
0          0          0          i_register_read_data[224] 
0          0          0          i_register_read_data[223] 
0          0          0          i_register_read_data[222] 
0          0          0          i_register_read_data[221] 
0          0          0          i_register_read_data[220] 
0          0          0          i_register_read_data[219] 
0          0          0          i_register_read_data[218] 
0          0          0          i_register_read_data[217] 
0          0          0          i_register_read_data[216] 
0          0          0          i_register_read_data[215] 
0          0          0          i_register_read_data[214] 
0          0          0          i_register_read_data[213] 
0          0          0          i_register_read_data[212] 
0          0          0          i_register_read_data[211] 
0          0          0          i_register_read_data[210] 
0          0          0          i_register_read_data[209] 
0          0          0          i_register_read_data[208] 
0          0          0          i_register_read_data[207] 
0          0          0          i_register_read_data[206] 
0          0          0          i_register_read_data[205] 
0          0          0          i_register_read_data[204] 
0          0          0          i_register_read_data[203] 
0          0          0          i_register_read_data[202] 
0          0          0          i_register_read_data[201] 
0          0          0          i_register_read_data[200] 
0          0          0          i_register_read_data[199] 
0          0          0          i_register_read_data[198] 
0          0          0          i_register_read_data[197] 
0          0          0          i_register_read_data[196] 
0          0          0          i_register_read_data[195] 
0          0          0          i_register_read_data[194] 
0          0          0          i_register_read_data[193] 
0          0          0          i_register_read_data[192] 
0          0          0          i_register_read_data[191] 
0          0          0          i_register_read_data[190] 
0          0          0          i_register_read_data[189] 
0          0          0          i_register_read_data[188] 
0          0          0          i_register_read_data[187] 
0          0          0          i_register_read_data[186] 
0          0          0          i_register_read_data[185] 
0          0          0          i_register_read_data[184] 
0          0          0          i_register_read_data[183] 
0          0          0          i_register_read_data[182] 
0          0          0          i_register_read_data[181] 
0          0          0          i_register_read_data[180] 
0          0          0          i_register_read_data[179] 
0          0          0          i_register_read_data[178] 
0          0          0          i_register_read_data[177] 
0          0          0          i_register_read_data[176] 
0          0          0          i_register_read_data[175] 
0          0          0          i_register_read_data[174] 
0          0          0          i_register_read_data[173] 
0          0          0          i_register_read_data[172] 
0          0          0          i_register_read_data[171] 
0          0          0          i_register_read_data[170] 
0          0          0          i_register_read_data[169] 
0          0          0          i_register_read_data[168] 
0          0          0          i_register_read_data[167] 
0          0          0          i_register_read_data[166] 
0          0          0          i_register_read_data[165] 
0          0          0          i_register_read_data[164] 
0          0          0          i_register_read_data[163] 
0          0          0          i_register_read_data[162] 
0          0          0          i_register_read_data[161] 
0          0          0          i_register_read_data[160] 
0          0          0          i_register_read_data[159] 
0          0          0          i_register_read_data[158] 
0          0          0          i_register_read_data[157] 
0          0          0          i_register_read_data[156] 
0          0          0          i_register_read_data[155] 
0          0          0          i_register_read_data[154] 
0          0          0          i_register_read_data[153] 
0          0          0          i_register_read_data[152] 
0          0          0          i_register_read_data[151] 
0          0          0          i_register_read_data[150] 
0          0          0          i_register_read_data[149] 
0          0          0          i_register_read_data[148] 
0          0          0          i_register_read_data[147] 
0          0          0          i_register_read_data[146] 
0          0          0          i_register_read_data[145] 
0          0          0          i_register_read_data[144] 
0          0          0          i_register_read_data[143] 
0          0          0          i_register_read_data[142] 
0          0          0          i_register_read_data[141] 
0          0          0          i_register_read_data[140] 
0          0          0          i_register_read_data[139] 
0          0          0          i_register_read_data[138] 
0          0          0          i_register_read_data[137] 
0          0          0          i_register_read_data[136] 
0          0          0          i_register_read_data[135] 
0          0          0          i_register_read_data[134] 
0          0          0          i_register_read_data[133] 
0          0          0          i_register_read_data[132] 
0          0          0          i_register_read_data[131] 
0          0          0          i_register_read_data[130] 
0          0          0          i_register_read_data[129] 
0          0          0          i_register_read_data[128] 
0          0          0          i_register_read_data[127] 
0          0          0          i_register_read_data[126] 
0          0          0          i_register_read_data[125] 
0          0          0          i_register_read_data[124] 
0          0          0          i_register_read_data[123] 
0          0          0          i_register_read_data[122] 
0          0          0          i_register_read_data[121] 
0          0          0          i_register_read_data[120] 
0          0          0          i_register_read_data[119] 
0          0          0          i_register_read_data[118] 
0          0          0          i_register_read_data[117] 
0          0          0          i_register_read_data[116] 
0          0          0          i_register_read_data[115] 
0          0          0          i_register_read_data[114] 
0          0          0          i_register_read_data[113] 
0          0          0          i_register_read_data[112] 
0          0          0          i_register_read_data[111] 
0          0          0          i_register_read_data[110] 
0          0          0          i_register_read_data[109] 
0          0          0          i_register_read_data[108] 
0          0          0          i_register_read_data[107] 
0          0          0          i_register_read_data[106] 
0          0          0          i_register_read_data[105] 
0          0          0          i_register_read_data[104] 
0          0          0          i_register_read_data[103] 
0          0          0          i_register_read_data[102] 
0          0          0          i_register_read_data[101] 
0          0          0          i_register_read_data[100] 
0          0          0          i_register_read_data[99]  
0          0          0          i_register_read_data[98]  
0          0          0          i_register_read_data[97]  
0          0          0          i_register_read_data[96]  
0          0          0          i_register_read_data[95]  
0          0          0          i_register_read_data[94]  
0          0          0          i_register_read_data[93]  
0          0          0          i_register_read_data[92]  
0          0          0          i_register_read_data[91]  
0          0          0          i_register_read_data[90]  
0          0          0          i_register_read_data[89]  
0          0          0          i_register_read_data[88]  
0          0          0          i_register_read_data[87]  
0          0          0          i_register_read_data[86]  
0          0          0          i_register_read_data[85]  
0          0          0          i_register_read_data[84]  
0          0          0          i_register_read_data[83]  
0          0          0          i_register_read_data[82]  
0          0          0          i_register_read_data[81]  
0          0          0          i_register_read_data[80]  
0          0          0          i_register_read_data[79]  
0          0          0          i_register_read_data[78]  
0          0          0          i_register_read_data[77]  
0          0          0          i_register_read_data[76]  
0          0          0          i_register_read_data[75]  
0          0          0          i_register_read_data[74]  
0          0          0          i_register_read_data[73]  
0          0          0          i_register_read_data[72]  
0          0          0          i_register_read_data[71]  
0          0          0          i_register_read_data[70]  
0          0          0          i_register_read_data[69]  
0          0          0          i_register_read_data[68]  
0          0          0          i_register_read_data[67]  
0          0          0          i_register_read_data[66]  
0          0          0          i_register_read_data[65]  
0          1          0          i_register_read_data[64]  
0          0          0          i_register_read_data[63]  
0          0          0          i_register_read_data[62]  
0          0          0          i_register_read_data[61]  
0          0          0          i_register_read_data[60]  
0          0          0          i_register_read_data[59]  
0          0          0          i_register_read_data[58]  
0          0          0          i_register_read_data[57]  
0          0          0          i_register_read_data[56]  
0          0          0          i_register_read_data[55]  
0          0          0          i_register_read_data[54]  
0          0          0          i_register_read_data[53]  
0          0          0          i_register_read_data[52]  
0          0          0          i_register_read_data[51]  
0          0          0          i_register_read_data[50]  
0          0          0          i_register_read_data[49]  
0          0          0          i_register_read_data[48]  
0          0          0          i_register_read_data[47]  
0          0          0          i_register_read_data[46]  
0          0          0          i_register_read_data[45]  
0          0          0          i_register_read_data[44]  
0          0          0          i_register_read_data[43]  
0          0          0          i_register_read_data[42]  
0          0          0          i_register_read_data[41]  
0          0          0          i_register_read_data[40]  
0          0          0          i_register_read_data[39]  
0          0          0          i_register_read_data[38]  
0          0          0          i_register_read_data[37]  
0          0          0          i_register_read_data[36]  
0          0          0          i_register_read_data[35]  
0          0          0          i_register_read_data[34]  
0          0          0          i_register_read_data[33]  
0          1          0          i_register_read_data[32]  
0          0          0          i_register_read_data[31]  
0          0          0          i_register_read_data[30]  
0          0          0          i_register_read_data[29]  
0          0          0          i_register_read_data[28]  
0          0          0          i_register_read_data[27]  
0          0          0          i_register_read_data[26]  
0          0          0          i_register_read_data[25]  
0          0          0          i_register_read_data[24]  
0          0          0          i_register_read_data[23]  
0          0          0          i_register_read_data[22]  
0          0          0          i_register_read_data[21]  
0          0          0          i_register_read_data[20]  
0          0          0          i_register_read_data[19]  
0          0          0          i_register_read_data[18]  
0          0          0          i_register_read_data[17]  
0          0          0          i_register_read_data[16]  
0          0          0          i_register_read_data[15]  
0          0          0          i_register_read_data[14]  
0          0          0          i_register_read_data[13]  
0          0          0          i_register_read_data[12]  
0          0          0          i_register_read_data[11]  
0          0          0          i_register_read_data[10]  
0          0          0          i_register_read_data[9]   
0          0          0          i_register_read_data[8]   
0          0          0          i_register_read_data[7]   
0          0          0          i_register_read_data[6]   
0          0          0          i_register_read_data[5]   
0          0          0          i_register_read_data[4]   
0          0          0          i_register_read_data[3]   
0          0          0          i_register_read_data[2]   
0          1          0          i_register_read_data[1]   
0          1          0          i_register_read_data[0]   
0          0          0          r_busy                    
0          0          0          w_inside_range            
0          0          0          w_register_ready          
0          0          0          w_register_inactive       
0          0          0          w_register_status[1]      
0          0          0          w_register_status[0]      
0          0          0          w_register_read_data[31]  
0          0          0          w_register_read_data[30]  
0          0          0          w_register_read_data[29]  
0          0          0          w_register_read_data[28]  
0          0          0          w_register_read_data[27]  
0          0          0          w_register_read_data[26]  
0          0          0          w_register_read_data[25]  
0          0          0          w_register_read_data[24]  
0          0          0          w_register_read_data[23]  
0          0          0          w_register_read_data[22]  
0          0          0          w_register_read_data[21]  
0          0          0          w_register_read_data[20]  
0          0          0          w_register_read_data[19]  
0          0          0          w_register_read_data[18]  
0          0          0          w_register_read_data[17]  
0          0          0          w_register_read_data[16]  
0          0          0          w_register_read_data[15]  
0          0          0          w_register_read_data[14]  
0          0          0          w_register_read_data[13]  
0          0          0          w_register_read_data[12]  
0          0          0          w_register_read_data[11]  
0          0          0          w_register_read_data[10]  
0          0          0          w_register_read_data[9]   
0          0          0          w_register_read_data[8]   
0          0          0          w_register_read_data[7]   
0          0          0          w_register_read_data[6]   
0          0          0          w_register_read_data[5]   
0          0          0          w_register_read_data[4]   
0          0          0          w_register_read_data[3]   
0          0          0          w_register_read_data[2]   
0          1          0          w_register_read_data[1]   
1          1          1          w_register_read_data[0]   
0          0          0          w_bus_ready               

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 3 of 26
Number of uncovered signal bits: 23 of 26
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 26
Number of signal bits partially toggled(fall): 0 of 26

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_select[7]               
0          0          0          i_select[6]               
0          0          0          i_select[5]               
0          0          0          i_select[4]               
0          0          0          i_select[3]               
1          1          1          i_select[2]               
1          1          1          i_select[1]               
1          1          1          i_select[0]               
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          0          0          i_data[0]                 
0          0          0          o_data[1]                 
0          0          0          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered signal bits: 0 of 22
Number of uncovered signal bits: 22 of 22
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 22
Number of signal bits partially toggled(fall): 0 of 22

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          0          0          i_data[0]                 
0          0          0          o_result[1]               
0          0          0          o_result[0]               
0          0          0          next_data[3]              
0          0          0          next_data[2]              
0          0          0          next_data[1]              
0          0          0          next_data[0]              

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_status_mux.g.u_reducer.g_reduce.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered signal bits: 0 of 8
Number of uncovered signal bits: 8 of 8
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 8
Number of signal bits partially toggled(fall): 0 of 8

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          0          0          i_data[0]                 
0          0          0          o_result[1]               
0          0          0          o_result[0]               
0          0          0          next_data[1]              
0          0          0          next_data[0]              

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 4 of 296
Number of uncovered signal bits: 292 of 296
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 5 of 296
Number of signal bits partially toggled(fall): 0 of 296

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_select[7]               
0          0          0          i_select[6]               
0          0          0          i_select[5]               
0          0          0          i_select[4]               
0          0          0          i_select[3]               
1          1          1          i_select[2]               
1          1          1          i_select[1]               
1          1          1          i_select[0]               
0          0          0          i_data[255]               
0          0          0          i_data[254]               
0          0          0          i_data[253]               
0          0          0          i_data[252]               
0          0          0          i_data[251]               
0          0          0          i_data[250]               
0          0          0          i_data[249]               
0          0          0          i_data[248]               
0          0          0          i_data[247]               
0          0          0          i_data[246]               
0          0          0          i_data[245]               
0          0          0          i_data[244]               
0          0          0          i_data[243]               
0          0          0          i_data[242]               
0          0          0          i_data[241]               
0          0          0          i_data[240]               
0          0          0          i_data[239]               
0          0          0          i_data[238]               
0          0          0          i_data[237]               
0          0          0          i_data[236]               
0          0          0          i_data[235]               
0          0          0          i_data[234]               
0          0          0          i_data[233]               
0          0          0          i_data[232]               
0          0          0          i_data[231]               
0          0          0          i_data[230]               
0          0          0          i_data[229]               
0          0          0          i_data[228]               
0          0          0          i_data[227]               
0          0          0          i_data[226]               
0          0          0          i_data[225]               
0          0          0          i_data[224]               
0          0          0          i_data[223]               
0          0          0          i_data[222]               
0          0          0          i_data[221]               
0          0          0          i_data[220]               
0          0          0          i_data[219]               
0          0          0          i_data[218]               
0          0          0          i_data[217]               
0          0          0          i_data[216]               
0          0          0          i_data[215]               
0          0          0          i_data[214]               
0          0          0          i_data[213]               
0          0          0          i_data[212]               
0          0          0          i_data[211]               
0          0          0          i_data[210]               
0          0          0          i_data[209]               
0          0          0          i_data[208]               
0          0          0          i_data[207]               
0          0          0          i_data[206]               
0          0          0          i_data[205]               
0          0          0          i_data[204]               
0          0          0          i_data[203]               
0          0          0          i_data[202]               
0          0          0          i_data[201]               
0          0          0          i_data[200]               
0          0          0          i_data[199]               
0          0          0          i_data[198]               
0          0          0          i_data[197]               
0          0          0          i_data[196]               
0          0          0          i_data[195]               
0          0          0          i_data[194]               
0          0          0          i_data[193]               
0          0          0          i_data[192]               
0          0          0          i_data[191]               
0          0          0          i_data[190]               
0          0          0          i_data[189]               
0          0          0          i_data[188]               
0          0          0          i_data[187]               
0          0          0          i_data[186]               
0          0          0          i_data[185]               
0          0          0          i_data[184]               
0          0          0          i_data[183]               
0          0          0          i_data[182]               
0          0          0          i_data[181]               
0          0          0          i_data[180]               
0          0          0          i_data[179]               
0          0          0          i_data[178]               
0          0          0          i_data[177]               
0          0          0          i_data[176]               
0          0          0          i_data[175]               
0          0          0          i_data[174]               
0          0          0          i_data[173]               
0          0          0          i_data[172]               
0          0          0          i_data[171]               
0          0          0          i_data[170]               
0          0          0          i_data[169]               
0          0          0          i_data[168]               
0          0          0          i_data[167]               
0          0          0          i_data[166]               
0          0          0          i_data[165]               
0          0          0          i_data[164]               
0          0          0          i_data[163]               
0          0          0          i_data[162]               
0          0          0          i_data[161]               
0          0          0          i_data[160]               
0          0          0          i_data[159]               
0          0          0          i_data[158]               
0          0          0          i_data[157]               
0          0          0          i_data[156]               
0          0          0          i_data[155]               
0          0          0          i_data[154]               
0          0          0          i_data[153]               
0          0          0          i_data[152]               
0          0          0          i_data[151]               
0          0          0          i_data[150]               
0          0          0          i_data[149]               
0          0          0          i_data[148]               
0          0          0          i_data[147]               
0          0          0          i_data[146]               
0          0          0          i_data[145]               
0          0          0          i_data[144]               
0          0          0          i_data[143]               
0          0          0          i_data[142]               
0          0          0          i_data[141]               
0          0          0          i_data[140]               
0          0          0          i_data[139]               
0          0          0          i_data[138]               
0          0          0          i_data[137]               
0          0          0          i_data[136]               
0          0          0          i_data[135]               
0          0          0          i_data[134]               
0          0          0          i_data[133]               
0          0          0          i_data[132]               
0          0          0          i_data[131]               
0          0          0          i_data[130]               
0          0          0          i_data[129]               
0          0          0          i_data[128]               
0          0          0          i_data[127]               
0          0          0          i_data[126]               
0          0          0          i_data[125]               
0          0          0          i_data[124]               
0          0          0          i_data[123]               
0          0          0          i_data[122]               
0          0          0          i_data[121]               
0          0          0          i_data[120]               
0          0          0          i_data[119]               
0          0          0          i_data[118]               
0          0          0          i_data[117]               
0          0          0          i_data[116]               
0          0          0          i_data[115]               
0          0          0          i_data[114]               
0          0          0          i_data[113]               
0          0          0          i_data[112]               
0          0          0          i_data[111]               
0          0          0          i_data[110]               
0          0          0          i_data[109]               
0          0          0          i_data[108]               
0          0          0          i_data[107]               
0          0          0          i_data[106]               
0          0          0          i_data[105]               
0          0          0          i_data[104]               
0          0          0          i_data[103]               
0          0          0          i_data[102]               
0          0          0          i_data[101]               
0          0          0          i_data[100]               
0          0          0          i_data[99]                
0          0          0          i_data[98]                
0          0          0          i_data[97]                
0          0          0          i_data[96]                
0          0          0          i_data[95]                
0          0          0          i_data[94]                
0          0          0          i_data[93]                
0          0          0          i_data[92]                
0          0          0          i_data[91]                
0          0          0          i_data[90]                
0          0          0          i_data[89]                
0          0          0          i_data[88]                
0          0          0          i_data[87]                
0          0          0          i_data[86]                
0          0          0          i_data[85]                
0          0          0          i_data[84]                
0          0          0          i_data[83]                
0          0          0          i_data[82]                
0          0          0          i_data[81]                
0          0          0          i_data[80]                
0          0          0          i_data[79]                
0          0          0          i_data[78]                
0          0          0          i_data[77]                
0          0          0          i_data[76]                
0          0          0          i_data[75]                
0          0          0          i_data[74]                
0          0          0          i_data[73]                
0          0          0          i_data[72]                
0          0          0          i_data[71]                
0          0          0          i_data[70]                
0          0          0          i_data[69]                
0          0          0          i_data[68]                
0          0          0          i_data[67]                
0          0          0          i_data[66]                
0          0          0          i_data[65]                
0          1          0          i_data[64]                
0          0          0          i_data[63]                
0          0          0          i_data[62]                
0          0          0          i_data[61]                
0          0          0          i_data[60]                
0          0          0          i_data[59]                
0          0          0          i_data[58]                
0          0          0          i_data[57]                
0          0          0          i_data[56]                
0          0          0          i_data[55]                
0          0          0          i_data[54]                
0          0          0          i_data[53]                
0          0          0          i_data[52]                
0          0          0          i_data[51]                
0          0          0          i_data[50]                
0          0          0          i_data[49]                
0          0          0          i_data[48]                
0          0          0          i_data[47]                
0          0          0          i_data[46]                
0          0          0          i_data[45]                
0          0          0          i_data[44]                
0          0          0          i_data[43]                
0          0          0          i_data[42]                
0          0          0          i_data[41]                
0          0          0          i_data[40]                
0          0          0          i_data[39]                
0          0          0          i_data[38]                
0          0          0          i_data[37]                
0          0          0          i_data[36]                
0          0          0          i_data[35]                
0          0          0          i_data[34]                
0          0          0          i_data[33]                
0          1          0          i_data[32]                
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          1          0          i_data[1]                 
0          1          0          i_data[0]                 
0          0          0          o_data[31]                
0          0          0          o_data[30]                
0          0          0          o_data[29]                
0          0          0          o_data[28]                
0          0          0          o_data[27]                
0          0          0          o_data[26]                
0          0          0          o_data[25]                
0          0          0          o_data[24]                
0          0          0          o_data[23]                
0          0          0          o_data[22]                
0          0          0          o_data[21]                
0          0          0          o_data[20]                
0          0          0          o_data[19]                
0          0          0          o_data[18]                
0          0          0          o_data[17]                
0          0          0          o_data[16]                
0          0          0          o_data[15]                
0          0          0          o_data[14]                
0          0          0          o_data[13]                
0          0          0          o_data[12]                
0          0          0          o_data[11]                
0          0          0          o_data[10]                
0          0          0          o_data[9]                 
0          0          0          o_data[8]                 
0          0          0          o_data[7]                 
0          0          0          o_data[6]                 
0          0          0          o_data[5]                 
0          0          0          o_data[4]                 
0          0          0          o_data[3]                 
0          0          0          o_data[2]                 
0          1          0          o_data[1]                 
1          1          1          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered signal bits: 4 of 352
Number of uncovered signal bits: 348 of 352
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 4 of 352
Number of signal bits partially toggled(fall): 0 of 352

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_data[255]               
0          0          0          i_data[254]               
0          0          0          i_data[253]               
0          0          0          i_data[252]               
0          0          0          i_data[251]               
0          0          0          i_data[250]               
0          0          0          i_data[249]               
0          0          0          i_data[248]               
0          0          0          i_data[247]               
0          0          0          i_data[246]               
0          0          0          i_data[245]               
0          0          0          i_data[244]               
0          0          0          i_data[243]               
0          0          0          i_data[242]               
0          0          0          i_data[241]               
0          0          0          i_data[240]               
0          0          0          i_data[239]               
0          0          0          i_data[238]               
0          0          0          i_data[237]               
0          0          0          i_data[236]               
0          0          0          i_data[235]               
0          0          0          i_data[234]               
0          0          0          i_data[233]               
0          0          0          i_data[232]               
0          0          0          i_data[231]               
0          0          0          i_data[230]               
0          0          0          i_data[229]               
0          0          0          i_data[228]               
0          0          0          i_data[227]               
0          0          0          i_data[226]               
0          0          0          i_data[225]               
0          0          0          i_data[224]               
0          0          0          i_data[223]               
0          0          0          i_data[222]               
0          0          0          i_data[221]               
0          0          0          i_data[220]               
0          0          0          i_data[219]               
0          0          0          i_data[218]               
0          0          0          i_data[217]               
0          0          0          i_data[216]               
0          0          0          i_data[215]               
0          0          0          i_data[214]               
0          0          0          i_data[213]               
0          0          0          i_data[212]               
0          0          0          i_data[211]               
0          0          0          i_data[210]               
0          0          0          i_data[209]               
0          0          0          i_data[208]               
0          0          0          i_data[207]               
0          0          0          i_data[206]               
0          0          0          i_data[205]               
0          0          0          i_data[204]               
0          0          0          i_data[203]               
0          0          0          i_data[202]               
0          0          0          i_data[201]               
0          0          0          i_data[200]               
0          0          0          i_data[199]               
0          0          0          i_data[198]               
0          0          0          i_data[197]               
0          0          0          i_data[196]               
0          0          0          i_data[195]               
0          0          0          i_data[194]               
0          0          0          i_data[193]               
0          0          0          i_data[192]               
0          0          0          i_data[191]               
0          0          0          i_data[190]               
0          0          0          i_data[189]               
0          0          0          i_data[188]               
0          0          0          i_data[187]               
0          0          0          i_data[186]               
0          0          0          i_data[185]               
0          0          0          i_data[184]               
0          0          0          i_data[183]               
0          0          0          i_data[182]               
0          0          0          i_data[181]               
0          0          0          i_data[180]               
0          0          0          i_data[179]               
0          0          0          i_data[178]               
0          0          0          i_data[177]               
0          0          0          i_data[176]               
0          0          0          i_data[175]               
0          0          0          i_data[174]               
0          0          0          i_data[173]               
0          0          0          i_data[172]               
0          0          0          i_data[171]               
0          0          0          i_data[170]               
0          0          0          i_data[169]               
0          0          0          i_data[168]               
0          0          0          i_data[167]               
0          0          0          i_data[166]               
0          0          0          i_data[165]               
0          0          0          i_data[164]               
0          0          0          i_data[163]               
0          0          0          i_data[162]               
0          0          0          i_data[161]               
0          0          0          i_data[160]               
0          0          0          i_data[159]               
0          0          0          i_data[158]               
0          0          0          i_data[157]               
0          0          0          i_data[156]               
0          0          0          i_data[155]               
0          0          0          i_data[154]               
0          0          0          i_data[153]               
0          0          0          i_data[152]               
0          0          0          i_data[151]               
0          0          0          i_data[150]               
0          0          0          i_data[149]               
0          0          0          i_data[148]               
0          0          0          i_data[147]               
0          0          0          i_data[146]               
0          0          0          i_data[145]               
0          0          0          i_data[144]               
0          0          0          i_data[143]               
0          0          0          i_data[142]               
0          0          0          i_data[141]               
0          0          0          i_data[140]               
0          0          0          i_data[139]               
0          0          0          i_data[138]               
0          0          0          i_data[137]               
0          0          0          i_data[136]               
0          0          0          i_data[135]               
0          0          0          i_data[134]               
0          0          0          i_data[133]               
0          0          0          i_data[132]               
0          0          0          i_data[131]               
0          0          0          i_data[130]               
0          0          0          i_data[129]               
0          0          0          i_data[128]               
0          0          0          i_data[127]               
0          0          0          i_data[126]               
0          0          0          i_data[125]               
0          0          0          i_data[124]               
0          0          0          i_data[123]               
0          0          0          i_data[122]               
0          0          0          i_data[121]               
0          0          0          i_data[120]               
0          0          0          i_data[119]               
0          0          0          i_data[118]               
0          0          0          i_data[117]               
0          0          0          i_data[116]               
0          0          0          i_data[115]               
0          0          0          i_data[114]               
0          0          0          i_data[113]               
0          0          0          i_data[112]               
0          0          0          i_data[111]               
0          0          0          i_data[110]               
0          0          0          i_data[109]               
0          0          0          i_data[108]               
0          0          0          i_data[107]               
0          0          0          i_data[106]               
0          0          0          i_data[105]               
0          0          0          i_data[104]               
0          0          0          i_data[103]               
0          0          0          i_data[102]               
0          0          0          i_data[101]               
0          0          0          i_data[100]               
0          0          0          i_data[99]                
0          0          0          i_data[98]                
0          0          0          i_data[97]                
0          0          0          i_data[96]                
0          0          0          i_data[95]                
0          0          0          i_data[94]                
0          0          0          i_data[93]                
0          0          0          i_data[92]                
0          0          0          i_data[91]                
0          0          0          i_data[90]                
0          0          0          i_data[89]                
0          0          0          i_data[88]                
0          0          0          i_data[87]                
0          0          0          i_data[86]                
0          0          0          i_data[85]                
0          0          0          i_data[84]                
0          0          0          i_data[83]                
0          0          0          i_data[82]                
0          0          0          i_data[81]                
0          0          0          i_data[80]                
0          0          0          i_data[79]                
0          0          0          i_data[78]                
0          0          0          i_data[77]                
0          0          0          i_data[76]                
0          0          0          i_data[75]                
0          0          0          i_data[74]                
0          0          0          i_data[73]                
0          0          0          i_data[72]                
0          0          0          i_data[71]                
0          0          0          i_data[70]                
0          0          0          i_data[69]                
0          0          0          i_data[68]                
0          0          0          i_data[67]                
0          0          0          i_data[66]                
0          0          0          i_data[65]                
1          1          1          i_data[64]                
0          0          0          i_data[63]                
0          0          0          i_data[62]                
0          0          0          i_data[61]                
0          0          0          i_data[60]                
0          0          0          i_data[59]                
0          0          0          i_data[58]                
0          0          0          i_data[57]                
0          0          0          i_data[56]                
0          0          0          i_data[55]                
0          0          0          i_data[54]                
0          0          0          i_data[53]                
0          0          0          i_data[52]                
0          0          0          i_data[51]                
0          0          0          i_data[50]                
0          0          0          i_data[49]                
0          0          0          i_data[48]                
0          0          0          i_data[47]                
0          0          0          i_data[46]                
0          0          0          i_data[45]                
0          0          0          i_data[44]                
0          0          0          i_data[43]                
0          0          0          i_data[42]                
0          0          0          i_data[41]                
0          0          0          i_data[40]                
0          0          0          i_data[39]                
0          0          0          i_data[38]                
0          0          0          i_data[37]                
0          0          0          i_data[36]                
0          0          0          i_data[35]                
0          0          0          i_data[34]                
0          0          0          i_data[33]                
1          1          1          i_data[32]                
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          1          0          i_data[1]                 
0          1          0          i_data[0]                 
0          0          0          o_result[31]              
0          0          0          o_result[30]              
0          0          0          o_result[29]              
0          0          0          o_result[28]              
0          0          0          o_result[27]              
0          0          0          o_result[26]              
0          0          0          o_result[25]              
0          0          0          o_result[24]              
0          0          0          o_result[23]              
0          0          0          o_result[22]              
0          0          0          o_result[21]              
0          0          0          o_result[20]              
0          0          0          o_result[19]              
0          0          0          o_result[18]              
0          0          0          o_result[17]              
0          0          0          o_result[16]              
0          0          0          o_result[15]              
0          0          0          o_result[14]              
0          0          0          o_result[13]              
0          0          0          o_result[12]              
0          0          0          o_result[11]              
0          0          0          o_result[10]              
0          0          0          o_result[9]               
0          0          0          o_result[8]               
0          0          0          o_result[7]               
0          0          0          o_result[6]               
0          0          0          o_result[5]               
0          0          0          o_result[4]               
0          0          0          o_result[3]               
0          0          0          o_result[2]               
0          1          0          o_result[1]               
1          1          1          o_result[0]               
0          0          0          next_data[63]             
0          0          0          next_data[62]             
0          0          0          next_data[61]             
0          0          0          next_data[60]             
0          0          0          next_data[59]             
0          0          0          next_data[58]             
0          0          0          next_data[57]             
0          0          0          next_data[56]             
0          0          0          next_data[55]             
0          0          0          next_data[54]             
0          0          0          next_data[53]             
0          0          0          next_data[52]             
0          0          0          next_data[51]             
0          0          0          next_data[50]             
0          0          0          next_data[49]             
0          0          0          next_data[48]             
0          0          0          next_data[47]             
0          0          0          next_data[46]             
0          0          0          next_data[45]             
0          0          0          next_data[44]             
0          0          0          next_data[43]             
0          0          0          next_data[42]             
0          0          0          next_data[41]             
0          0          0          next_data[40]             
0          0          0          next_data[39]             
0          0          0          next_data[38]             
0          0          0          next_data[37]             
0          0          0          next_data[36]             
0          0          0          next_data[35]             
0          0          0          next_data[34]             
0          0          0          next_data[33]             
0          0          0          next_data[32]             
0          0          0          next_data[31]             
0          0          0          next_data[30]             
0          0          0          next_data[29]             
0          0          0          next_data[28]             
0          0          0          next_data[27]             
0          0          0          next_data[26]             
0          0          0          next_data[25]             
0          0          0          next_data[24]             
0          0          0          next_data[23]             
0          0          0          next_data[22]             
0          0          0          next_data[21]             
0          0          0          next_data[20]             
0          0          0          next_data[19]             
0          0          0          next_data[18]             
0          0          0          next_data[17]             
0          0          0          next_data[16]             
0          0          0          next_data[15]             
0          0          0          next_data[14]             
0          0          0          next_data[13]             
0          0          0          next_data[12]             
0          0          0          next_data[11]             
0          0          0          next_data[10]             
0          0          0          next_data[9]              
0          0          0          next_data[8]              
0          0          0          next_data[7]              
0          0          0          next_data[6]              
0          0          0          next_data[5]              
0          0          0          next_data[4]              
0          0          0          next_data[3]              
0          0          0          next_data[2]              
0          1          0          next_data[1]              
1          1          1          next_data[0]              

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.u_adapter.u_adapter_common.u_read_data_mux.g.u_reducer.g_reduce.u_reducer
Type name: rggen_or_reducer
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_or_reducer.v
Number of covered signal bits: 3 of 128
Number of uncovered signal bits: 125 of 128
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 3 of 128
Number of signal bits partially toggled(fall): 0 of 128

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_data[63]                
0          0          0          i_data[62]                
0          0          0          i_data[61]                
0          0          0          i_data[60]                
0          0          0          i_data[59]                
0          0          0          i_data[58]                
0          0          0          i_data[57]                
0          0          0          i_data[56]                
0          0          0          i_data[55]                
0          0          0          i_data[54]                
0          0          0          i_data[53]                
0          0          0          i_data[52]                
0          0          0          i_data[51]                
0          0          0          i_data[50]                
0          0          0          i_data[49]                
0          0          0          i_data[48]                
0          0          0          i_data[47]                
0          0          0          i_data[46]                
0          0          0          i_data[45]                
0          0          0          i_data[44]                
0          0          0          i_data[43]                
0          0          0          i_data[42]                
0          0          0          i_data[41]                
0          0          0          i_data[40]                
0          0          0          i_data[39]                
0          0          0          i_data[38]                
0          0          0          i_data[37]                
0          0          0          i_data[36]                
0          0          0          i_data[35]                
0          0          0          i_data[34]                
0          0          0          i_data[33]                
0          0          0          i_data[32]                
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          1          0          i_data[1]                 
1          1          1          i_data[0]                 
0          0          0          o_result[31]              
0          0          0          o_result[30]              
0          0          0          o_result[29]              
0          0          0          o_result[28]              
0          0          0          o_result[27]              
0          0          0          o_result[26]              
0          0          0          o_result[25]              
0          0          0          o_result[24]              
0          0          0          o_result[23]              
0          0          0          o_result[22]              
0          0          0          o_result[21]              
0          0          0          o_result[20]              
0          0          0          o_result[19]              
0          0          0          o_result[18]              
0          0          0          o_result[17]              
0          0          0          o_result[16]              
0          0          0          o_result[15]              
0          0          0          o_result[14]              
0          0          0          o_result[13]              
0          0          0          o_result[12]              
0          0          0          o_result[11]              
0          0          0          o_result[10]              
0          0          0          o_result[9]               
0          0          0          o_result[8]               
0          0          0          o_result[7]               
0          0          0          o_result[6]               
0          0          0          o_result[5]               
0          0          0          o_result[4]               
0          0          0          o_result[3]               
0          0          0          o_result[2]               
0          1          0          o_result[1]               
1          1          1          o_result[0]               
0          0          0          next_data[31]             
0          0          0          next_data[30]             
0          0          0          next_data[29]             
0          0          0          next_data[28]             
0          0          0          next_data[27]             
0          0          0          next_data[26]             
0          0          0          next_data[25]             
0          0          0          next_data[24]             
0          0          0          next_data[23]             
0          0          0          next_data[22]             
0          0          0          next_data[21]             
0          0          0          next_data[20]             
0          0          0          next_data[19]             
0          0          0          next_data[18]             
0          0          0          next_data[17]             
0          0          0          next_data[16]             
0          0          0          next_data[15]             
0          0          0          next_data[14]             
0          0          0          next_data[13]             
0          0          0          next_data[12]             
0          0          0          next_data[11]             
0          0          0          next_data[10]             
0          0          0          next_data[9]              
0          0          0          next_data[8]              
0          0          0          next_data[7]              
0          0          0          next_data[6]              
0          0          0          next_data[5]              
0          0          0          next_data[4]              
0          0          0          next_data[3]              
0          0          0          next_data[2]              
0          1          0          next_data[1]              
1          1          1          next_data[0]              

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.u_register
Type name: rggen_default_register
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_default_register.v
Number of covered signal bits: 80 of 280
Number of uncovered signal bits: 200 of 280
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 9 of 280
Number of signal bits partially toggled(fall): 0 of 280

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
1          1          1          o_register_active         
1          1          1          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          1          0          o_register_read_data[1]   
0          1          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          1          0          o_register_value[1]       
0          1          0          o_register_value[0]       
1          1          1          o_bit_field_valid         
1          1          1          o_bit_field_read_mask[31] 
1          1          1          o_bit_field_read_mask[30] 
1          1          1          o_bit_field_read_mask[29] 
1          1          1          o_bit_field_read_mask[28] 
1          1          1          o_bit_field_read_mask[27] 
1          1          1          o_bit_field_read_mask[26] 
1          1          1          o_bit_field_read_mask[25] 
1          1          1          o_bit_field_read_mask[24] 
1          1          1          o_bit_field_read_mask[23] 
1          1          1          o_bit_field_read_mask[22] 
1          1          1          o_bit_field_read_mask[21] 
1          1          1          o_bit_field_read_mask[20] 
1          1          1          o_bit_field_read_mask[19] 
1          1          1          o_bit_field_read_mask[18] 
1          1          1          o_bit_field_read_mask[17] 
1          1          1          o_bit_field_read_mask[16] 
1          1          1          o_bit_field_read_mask[15] 
1          1          1          o_bit_field_read_mask[14] 
1          1          1          o_bit_field_read_mask[13] 
1          1          1          o_bit_field_read_mask[12] 
1          1          1          o_bit_field_read_mask[11] 
1          1          1          o_bit_field_read_mask[10] 
1          1          1          o_bit_field_read_mask[9]  
1          1          1          o_bit_field_read_mask[8]  
1          1          1          o_bit_field_read_mask[7]  
1          1          1          o_bit_field_read_mask[6]  
1          1          1          o_bit_field_read_mask[5]  
1          1          1          o_bit_field_read_mask[4]  
1          1          1          o_bit_field_read_mask[3]  
1          1          1          o_bit_field_read_mask[2]  
1          1          1          o_bit_field_read_mask[1]  
1          1          1          o_bit_field_read_mask[0]  
1          1          1          o_bit_field_write_mask[31] 
1          1          1          o_bit_field_write_mask[30] 
1          1          1          o_bit_field_write_mask[29] 
1          1          1          o_bit_field_write_mask[28] 
1          1          1          o_bit_field_write_mask[27] 
1          1          1          o_bit_field_write_mask[26] 
1          1          1          o_bit_field_write_mask[25] 
1          1          1          o_bit_field_write_mask[24] 
1          1          1          o_bit_field_write_mask[23] 
1          1          1          o_bit_field_write_mask[22] 
1          1          1          o_bit_field_write_mask[21] 
1          1          1          o_bit_field_write_mask[20] 
1          1          1          o_bit_field_write_mask[19] 
1          1          1          o_bit_field_write_mask[18] 
1          1          1          o_bit_field_write_mask[17] 
1          1          1          o_bit_field_write_mask[16] 
1          1          1          o_bit_field_write_mask[15] 
1          1          1          o_bit_field_write_mask[14] 
1          1          1          o_bit_field_write_mask[13] 
1          1          1          o_bit_field_write_mask[12] 
1          1          1          o_bit_field_write_mask[11] 
1          1          1          o_bit_field_write_mask[10] 
1          1          1          o_bit_field_write_mask[9] 
1          1          1          o_bit_field_write_mask[8] 
1          1          1          o_bit_field_write_mask[7] 
1          1          1          o_bit_field_write_mask[6] 
1          1          1          o_bit_field_write_mask[5] 
1          1          1          o_bit_field_write_mask[4] 
1          1          1          o_bit_field_write_mask[3] 
1          1          1          o_bit_field_write_mask[2] 
1          1          1          o_bit_field_write_mask[1] 
1          1          1          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          1          0          i_bit_field_read_data[1]  
0          1          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          1          0          i_bit_field_value[1]      
0          1          0          i_bit_field_value[0]      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered signal bits: 83 of 318
Number of uncovered signal bits: 235 of 318
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 11 of 318
Number of signal bits partially toggled(fall): 0 of 318

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
1          1          1          o_register_active         
1          1          1          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          1          0          o_register_read_data[1]   
0          1          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          1          0          o_register_value[1]       
0          1          0          o_register_value[0]       
0          0          0          i_additional_match        
1          1          1          o_bit_field_valid         
1          1          1          o_bit_field_read_mask[31] 
1          1          1          o_bit_field_read_mask[30] 
1          1          1          o_bit_field_read_mask[29] 
1          1          1          o_bit_field_read_mask[28] 
1          1          1          o_bit_field_read_mask[27] 
1          1          1          o_bit_field_read_mask[26] 
1          1          1          o_bit_field_read_mask[25] 
1          1          1          o_bit_field_read_mask[24] 
1          1          1          o_bit_field_read_mask[23] 
1          1          1          o_bit_field_read_mask[22] 
1          1          1          o_bit_field_read_mask[21] 
1          1          1          o_bit_field_read_mask[20] 
1          1          1          o_bit_field_read_mask[19] 
1          1          1          o_bit_field_read_mask[18] 
1          1          1          o_bit_field_read_mask[17] 
1          1          1          o_bit_field_read_mask[16] 
1          1          1          o_bit_field_read_mask[15] 
1          1          1          o_bit_field_read_mask[14] 
1          1          1          o_bit_field_read_mask[13] 
1          1          1          o_bit_field_read_mask[12] 
1          1          1          o_bit_field_read_mask[11] 
1          1          1          o_bit_field_read_mask[10] 
1          1          1          o_bit_field_read_mask[9]  
1          1          1          o_bit_field_read_mask[8]  
1          1          1          o_bit_field_read_mask[7]  
1          1          1          o_bit_field_read_mask[6]  
1          1          1          o_bit_field_read_mask[5]  
1          1          1          o_bit_field_read_mask[4]  
1          1          1          o_bit_field_read_mask[3]  
1          1          1          o_bit_field_read_mask[2]  
1          1          1          o_bit_field_read_mask[1]  
1          1          1          o_bit_field_read_mask[0]  
1          1          1          o_bit_field_write_mask[31] 
1          1          1          o_bit_field_write_mask[30] 
1          1          1          o_bit_field_write_mask[29] 
1          1          1          o_bit_field_write_mask[28] 
1          1          1          o_bit_field_write_mask[27] 
1          1          1          o_bit_field_write_mask[26] 
1          1          1          o_bit_field_write_mask[25] 
1          1          1          o_bit_field_write_mask[24] 
1          1          1          o_bit_field_write_mask[23] 
1          1          1          o_bit_field_write_mask[22] 
1          1          1          o_bit_field_write_mask[21] 
1          1          1          o_bit_field_write_mask[20] 
1          1          1          o_bit_field_write_mask[19] 
1          1          1          o_bit_field_write_mask[18] 
1          1          1          o_bit_field_write_mask[17] 
1          1          1          o_bit_field_write_mask[16] 
1          1          1          o_bit_field_write_mask[15] 
1          1          1          o_bit_field_write_mask[14] 
1          1          1          o_bit_field_write_mask[13] 
1          1          1          o_bit_field_write_mask[12] 
1          1          1          o_bit_field_write_mask[11] 
1          1          1          o_bit_field_write_mask[10] 
1          1          1          o_bit_field_write_mask[9] 
1          1          1          o_bit_field_write_mask[8] 
1          1          1          o_bit_field_write_mask[7] 
1          1          1          o_bit_field_write_mask[6] 
1          1          1          o_bit_field_write_mask[5] 
1          1          1          o_bit_field_write_mask[4] 
1          1          1          o_bit_field_write_mask[3] 
1          1          1          o_bit_field_write_mask[2] 
1          1          1          o_bit_field_write_mask[1] 
1          1          1          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          1          0          i_bit_field_read_data[1]  
0          1          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          1          0          i_bit_field_value[1]      
0          1          0          i_bit_field_value[0]      
1          1          1          w_match                   
1          1          1          w_active                  
1          1          1          w_frontdoor_valid         
0          0          0          w_backdoor_valid          
0          0          0          w_pending_valid           
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          1          0          w_read_data[1]            
0          1          0          w_read_data[0]            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered signal bits: 5 of 16
Number of uncovered signal bits: 11 of 16
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 16
Number of signal bits partially toggled(fall): 0 of 16

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_address[9]              
0          0          0          i_address[8]              
0          0          0          i_address[7]              
0          0          0          i_address[6]              
0          0          0          i_address[5]              
0          0          0          i_address[4]              
1          1          1          i_address[3]              
1          1          1          i_address[2]              
0          0          0          i_address[1]              
0          0          0          i_address[0]              
0          0          0          i_access[1]               
1          1          1          i_access[0]               
0          0          0          i_additional_match        
1          1          1          o_match                   
1          1          1          w_address_match           
0          0          0          w_access_match            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.u_register.u_register_common.u_read_data_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 1 of 65
Number of uncovered signal bits: 64 of 65
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 4 of 65
Number of signal bits partially toggled(fall): 0 of 65

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_select                  
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          1          0          i_data[1]                 
0          1          0          i_data[0]                 
0          0          0          o_data[31]                
0          0          0          o_data[30]                
0          0          0          o_data[29]                
0          0          0          o_data[28]                
0          0          0          o_data[27]                
0          0          0          o_data[26]                
0          0          0          o_data[25]                
0          0          0          o_data[24]                
0          0          0          o_data[23]                
0          0          0          o_data[22]                
0          0          0          o_data[21]                
0          0          0          o_data[20]                
0          0          0          o_data[19]                
0          0          0          o_data[18]                
0          0          0          o_data[17]                
0          0          0          o_data[16]                
0          0          0          o_data[15]                
0          0          0          o_data[14]                
0          0          0          o_data[13]                
0          0          0          o_data[12]                
0          0          0          o_data[11]                
0          0          0          o_data[10]                
0          0          0          o_data[9]                 
0          0          0          o_data[8]                 
0          0          0          o_data[7]                 
0          0          0          o_data[6]                 
0          0          0          o_data[5]                 
0          0          0          o_data[4]                 
0          0          0          o_data[3]                 
0          0          0          o_data[2]                 
0          1          0          o_data[1]                 
0          1          0          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_STAUS_REG.g_ECC_STATUS.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered signal bits: 69 of 430
Number of uncovered signal bits: 361 of 430
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 13 of 430
Number of signal bits partially toggled(fall): 0 of 430

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_sw_valid                
1          1          1          i_sw_read_mask[31]        
1          1          1          i_sw_read_mask[30]        
1          1          1          i_sw_read_mask[29]        
1          1          1          i_sw_read_mask[28]        
1          1          1          i_sw_read_mask[27]        
1          1          1          i_sw_read_mask[26]        
1          1          1          i_sw_read_mask[25]        
1          1          1          i_sw_read_mask[24]        
1          1          1          i_sw_read_mask[23]        
1          1          1          i_sw_read_mask[22]        
1          1          1          i_sw_read_mask[21]        
1          1          1          i_sw_read_mask[20]        
1          1          1          i_sw_read_mask[19]        
1          1          1          i_sw_read_mask[18]        
1          1          1          i_sw_read_mask[17]        
1          1          1          i_sw_read_mask[16]        
1          1          1          i_sw_read_mask[15]        
1          1          1          i_sw_read_mask[14]        
1          1          1          i_sw_read_mask[13]        
1          1          1          i_sw_read_mask[12]        
1          1          1          i_sw_read_mask[11]        
1          1          1          i_sw_read_mask[10]        
1          1          1          i_sw_read_mask[9]         
1          1          1          i_sw_read_mask[8]         
1          1          1          i_sw_read_mask[7]         
1          1          1          i_sw_read_mask[6]         
1          1          1          i_sw_read_mask[5]         
1          1          1          i_sw_read_mask[4]         
1          1          1          i_sw_read_mask[3]         
1          1          1          i_sw_read_mask[2]         
1          1          1          i_sw_read_mask[1]         
1          1          1          i_sw_read_mask[0]         
0          0          0          i_sw_write_enable         
1          1          1          i_sw_write_mask[31]       
1          1          1          i_sw_write_mask[30]       
1          1          1          i_sw_write_mask[29]       
1          1          1          i_sw_write_mask[28]       
1          1          1          i_sw_write_mask[27]       
1          1          1          i_sw_write_mask[26]       
1          1          1          i_sw_write_mask[25]       
1          1          1          i_sw_write_mask[24]       
1          1          1          i_sw_write_mask[23]       
1          1          1          i_sw_write_mask[22]       
1          1          1          i_sw_write_mask[21]       
1          1          1          i_sw_write_mask[20]       
1          1          1          i_sw_write_mask[19]       
1          1          1          i_sw_write_mask[18]       
1          1          1          i_sw_write_mask[17]       
1          1          1          i_sw_write_mask[16]       
1          1          1          i_sw_write_mask[15]       
1          1          1          i_sw_write_mask[14]       
1          1          1          i_sw_write_mask[13]       
1          1          1          i_sw_write_mask[12]       
1          1          1          i_sw_write_mask[11]       
1          1          1          i_sw_write_mask[10]       
1          1          1          i_sw_write_mask[9]        
1          1          1          i_sw_write_mask[8]        
1          1          1          i_sw_write_mask[7]        
1          1          1          i_sw_write_mask[6]        
1          1          1          i_sw_write_mask[5]        
1          1          1          i_sw_write_mask[4]        
1          1          1          i_sw_write_mask[3]        
1          1          1          i_sw_write_mask[2]        
1          1          1          i_sw_write_mask[1]        
1          1          1          i_sw_write_mask[0]        
0          0          0          i_sw_write_data[31]       
0          0          0          i_sw_write_data[30]       
0          0          0          i_sw_write_data[29]       
0          0          0          i_sw_write_data[28]       
0          0          0          i_sw_write_data[27]       
0          0          0          i_sw_write_data[26]       
0          0          0          i_sw_write_data[25]       
0          0          0          i_sw_write_data[24]       
0          0          0          i_sw_write_data[23]       
0          0          0          i_sw_write_data[22]       
0          0          0          i_sw_write_data[21]       
0          0          0          i_sw_write_data[20]       
0          0          0          i_sw_write_data[19]       
0          0          0          i_sw_write_data[18]       
0          0          0          i_sw_write_data[17]       
0          0          0          i_sw_write_data[16]       
0          0          0          i_sw_write_data[15]       
0          0          0          i_sw_write_data[14]       
0          0          0          i_sw_write_data[13]       
0          0          0          i_sw_write_data[12]       
0          0          0          i_sw_write_data[11]       
0          0          0          i_sw_write_data[10]       
0          0          0          i_sw_write_data[9]        
0          0          0          i_sw_write_data[8]        
0          0          0          i_sw_write_data[7]        
0          0          0          i_sw_write_data[6]        
0          0          0          i_sw_write_data[5]        
0          0          0          i_sw_write_data[4]        
0          0          0          i_sw_write_data[3]        
0          0          0          i_sw_write_data[2]        
1          1          1          i_sw_write_data[1]        
1          1          1          i_sw_write_data[0]        
0          0          0          o_sw_read_data[31]        
0          0          0          o_sw_read_data[30]        
0          0          0          o_sw_read_data[29]        
0          0          0          o_sw_read_data[28]        
0          0          0          o_sw_read_data[27]        
0          0          0          o_sw_read_data[26]        
0          0          0          o_sw_read_data[25]        
0          0          0          o_sw_read_data[24]        
0          0          0          o_sw_read_data[23]        
0          0          0          o_sw_read_data[22]        
0          0          0          o_sw_read_data[21]        
0          0          0          o_sw_read_data[20]        
0          0          0          o_sw_read_data[19]        
0          0          0          o_sw_read_data[18]        
0          0          0          o_sw_read_data[17]        
0          0          0          o_sw_read_data[16]        
0          0          0          o_sw_read_data[15]        
0          0          0          o_sw_read_data[14]        
0          0          0          o_sw_read_data[13]        
0          0          0          o_sw_read_data[12]        
0          0          0          o_sw_read_data[11]        
0          0          0          o_sw_read_data[10]        
0          0          0          o_sw_read_data[9]         
0          0          0          o_sw_read_data[8]         
0          0          0          o_sw_read_data[7]         
0          0          0          o_sw_read_data[6]         
0          0          0          o_sw_read_data[5]         
0          0          0          o_sw_read_data[4]         
0          0          0          o_sw_read_data[3]         
0          0          0          o_sw_read_data[2]         
0          1          0          o_sw_read_data[1]         
0          1          0          o_sw_read_data[0]         
0          0          0          o_sw_value[31]            
0          0          0          o_sw_value[30]            
0          0          0          o_sw_value[29]            
0          0          0          o_sw_value[28]            
0          0          0          o_sw_value[27]            
0          0          0          o_sw_value[26]            
0          0          0          o_sw_value[25]            
0          0          0          o_sw_value[24]            
0          0          0          o_sw_value[23]            
0          0          0          o_sw_value[22]            
0          0          0          o_sw_value[21]            
0          0          0          o_sw_value[20]            
0          0          0          o_sw_value[19]            
0          0          0          o_sw_value[18]            
0          0          0          o_sw_value[17]            
0          0          0          o_sw_value[16]            
0          0          0          o_sw_value[15]            
0          0          0          o_sw_value[14]            
0          0          0          o_sw_value[13]            
0          0          0          o_sw_value[12]            
0          0          0          o_sw_value[11]            
0          0          0          o_sw_value[10]            
0          0          0          o_sw_value[9]             
0          0          0          o_sw_value[8]             
0          0          0          o_sw_value[7]             
0          0          0          o_sw_value[6]             
0          0          0          o_sw_value[5]             
0          0          0          o_sw_value[4]             
0          0          0          o_sw_value[3]             
0          0          0          o_sw_value[2]             
0          1          0          o_sw_value[1]             
0          1          0          o_sw_value[0]             
0          0          0          o_write_trigger           
0          0          0          o_read_trigger            
0          0          0          i_hw_write_enable         
0          0          0          i_hw_write_data[31]       
0          0          0          i_hw_write_data[30]       
0          0          0          i_hw_write_data[29]       
0          0          0          i_hw_write_data[28]       
0          0          0          i_hw_write_data[27]       
0          0          0          i_hw_write_data[26]       
0          0          0          i_hw_write_data[25]       
0          0          0          i_hw_write_data[24]       
0          0          0          i_hw_write_data[23]       
0          0          0          i_hw_write_data[22]       
0          0          0          i_hw_write_data[21]       
0          0          0          i_hw_write_data[20]       
0          0          0          i_hw_write_data[19]       
0          0          0          i_hw_write_data[18]       
0          0          0          i_hw_write_data[17]       
0          0          0          i_hw_write_data[16]       
0          0          0          i_hw_write_data[15]       
0          0          0          i_hw_write_data[14]       
0          0          0          i_hw_write_data[13]       
0          0          0          i_hw_write_data[12]       
0          0          0          i_hw_write_data[11]       
0          0          0          i_hw_write_data[10]       
0          0          0          i_hw_write_data[9]        
0          0          0          i_hw_write_data[8]        
0          0          0          i_hw_write_data[7]        
0          0          0          i_hw_write_data[6]        
0          0          0          i_hw_write_data[5]        
0          0          0          i_hw_write_data[4]        
0          0          0          i_hw_write_data[3]        
0          0          0          i_hw_write_data[2]        
0          0          0          i_hw_write_data[1]        
0          0          0          i_hw_write_data[0]        
0          0          0          i_hw_set[31]              
0          0          0          i_hw_set[30]              
0          0          0          i_hw_set[29]              
0          0          0          i_hw_set[28]              
0          0          0          i_hw_set[27]              
0          0          0          i_hw_set[26]              
0          0          0          i_hw_set[25]              
0          0          0          i_hw_set[24]              
0          0          0          i_hw_set[23]              
0          0          0          i_hw_set[22]              
0          0          0          i_hw_set[21]              
0          0          0          i_hw_set[20]              
0          0          0          i_hw_set[19]              
0          0          0          i_hw_set[18]              
0          0          0          i_hw_set[17]              
0          0          0          i_hw_set[16]              
0          0          0          i_hw_set[15]              
0          0          0          i_hw_set[14]              
0          0          0          i_hw_set[13]              
0          0          0          i_hw_set[12]              
0          0          0          i_hw_set[11]              
0          0          0          i_hw_set[10]              
0          0          0          i_hw_set[9]               
0          0          0          i_hw_set[8]               
0          0          0          i_hw_set[7]               
0          0          0          i_hw_set[6]               
0          0          0          i_hw_set[5]               
0          0          0          i_hw_set[4]               
0          0          0          i_hw_set[3]               
0          0          0          i_hw_set[2]               
0          0          0          i_hw_set[1]               
0          0          0          i_hw_set[0]               
0          0          0          i_hw_clear                
0          0          0          i_value[31]               
0          0          0          i_value[30]               
0          0          0          i_value[29]               
0          0          0          i_value[28]               
0          0          0          i_value[27]               
0          0          0          i_value[26]               
0          0          0          i_value[25]               
0          0          0          i_value[24]               
0          0          0          i_value[23]               
0          0          0          i_value[22]               
0          0          0          i_value[21]               
0          0          0          i_value[20]               
0          0          0          i_value[19]               
0          0          0          i_value[18]               
0          0          0          i_value[17]               
0          0          0          i_value[16]               
0          0          0          i_value[15]               
0          0          0          i_value[14]               
0          0          0          i_value[13]               
0          0          0          i_value[12]               
0          0          0          i_value[11]               
0          0          0          i_value[10]               
0          0          0          i_value[9]                
0          0          0          i_value[8]                
0          0          0          i_value[7]                
0          0          0          i_value[6]                
0          0          0          i_value[5]                
0          0          0          i_value[4]                
0          0          0          i_value[3]                
0          0          0          i_value[2]                
0          0          0          i_value[1]                
0          0          0          i_value[0]                
0          0          0          i_mask[31]                
0          0          0          i_mask[30]                
0          0          0          i_mask[29]                
0          0          0          i_mask[28]                
0          0          0          i_mask[27]                
0          0          0          i_mask[26]                
0          0          0          i_mask[25]                
0          0          0          i_mask[24]                
0          0          0          i_mask[23]                
0          0          0          i_mask[22]                
0          0          0          i_mask[21]                
0          0          0          i_mask[20]                
0          0          0          i_mask[19]                
0          0          0          i_mask[18]                
0          0          0          i_mask[17]                
0          0          0          i_mask[16]                
0          0          0          i_mask[15]                
0          0          0          i_mask[14]                
0          0          0          i_mask[13]                
0          0          0          i_mask[12]                
0          0          0          i_mask[11]                
0          0          0          i_mask[10]                
0          0          0          i_mask[9]                 
0          0          0          i_mask[8]                 
0          0          0          i_mask[7]                 
0          0          0          i_mask[6]                 
0          0          0          i_mask[5]                 
0          0          0          i_mask[4]                 
0          0          0          i_mask[3]                 
0          0          0          i_mask[2]                 
0          0          0          i_mask[1]                 
0          0          0          i_mask[0]                 
0          0          0          o_value[31]               
0          0          0          o_value[30]               
0          0          0          o_value[29]               
0          0          0          o_value[28]               
0          0          0          o_value[27]               
0          0          0          o_value[26]               
0          0          0          o_value[25]               
0          0          0          o_value[24]               
0          0          0          o_value[23]               
0          0          0          o_value[22]               
0          0          0          o_value[21]               
0          0          0          o_value[20]               
0          0          0          o_value[19]               
0          0          0          o_value[18]               
0          0          0          o_value[17]               
0          0          0          o_value[16]               
0          0          0          o_value[15]               
0          0          0          o_value[14]               
0          0          0          o_value[13]               
0          0          0          o_value[12]               
0          0          0          o_value[11]               
0          0          0          o_value[10]               
0          0          0          o_value[9]                
0          0          0          o_value[8]                
0          0          0          o_value[7]                
0          0          0          o_value[6]                
0          0          0          o_value[5]                
0          0          0          o_value[4]                
0          0          0          o_value[3]                
0          0          0          o_value[2]                
0          1          0          o_value[1]                
0          1          0          o_value[0]                
0          0          0          o_value_unmasked[31]      
0          0          0          o_value_unmasked[30]      
0          0          0          o_value_unmasked[29]      
0          0          0          o_value_unmasked[28]      
0          0          0          o_value_unmasked[27]      
0          0          0          o_value_unmasked[26]      
0          0          0          o_value_unmasked[25]      
0          0          0          o_value_unmasked[24]      
0          0          0          o_value_unmasked[23]      
0          0          0          o_value_unmasked[22]      
0          0          0          o_value_unmasked[21]      
0          0          0          o_value_unmasked[20]      
0          0          0          o_value_unmasked[19]      
0          0          0          o_value_unmasked[18]      
0          0          0          o_value_unmasked[17]      
0          0          0          o_value_unmasked[16]      
0          0          0          o_value_unmasked[15]      
0          0          0          o_value_unmasked[14]      
0          0          0          o_value_unmasked[13]      
0          0          0          o_value_unmasked[12]      
0          0          0          o_value_unmasked[11]      
0          0          0          o_value_unmasked[10]      
0          0          0          o_value_unmasked[9]       
0          0          0          o_value_unmasked[8]       
0          0          0          o_value_unmasked[7]       
0          0          0          o_value_unmasked[6]       
0          0          0          o_value_unmasked[5]       
0          0          0          o_value_unmasked[4]       
0          0          0          o_value_unmasked[3]       
0          0          0          o_value_unmasked[2]       
0          1          0          o_value_unmasked[1]       
0          1          0          o_value_unmasked[0]       
1          1          1          w_sw_update[1]            
0          0          0          w_sw_update[0]            
0          0          0          w_sw_write_done           
0          0          0          w_hw_update               
0          0          0          w_trigger[1]              
0          0          0          w_trigger[0]              
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          1          0          w_read_data[1]            
0          1          0          w_read_data[0]            
0          0          0          w_value[31]               
0          0          0          w_value[30]               
0          0          0          w_value[29]               
0          0          0          w_value[28]               
0          0          0          w_value[27]               
0          0          0          w_value[26]               
0          0          0          w_value[25]               
0          0          0          w_value[24]               
0          0          0          w_value[23]               
0          0          0          w_value[22]               
0          0          0          w_value[21]               
0          0          0          w_value[20]               
0          0          0          w_value[19]               
0          0          0          w_value[18]               
0          0          0          w_value[17]               
0          0          0          w_value[16]               
0          0          0          w_value[15]               
0          0          0          w_value[14]               
0          0          0          w_value[13]               
0          0          0          w_value[12]               
0          0          0          w_value[11]               
0          0          0          w_value[10]               
0          0          0          w_value[9]                
0          0          0          w_value[8]                
0          0          0          w_value[7]                
0          0          0          w_value[6]                
0          0          0          w_value[5]                
0          0          0          w_value[4]                
0          0          0          w_value[3]                
0          0          0          w_value[2]                
0          1          0          w_value[1]                
0          1          0          w_value[0]                

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.u_register
Type name: rggen_default_register
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_default_register.v
Number of covered signal bits: 80 of 280
Number of uncovered signal bits: 200 of 280
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 5 of 280
Number of signal bits partially toggled(fall): 0 of 280

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
1          1          1          o_register_active         
1          1          1          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          1          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          1          0          o_register_value[0]       
1          1          1          o_bit_field_valid         
1          1          1          o_bit_field_read_mask[31] 
1          1          1          o_bit_field_read_mask[30] 
1          1          1          o_bit_field_read_mask[29] 
1          1          1          o_bit_field_read_mask[28] 
1          1          1          o_bit_field_read_mask[27] 
1          1          1          o_bit_field_read_mask[26] 
1          1          1          o_bit_field_read_mask[25] 
1          1          1          o_bit_field_read_mask[24] 
1          1          1          o_bit_field_read_mask[23] 
1          1          1          o_bit_field_read_mask[22] 
1          1          1          o_bit_field_read_mask[21] 
1          1          1          o_bit_field_read_mask[20] 
1          1          1          o_bit_field_read_mask[19] 
1          1          1          o_bit_field_read_mask[18] 
1          1          1          o_bit_field_read_mask[17] 
1          1          1          o_bit_field_read_mask[16] 
1          1          1          o_bit_field_read_mask[15] 
1          1          1          o_bit_field_read_mask[14] 
1          1          1          o_bit_field_read_mask[13] 
1          1          1          o_bit_field_read_mask[12] 
1          1          1          o_bit_field_read_mask[11] 
1          1          1          o_bit_field_read_mask[10] 
1          1          1          o_bit_field_read_mask[9]  
1          1          1          o_bit_field_read_mask[8]  
1          1          1          o_bit_field_read_mask[7]  
1          1          1          o_bit_field_read_mask[6]  
1          1          1          o_bit_field_read_mask[5]  
1          1          1          o_bit_field_read_mask[4]  
1          1          1          o_bit_field_read_mask[3]  
1          1          1          o_bit_field_read_mask[2]  
1          1          1          o_bit_field_read_mask[1]  
1          1          1          o_bit_field_read_mask[0]  
1          1          1          o_bit_field_write_mask[31] 
1          1          1          o_bit_field_write_mask[30] 
1          1          1          o_bit_field_write_mask[29] 
1          1          1          o_bit_field_write_mask[28] 
1          1          1          o_bit_field_write_mask[27] 
1          1          1          o_bit_field_write_mask[26] 
1          1          1          o_bit_field_write_mask[25] 
1          1          1          o_bit_field_write_mask[24] 
1          1          1          o_bit_field_write_mask[23] 
1          1          1          o_bit_field_write_mask[22] 
1          1          1          o_bit_field_write_mask[21] 
1          1          1          o_bit_field_write_mask[20] 
1          1          1          o_bit_field_write_mask[19] 
1          1          1          o_bit_field_write_mask[18] 
1          1          1          o_bit_field_write_mask[17] 
1          1          1          o_bit_field_write_mask[16] 
1          1          1          o_bit_field_write_mask[15] 
1          1          1          o_bit_field_write_mask[14] 
1          1          1          o_bit_field_write_mask[13] 
1          1          1          o_bit_field_write_mask[12] 
1          1          1          o_bit_field_write_mask[11] 
1          1          1          o_bit_field_write_mask[10] 
1          1          1          o_bit_field_write_mask[9] 
1          1          1          o_bit_field_write_mask[8] 
1          1          1          o_bit_field_write_mask[7] 
1          1          1          o_bit_field_write_mask[6] 
1          1          1          o_bit_field_write_mask[5] 
1          1          1          o_bit_field_write_mask[4] 
1          1          1          o_bit_field_write_mask[3] 
1          1          1          o_bit_field_write_mask[2] 
1          1          1          o_bit_field_write_mask[1] 
1          1          1          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          1          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          1          0          i_bit_field_value[0]      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered signal bits: 83 of 318
Number of uncovered signal bits: 235 of 318
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 6 of 318
Number of signal bits partially toggled(fall): 0 of 318

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
1          1          1          o_register_active         
1          1          1          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          1          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          1          0          o_register_value[0]       
0          0          0          i_additional_match        
1          1          1          o_bit_field_valid         
1          1          1          o_bit_field_read_mask[31] 
1          1          1          o_bit_field_read_mask[30] 
1          1          1          o_bit_field_read_mask[29] 
1          1          1          o_bit_field_read_mask[28] 
1          1          1          o_bit_field_read_mask[27] 
1          1          1          o_bit_field_read_mask[26] 
1          1          1          o_bit_field_read_mask[25] 
1          1          1          o_bit_field_read_mask[24] 
1          1          1          o_bit_field_read_mask[23] 
1          1          1          o_bit_field_read_mask[22] 
1          1          1          o_bit_field_read_mask[21] 
1          1          1          o_bit_field_read_mask[20] 
1          1          1          o_bit_field_read_mask[19] 
1          1          1          o_bit_field_read_mask[18] 
1          1          1          o_bit_field_read_mask[17] 
1          1          1          o_bit_field_read_mask[16] 
1          1          1          o_bit_field_read_mask[15] 
1          1          1          o_bit_field_read_mask[14] 
1          1          1          o_bit_field_read_mask[13] 
1          1          1          o_bit_field_read_mask[12] 
1          1          1          o_bit_field_read_mask[11] 
1          1          1          o_bit_field_read_mask[10] 
1          1          1          o_bit_field_read_mask[9]  
1          1          1          o_bit_field_read_mask[8]  
1          1          1          o_bit_field_read_mask[7]  
1          1          1          o_bit_field_read_mask[6]  
1          1          1          o_bit_field_read_mask[5]  
1          1          1          o_bit_field_read_mask[4]  
1          1          1          o_bit_field_read_mask[3]  
1          1          1          o_bit_field_read_mask[2]  
1          1          1          o_bit_field_read_mask[1]  
1          1          1          o_bit_field_read_mask[0]  
1          1          1          o_bit_field_write_mask[31] 
1          1          1          o_bit_field_write_mask[30] 
1          1          1          o_bit_field_write_mask[29] 
1          1          1          o_bit_field_write_mask[28] 
1          1          1          o_bit_field_write_mask[27] 
1          1          1          o_bit_field_write_mask[26] 
1          1          1          o_bit_field_write_mask[25] 
1          1          1          o_bit_field_write_mask[24] 
1          1          1          o_bit_field_write_mask[23] 
1          1          1          o_bit_field_write_mask[22] 
1          1          1          o_bit_field_write_mask[21] 
1          1          1          o_bit_field_write_mask[20] 
1          1          1          o_bit_field_write_mask[19] 
1          1          1          o_bit_field_write_mask[18] 
1          1          1          o_bit_field_write_mask[17] 
1          1          1          o_bit_field_write_mask[16] 
1          1          1          o_bit_field_write_mask[15] 
1          1          1          o_bit_field_write_mask[14] 
1          1          1          o_bit_field_write_mask[13] 
1          1          1          o_bit_field_write_mask[12] 
1          1          1          o_bit_field_write_mask[11] 
1          1          1          o_bit_field_write_mask[10] 
1          1          1          o_bit_field_write_mask[9] 
1          1          1          o_bit_field_write_mask[8] 
1          1          1          o_bit_field_write_mask[7] 
1          1          1          o_bit_field_write_mask[6] 
1          1          1          o_bit_field_write_mask[5] 
1          1          1          o_bit_field_write_mask[4] 
1          1          1          o_bit_field_write_mask[3] 
1          1          1          o_bit_field_write_mask[2] 
1          1          1          o_bit_field_write_mask[1] 
1          1          1          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          1          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          1          0          i_bit_field_value[0]      
1          1          1          w_match                   
1          1          1          w_active                  
1          1          1          w_frontdoor_valid         
0          0          0          w_backdoor_valid          
0          0          0          w_pending_valid           
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          1          0          w_read_data[0]            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered signal bits: 5 of 16
Number of uncovered signal bits: 11 of 16
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 16
Number of signal bits partially toggled(fall): 0 of 16

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_address[9]              
0          0          0          i_address[8]              
0          0          0          i_address[7]              
0          0          0          i_address[6]              
0          0          0          i_address[5]              
0          0          0          i_address[4]              
1          1          1          i_address[3]              
1          1          1          i_address[2]              
0          0          0          i_address[1]              
0          0          0          i_address[0]              
0          0          0          i_access[1]               
1          1          1          i_access[0]               
0          0          0          i_additional_match        
1          1          1          o_match                   
1          1          1          w_address_match           
0          0          0          w_access_match            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.u_register.u_register_common.u_read_data_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 1 of 65
Number of uncovered signal bits: 64 of 65
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 2 of 65
Number of signal bits partially toggled(fall): 0 of 65

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_select                  
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          1          0          i_data[0]                 
0          0          0          o_data[31]                
0          0          0          o_data[30]                
0          0          0          o_data[29]                
0          0          0          o_data[28]                
0          0          0          o_data[27]                
0          0          0          o_data[26]                
0          0          0          o_data[25]                
0          0          0          o_data[24]                
0          0          0          o_data[23]                
0          0          0          o_data[22]                
0          0          0          o_data[21]                
0          0          0          o_data[20]                
0          0          0          o_data[19]                
0          0          0          o_data[18]                
0          0          0          o_data[17]                
0          0          0          o_data[16]                
0          0          0          o_data[15]                
0          0          0          o_data[14]                
0          0          0          o_data[13]                
0          0          0          o_data[12]                
0          0          0          o_data[11]                
0          0          0          o_data[10]                
0          0          0          o_data[9]                 
0          0          0          o_data[8]                 
0          0          0          o_data[7]                 
0          0          0          o_data[6]                 
0          0          0          o_data[5]                 
0          0          0          o_data[4]                 
0          0          0          o_data[3]                 
0          0          0          o_data[2]                 
0          0          0          o_data[1]                 
0          1          0          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_EN_IRQ_REG.g_ECC_EN_IRQ_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered signal bits: 69 of 461
Number of uncovered signal bits: 392 of 461
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 7 of 461
Number of signal bits partially toggled(fall): 0 of 461

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_sw_valid                
1          1          1          i_sw_read_mask[31]        
1          1          1          i_sw_read_mask[30]        
1          1          1          i_sw_read_mask[29]        
1          1          1          i_sw_read_mask[28]        
1          1          1          i_sw_read_mask[27]        
1          1          1          i_sw_read_mask[26]        
1          1          1          i_sw_read_mask[25]        
1          1          1          i_sw_read_mask[24]        
1          1          1          i_sw_read_mask[23]        
1          1          1          i_sw_read_mask[22]        
1          1          1          i_sw_read_mask[21]        
1          1          1          i_sw_read_mask[20]        
1          1          1          i_sw_read_mask[19]        
1          1          1          i_sw_read_mask[18]        
1          1          1          i_sw_read_mask[17]        
1          1          1          i_sw_read_mask[16]        
1          1          1          i_sw_read_mask[15]        
1          1          1          i_sw_read_mask[14]        
1          1          1          i_sw_read_mask[13]        
1          1          1          i_sw_read_mask[12]        
1          1          1          i_sw_read_mask[11]        
1          1          1          i_sw_read_mask[10]        
1          1          1          i_sw_read_mask[9]         
1          1          1          i_sw_read_mask[8]         
1          1          1          i_sw_read_mask[7]         
1          1          1          i_sw_read_mask[6]         
1          1          1          i_sw_read_mask[5]         
1          1          1          i_sw_read_mask[4]         
1          1          1          i_sw_read_mask[3]         
1          1          1          i_sw_read_mask[2]         
1          1          1          i_sw_read_mask[1]         
1          1          1          i_sw_read_mask[0]         
0          0          0          i_sw_write_enable         
1          1          1          i_sw_write_mask[31]       
1          1          1          i_sw_write_mask[30]       
1          1          1          i_sw_write_mask[29]       
1          1          1          i_sw_write_mask[28]       
1          1          1          i_sw_write_mask[27]       
1          1          1          i_sw_write_mask[26]       
1          1          1          i_sw_write_mask[25]       
1          1          1          i_sw_write_mask[24]       
1          1          1          i_sw_write_mask[23]       
1          1          1          i_sw_write_mask[22]       
1          1          1          i_sw_write_mask[21]       
1          1          1          i_sw_write_mask[20]       
1          1          1          i_sw_write_mask[19]       
1          1          1          i_sw_write_mask[18]       
1          1          1          i_sw_write_mask[17]       
1          1          1          i_sw_write_mask[16]       
1          1          1          i_sw_write_mask[15]       
1          1          1          i_sw_write_mask[14]       
1          1          1          i_sw_write_mask[13]       
1          1          1          i_sw_write_mask[12]       
1          1          1          i_sw_write_mask[11]       
1          1          1          i_sw_write_mask[10]       
1          1          1          i_sw_write_mask[9]        
1          1          1          i_sw_write_mask[8]        
1          1          1          i_sw_write_mask[7]        
1          1          1          i_sw_write_mask[6]        
1          1          1          i_sw_write_mask[5]        
1          1          1          i_sw_write_mask[4]        
1          1          1          i_sw_write_mask[3]        
1          1          1          i_sw_write_mask[2]        
1          1          1          i_sw_write_mask[1]        
1          1          1          i_sw_write_mask[0]        
0          0          0          i_sw_write_data[31]       
0          0          0          i_sw_write_data[30]       
0          0          0          i_sw_write_data[29]       
0          0          0          i_sw_write_data[28]       
0          0          0          i_sw_write_data[27]       
0          0          0          i_sw_write_data[26]       
0          0          0          i_sw_write_data[25]       
0          0          0          i_sw_write_data[24]       
0          0          0          i_sw_write_data[23]       
0          0          0          i_sw_write_data[22]       
0          0          0          i_sw_write_data[21]       
0          0          0          i_sw_write_data[20]       
0          0          0          i_sw_write_data[19]       
0          0          0          i_sw_write_data[18]       
0          0          0          i_sw_write_data[17]       
0          0          0          i_sw_write_data[16]       
0          0          0          i_sw_write_data[15]       
0          0          0          i_sw_write_data[14]       
0          0          0          i_sw_write_data[13]       
0          0          0          i_sw_write_data[12]       
0          0          0          i_sw_write_data[11]       
0          0          0          i_sw_write_data[10]       
0          0          0          i_sw_write_data[9]        
0          0          0          i_sw_write_data[8]        
0          0          0          i_sw_write_data[7]        
0          0          0          i_sw_write_data[6]        
0          0          0          i_sw_write_data[5]        
0          0          0          i_sw_write_data[4]        
0          0          0          i_sw_write_data[3]        
0          0          0          i_sw_write_data[2]        
1          1          1          i_sw_write_data[1]        
1          1          1          i_sw_write_data[0]        
0          0          0          o_sw_read_data[31]        
0          0          0          o_sw_read_data[30]        
0          0          0          o_sw_read_data[29]        
0          0          0          o_sw_read_data[28]        
0          0          0          o_sw_read_data[27]        
0          0          0          o_sw_read_data[26]        
0          0          0          o_sw_read_data[25]        
0          0          0          o_sw_read_data[24]        
0          0          0          o_sw_read_data[23]        
0          0          0          o_sw_read_data[22]        
0          0          0          o_sw_read_data[21]        
0          0          0          o_sw_read_data[20]        
0          0          0          o_sw_read_data[19]        
0          0          0          o_sw_read_data[18]        
0          0          0          o_sw_read_data[17]        
0          0          0          o_sw_read_data[16]        
0          0          0          o_sw_read_data[15]        
0          0          0          o_sw_read_data[14]        
0          0          0          o_sw_read_data[13]        
0          0          0          o_sw_read_data[12]        
0          0          0          o_sw_read_data[11]        
0          0          0          o_sw_read_data[10]        
0          0          0          o_sw_read_data[9]         
0          0          0          o_sw_read_data[8]         
0          0          0          o_sw_read_data[7]         
0          0          0          o_sw_read_data[6]         
0          0          0          o_sw_read_data[5]         
0          0          0          o_sw_read_data[4]         
0          0          0          o_sw_read_data[3]         
0          0          0          o_sw_read_data[2]         
0          0          0          o_sw_read_data[1]         
0          1          0          o_sw_read_data[0]         
0          0          0          o_sw_value[31]            
0          0          0          o_sw_value[30]            
0          0          0          o_sw_value[29]            
0          0          0          o_sw_value[28]            
0          0          0          o_sw_value[27]            
0          0          0          o_sw_value[26]            
0          0          0          o_sw_value[25]            
0          0          0          o_sw_value[24]            
0          0          0          o_sw_value[23]            
0          0          0          o_sw_value[22]            
0          0          0          o_sw_value[21]            
0          0          0          o_sw_value[20]            
0          0          0          o_sw_value[19]            
0          0          0          o_sw_value[18]            
0          0          0          o_sw_value[17]            
0          0          0          o_sw_value[16]            
0          0          0          o_sw_value[15]            
0          0          0          o_sw_value[14]            
0          0          0          o_sw_value[13]            
0          0          0          o_sw_value[12]            
0          0          0          o_sw_value[11]            
0          0          0          o_sw_value[10]            
0          0          0          o_sw_value[9]             
0          0          0          o_sw_value[8]             
0          0          0          o_sw_value[7]             
0          0          0          o_sw_value[6]             
0          0          0          o_sw_value[5]             
0          0          0          o_sw_value[4]             
0          0          0          o_sw_value[3]             
0          0          0          o_sw_value[2]             
0          0          0          o_sw_value[1]             
0          1          0          o_sw_value[0]             
0          0          0          o_write_trigger           
0          0          0          o_read_trigger            
0          0          0          i_hw_write_enable         
0          0          0          i_hw_write_data[31]       
0          0          0          i_hw_write_data[30]       
0          0          0          i_hw_write_data[29]       
0          0          0          i_hw_write_data[28]       
0          0          0          i_hw_write_data[27]       
0          0          0          i_hw_write_data[26]       
0          0          0          i_hw_write_data[25]       
0          0          0          i_hw_write_data[24]       
0          0          0          i_hw_write_data[23]       
0          0          0          i_hw_write_data[22]       
0          0          0          i_hw_write_data[21]       
0          0          0          i_hw_write_data[20]       
0          0          0          i_hw_write_data[19]       
0          0          0          i_hw_write_data[18]       
0          0          0          i_hw_write_data[17]       
0          0          0          i_hw_write_data[16]       
0          0          0          i_hw_write_data[15]       
0          0          0          i_hw_write_data[14]       
0          0          0          i_hw_write_data[13]       
0          0          0          i_hw_write_data[12]       
0          0          0          i_hw_write_data[11]       
0          0          0          i_hw_write_data[10]       
0          0          0          i_hw_write_data[9]        
0          0          0          i_hw_write_data[8]        
0          0          0          i_hw_write_data[7]        
0          0          0          i_hw_write_data[6]        
0          0          0          i_hw_write_data[5]        
0          0          0          i_hw_write_data[4]        
0          0          0          i_hw_write_data[3]        
0          0          0          i_hw_write_data[2]        
0          0          0          i_hw_write_data[1]        
0          0          0          i_hw_write_data[0]        
0          0          0          i_hw_set[31]              
0          0          0          i_hw_set[30]              
0          0          0          i_hw_set[29]              
0          0          0          i_hw_set[28]              
0          0          0          i_hw_set[27]              
0          0          0          i_hw_set[26]              
0          0          0          i_hw_set[25]              
0          0          0          i_hw_set[24]              
0          0          0          i_hw_set[23]              
0          0          0          i_hw_set[22]              
0          0          0          i_hw_set[21]              
0          0          0          i_hw_set[20]              
0          0          0          i_hw_set[19]              
0          0          0          i_hw_set[18]              
0          0          0          i_hw_set[17]              
0          0          0          i_hw_set[16]              
0          0          0          i_hw_set[15]              
0          0          0          i_hw_set[14]              
0          0          0          i_hw_set[13]              
0          0          0          i_hw_set[12]              
0          0          0          i_hw_set[11]              
0          0          0          i_hw_set[10]              
0          0          0          i_hw_set[9]               
0          0          0          i_hw_set[8]               
0          0          0          i_hw_set[7]               
0          0          0          i_hw_set[6]               
0          0          0          i_hw_set[5]               
0          0          0          i_hw_set[4]               
0          0          0          i_hw_set[3]               
0          0          0          i_hw_set[2]               
0          0          0          i_hw_set[1]               
0          0          0          i_hw_set[0]               
0          0          0          i_hw_clear[31]            
0          0          0          i_hw_clear[30]            
0          0          0          i_hw_clear[29]            
0          0          0          i_hw_clear[28]            
0          0          0          i_hw_clear[27]            
0          0          0          i_hw_clear[26]            
0          0          0          i_hw_clear[25]            
0          0          0          i_hw_clear[24]            
0          0          0          i_hw_clear[23]            
0          0          0          i_hw_clear[22]            
0          0          0          i_hw_clear[21]            
0          0          0          i_hw_clear[20]            
0          0          0          i_hw_clear[19]            
0          0          0          i_hw_clear[18]            
0          0          0          i_hw_clear[17]            
0          0          0          i_hw_clear[16]            
0          0          0          i_hw_clear[15]            
0          0          0          i_hw_clear[14]            
0          0          0          i_hw_clear[13]            
0          0          0          i_hw_clear[12]            
0          0          0          i_hw_clear[11]            
0          0          0          i_hw_clear[10]            
0          0          0          i_hw_clear[9]             
0          0          0          i_hw_clear[8]             
0          0          0          i_hw_clear[7]             
0          0          0          i_hw_clear[6]             
0          0          0          i_hw_clear[5]             
0          0          0          i_hw_clear[4]             
0          0          0          i_hw_clear[3]             
0          0          0          i_hw_clear[2]             
0          0          0          i_hw_clear[1]             
0          0          0          i_hw_clear[0]             
0          0          0          i_value[31]               
0          0          0          i_value[30]               
0          0          0          i_value[29]               
0          0          0          i_value[28]               
0          0          0          i_value[27]               
0          0          0          i_value[26]               
0          0          0          i_value[25]               
0          0          0          i_value[24]               
0          0          0          i_value[23]               
0          0          0          i_value[22]               
0          0          0          i_value[21]               
0          0          0          i_value[20]               
0          0          0          i_value[19]               
0          0          0          i_value[18]               
0          0          0          i_value[17]               
0          0          0          i_value[16]               
0          0          0          i_value[15]               
0          0          0          i_value[14]               
0          0          0          i_value[13]               
0          0          0          i_value[12]               
0          0          0          i_value[11]               
0          0          0          i_value[10]               
0          0          0          i_value[9]                
0          0          0          i_value[8]                
0          0          0          i_value[7]                
0          0          0          i_value[6]                
0          0          0          i_value[5]                
0          0          0          i_value[4]                
0          0          0          i_value[3]                
0          0          0          i_value[2]                
0          0          0          i_value[1]                
0          0          0          i_value[0]                
0          0          0          i_mask[31]                
0          0          0          i_mask[30]                
0          0          0          i_mask[29]                
0          0          0          i_mask[28]                
0          0          0          i_mask[27]                
0          0          0          i_mask[26]                
0          0          0          i_mask[25]                
0          0          0          i_mask[24]                
0          0          0          i_mask[23]                
0          0          0          i_mask[22]                
0          0          0          i_mask[21]                
0          0          0          i_mask[20]                
0          0          0          i_mask[19]                
0          0          0          i_mask[18]                
0          0          0          i_mask[17]                
0          0          0          i_mask[16]                
0          0          0          i_mask[15]                
0          0          0          i_mask[14]                
0          0          0          i_mask[13]                
0          0          0          i_mask[12]                
0          0          0          i_mask[11]                
0          0          0          i_mask[10]                
0          0          0          i_mask[9]                 
0          0          0          i_mask[8]                 
0          0          0          i_mask[7]                 
0          0          0          i_mask[6]                 
0          0          0          i_mask[5]                 
0          0          0          i_mask[4]                 
0          0          0          i_mask[3]                 
0          0          0          i_mask[2]                 
0          0          0          i_mask[1]                 
0          0          0          i_mask[0]                 
0          0          0          o_value[31]               
0          0          0          o_value[30]               
0          0          0          o_value[29]               
0          0          0          o_value[28]               
0          0          0          o_value[27]               
0          0          0          o_value[26]               
0          0          0          o_value[25]               
0          0          0          o_value[24]               
0          0          0          o_value[23]               
0          0          0          o_value[22]               
0          0          0          o_value[21]               
0          0          0          o_value[20]               
0          0          0          o_value[19]               
0          0          0          o_value[18]               
0          0          0          o_value[17]               
0          0          0          o_value[16]               
0          0          0          o_value[15]               
0          0          0          o_value[14]               
0          0          0          o_value[13]               
0          0          0          o_value[12]               
0          0          0          o_value[11]               
0          0          0          o_value[10]               
0          0          0          o_value[9]                
0          0          0          o_value[8]                
0          0          0          o_value[7]                
0          0          0          o_value[6]                
0          0          0          o_value[5]                
0          0          0          o_value[4]                
0          0          0          o_value[3]                
0          0          0          o_value[2]                
0          0          0          o_value[1]                
0          1          0          o_value[0]                
0          0          0          o_value_unmasked[31]      
0          0          0          o_value_unmasked[30]      
0          0          0          o_value_unmasked[29]      
0          0          0          o_value_unmasked[28]      
0          0          0          o_value_unmasked[27]      
0          0          0          o_value_unmasked[26]      
0          0          0          o_value_unmasked[25]      
0          0          0          o_value_unmasked[24]      
0          0          0          o_value_unmasked[23]      
0          0          0          o_value_unmasked[22]      
0          0          0          o_value_unmasked[21]      
0          0          0          o_value_unmasked[20]      
0          0          0          o_value_unmasked[19]      
0          0          0          o_value_unmasked[18]      
0          0          0          o_value_unmasked[17]      
0          0          0          o_value_unmasked[16]      
0          0          0          o_value_unmasked[15]      
0          0          0          o_value_unmasked[14]      
0          0          0          o_value_unmasked[13]      
0          0          0          o_value_unmasked[12]      
0          0          0          o_value_unmasked[11]      
0          0          0          o_value_unmasked[10]      
0          0          0          o_value_unmasked[9]       
0          0          0          o_value_unmasked[8]       
0          0          0          o_value_unmasked[7]       
0          0          0          o_value_unmasked[6]       
0          0          0          o_value_unmasked[5]       
0          0          0          o_value_unmasked[4]       
0          0          0          o_value_unmasked[3]       
0          0          0          o_value_unmasked[2]       
0          0          0          o_value_unmasked[1]       
0          1          0          o_value_unmasked[0]       
1          1          1          w_sw_update[1]            
0          0          0          w_sw_update[0]            
0          0          0          w_sw_write_done           
0          0          0          w_hw_update               
0          0          0          w_trigger[1]              
0          0          0          w_trigger[0]              
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          1          0          w_read_data[0]            
0          0          0          w_value[31]               
0          0          0          w_value[30]               
0          0          0          w_value[29]               
0          0          0          w_value[28]               
0          0          0          w_value[27]               
0          0          0          w_value[26]               
0          0          0          w_value[25]               
0          0          0          w_value[24]               
0          0          0          w_value[23]               
0          0          0          w_value[22]               
0          0          0          w_value[21]               
0          0          0          w_value[20]               
0          0          0          w_value[19]               
0          0          0          w_value[18]               
0          0          0          w_value[17]               
0          0          0          w_value[16]               
0          0          0          w_value[15]               
0          0          0          w_value[14]               
0          0          0          w_value[13]               
0          0          0          w_value[12]               
0          0          0          w_value[11]               
0          0          0          w_value[10]               
0          0          0          w_value[9]                
0          0          0          w_value[8]                
0          0          0          w_value[7]                
0          0          0          w_value[6]                
0          0          0          w_value[5]                
0          0          0          w_value[4]                
0          0          0          w_value[3]                
0          0          0          w_value[2]                
0          0          0          w_value[1]                
0          1          0          w_value[0]                

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.u_register
Type name: rggen_default_register
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_default_register.v
Number of covered signal bits: 80 of 280
Number of uncovered signal bits: 200 of 280
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 5 of 280
Number of signal bits partially toggled(fall): 0 of 280

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
1          1          1          o_register_active         
1          1          1          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          1          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          1          0          o_register_value[0]       
1          1          1          o_bit_field_valid         
1          1          1          o_bit_field_read_mask[31] 
1          1          1          o_bit_field_read_mask[30] 
1          1          1          o_bit_field_read_mask[29] 
1          1          1          o_bit_field_read_mask[28] 
1          1          1          o_bit_field_read_mask[27] 
1          1          1          o_bit_field_read_mask[26] 
1          1          1          o_bit_field_read_mask[25] 
1          1          1          o_bit_field_read_mask[24] 
1          1          1          o_bit_field_read_mask[23] 
1          1          1          o_bit_field_read_mask[22] 
1          1          1          o_bit_field_read_mask[21] 
1          1          1          o_bit_field_read_mask[20] 
1          1          1          o_bit_field_read_mask[19] 
1          1          1          o_bit_field_read_mask[18] 
1          1          1          o_bit_field_read_mask[17] 
1          1          1          o_bit_field_read_mask[16] 
1          1          1          o_bit_field_read_mask[15] 
1          1          1          o_bit_field_read_mask[14] 
1          1          1          o_bit_field_read_mask[13] 
1          1          1          o_bit_field_read_mask[12] 
1          1          1          o_bit_field_read_mask[11] 
1          1          1          o_bit_field_read_mask[10] 
1          1          1          o_bit_field_read_mask[9]  
1          1          1          o_bit_field_read_mask[8]  
1          1          1          o_bit_field_read_mask[7]  
1          1          1          o_bit_field_read_mask[6]  
1          1          1          o_bit_field_read_mask[5]  
1          1          1          o_bit_field_read_mask[4]  
1          1          1          o_bit_field_read_mask[3]  
1          1          1          o_bit_field_read_mask[2]  
1          1          1          o_bit_field_read_mask[1]  
1          1          1          o_bit_field_read_mask[0]  
1          1          1          o_bit_field_write_mask[31] 
1          1          1          o_bit_field_write_mask[30] 
1          1          1          o_bit_field_write_mask[29] 
1          1          1          o_bit_field_write_mask[28] 
1          1          1          o_bit_field_write_mask[27] 
1          1          1          o_bit_field_write_mask[26] 
1          1          1          o_bit_field_write_mask[25] 
1          1          1          o_bit_field_write_mask[24] 
1          1          1          o_bit_field_write_mask[23] 
1          1          1          o_bit_field_write_mask[22] 
1          1          1          o_bit_field_write_mask[21] 
1          1          1          o_bit_field_write_mask[20] 
1          1          1          o_bit_field_write_mask[19] 
1          1          1          o_bit_field_write_mask[18] 
1          1          1          o_bit_field_write_mask[17] 
1          1          1          o_bit_field_write_mask[16] 
1          1          1          o_bit_field_write_mask[15] 
1          1          1          o_bit_field_write_mask[14] 
1          1          1          o_bit_field_write_mask[13] 
1          1          1          o_bit_field_write_mask[12] 
1          1          1          o_bit_field_write_mask[11] 
1          1          1          o_bit_field_write_mask[10] 
1          1          1          o_bit_field_write_mask[9] 
1          1          1          o_bit_field_write_mask[8] 
1          1          1          o_bit_field_write_mask[7] 
1          1          1          o_bit_field_write_mask[6] 
1          1          1          o_bit_field_write_mask[5] 
1          1          1          o_bit_field_write_mask[4] 
1          1          1          o_bit_field_write_mask[3] 
1          1          1          o_bit_field_write_mask[2] 
1          1          1          o_bit_field_write_mask[1] 
1          1          1          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          1          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          1          0          i_bit_field_value[0]      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered signal bits: 83 of 318
Number of uncovered signal bits: 235 of 318
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 6 of 318
Number of signal bits partially toggled(fall): 0 of 318

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
1          1          1          o_register_active         
1          1          1          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          1          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          1          0          o_register_value[0]       
0          0          0          i_additional_match        
1          1          1          o_bit_field_valid         
1          1          1          o_bit_field_read_mask[31] 
1          1          1          o_bit_field_read_mask[30] 
1          1          1          o_bit_field_read_mask[29] 
1          1          1          o_bit_field_read_mask[28] 
1          1          1          o_bit_field_read_mask[27] 
1          1          1          o_bit_field_read_mask[26] 
1          1          1          o_bit_field_read_mask[25] 
1          1          1          o_bit_field_read_mask[24] 
1          1          1          o_bit_field_read_mask[23] 
1          1          1          o_bit_field_read_mask[22] 
1          1          1          o_bit_field_read_mask[21] 
1          1          1          o_bit_field_read_mask[20] 
1          1          1          o_bit_field_read_mask[19] 
1          1          1          o_bit_field_read_mask[18] 
1          1          1          o_bit_field_read_mask[17] 
1          1          1          o_bit_field_read_mask[16] 
1          1          1          o_bit_field_read_mask[15] 
1          1          1          o_bit_field_read_mask[14] 
1          1          1          o_bit_field_read_mask[13] 
1          1          1          o_bit_field_read_mask[12] 
1          1          1          o_bit_field_read_mask[11] 
1          1          1          o_bit_field_read_mask[10] 
1          1          1          o_bit_field_read_mask[9]  
1          1          1          o_bit_field_read_mask[8]  
1          1          1          o_bit_field_read_mask[7]  
1          1          1          o_bit_field_read_mask[6]  
1          1          1          o_bit_field_read_mask[5]  
1          1          1          o_bit_field_read_mask[4]  
1          1          1          o_bit_field_read_mask[3]  
1          1          1          o_bit_field_read_mask[2]  
1          1          1          o_bit_field_read_mask[1]  
1          1          1          o_bit_field_read_mask[0]  
1          1          1          o_bit_field_write_mask[31] 
1          1          1          o_bit_field_write_mask[30] 
1          1          1          o_bit_field_write_mask[29] 
1          1          1          o_bit_field_write_mask[28] 
1          1          1          o_bit_field_write_mask[27] 
1          1          1          o_bit_field_write_mask[26] 
1          1          1          o_bit_field_write_mask[25] 
1          1          1          o_bit_field_write_mask[24] 
1          1          1          o_bit_field_write_mask[23] 
1          1          1          o_bit_field_write_mask[22] 
1          1          1          o_bit_field_write_mask[21] 
1          1          1          o_bit_field_write_mask[20] 
1          1          1          o_bit_field_write_mask[19] 
1          1          1          o_bit_field_write_mask[18] 
1          1          1          o_bit_field_write_mask[17] 
1          1          1          o_bit_field_write_mask[16] 
1          1          1          o_bit_field_write_mask[15] 
1          1          1          o_bit_field_write_mask[14] 
1          1          1          o_bit_field_write_mask[13] 
1          1          1          o_bit_field_write_mask[12] 
1          1          1          o_bit_field_write_mask[11] 
1          1          1          o_bit_field_write_mask[10] 
1          1          1          o_bit_field_write_mask[9] 
1          1          1          o_bit_field_write_mask[8] 
1          1          1          o_bit_field_write_mask[7] 
1          1          1          o_bit_field_write_mask[6] 
1          1          1          o_bit_field_write_mask[5] 
1          1          1          o_bit_field_write_mask[4] 
1          1          1          o_bit_field_write_mask[3] 
1          1          1          o_bit_field_write_mask[2] 
1          1          1          o_bit_field_write_mask[1] 
1          1          1          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          1          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          1          0          i_bit_field_value[0]      
1          1          1          w_match                   
1          1          1          w_active                  
1          1          1          w_frontdoor_valid         
0          0          0          w_backdoor_valid          
0          0          0          w_pending_valid           
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          1          0          w_read_data[0]            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered signal bits: 5 of 16
Number of uncovered signal bits: 11 of 16
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 16
Number of signal bits partially toggled(fall): 0 of 16

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_address[9]              
0          0          0          i_address[8]              
0          0          0          i_address[7]              
0          0          0          i_address[6]              
0          0          0          i_address[5]              
0          0          0          i_address[4]              
1          1          1          i_address[3]              
1          1          1          i_address[2]              
0          0          0          i_address[1]              
0          0          0          i_address[0]              
0          0          0          i_access[1]               
1          1          1          i_access[0]               
0          0          0          i_additional_match        
1          1          1          o_match                   
1          1          1          w_address_match           
0          0          0          w_access_match            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.u_register.u_register_common.u_read_data_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 1 of 65
Number of uncovered signal bits: 64 of 65
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 2 of 65
Number of signal bits partially toggled(fall): 0 of 65

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_select                  
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          1          0          i_data[0]                 
0          0          0          o_data[31]                
0          0          0          o_data[30]                
0          0          0          o_data[29]                
0          0          0          o_data[28]                
0          0          0          o_data[27]                
0          0          0          o_data[26]                
0          0          0          o_data[25]                
0          0          0          o_data[24]                
0          0          0          o_data[23]                
0          0          0          o_data[22]                
0          0          0          o_data[21]                
0          0          0          o_data[20]                
0          0          0          o_data[19]                
0          0          0          o_data[18]                
0          0          0          o_data[17]                
0          0          0          o_data[16]                
0          0          0          o_data[15]                
0          0          0          o_data[14]                
0          0          0          o_data[13]                
0          0          0          o_data[12]                
0          0          0          o_data[11]                
0          0          0          o_data[10]                
0          0          0          o_data[9]                 
0          0          0          o_data[8]                 
0          0          0          o_data[7]                 
0          0          0          o_data[6]                 
0          0          0          o_data[5]                 
0          0          0          o_data[4]                 
0          0          0          o_data[3]                 
0          0          0          o_data[2]                 
0          0          0          o_data[1]                 
0          1          0          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_ECC_ONOFF_REG.g_ECC_ONOFF_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered signal bits: 69 of 461
Number of uncovered signal bits: 392 of 461
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 7 of 461
Number of signal bits partially toggled(fall): 0 of 461

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_sw_valid                
1          1          1          i_sw_read_mask[31]        
1          1          1          i_sw_read_mask[30]        
1          1          1          i_sw_read_mask[29]        
1          1          1          i_sw_read_mask[28]        
1          1          1          i_sw_read_mask[27]        
1          1          1          i_sw_read_mask[26]        
1          1          1          i_sw_read_mask[25]        
1          1          1          i_sw_read_mask[24]        
1          1          1          i_sw_read_mask[23]        
1          1          1          i_sw_read_mask[22]        
1          1          1          i_sw_read_mask[21]        
1          1          1          i_sw_read_mask[20]        
1          1          1          i_sw_read_mask[19]        
1          1          1          i_sw_read_mask[18]        
1          1          1          i_sw_read_mask[17]        
1          1          1          i_sw_read_mask[16]        
1          1          1          i_sw_read_mask[15]        
1          1          1          i_sw_read_mask[14]        
1          1          1          i_sw_read_mask[13]        
1          1          1          i_sw_read_mask[12]        
1          1          1          i_sw_read_mask[11]        
1          1          1          i_sw_read_mask[10]        
1          1          1          i_sw_read_mask[9]         
1          1          1          i_sw_read_mask[8]         
1          1          1          i_sw_read_mask[7]         
1          1          1          i_sw_read_mask[6]         
1          1          1          i_sw_read_mask[5]         
1          1          1          i_sw_read_mask[4]         
1          1          1          i_sw_read_mask[3]         
1          1          1          i_sw_read_mask[2]         
1          1          1          i_sw_read_mask[1]         
1          1          1          i_sw_read_mask[0]         
0          0          0          i_sw_write_enable         
1          1          1          i_sw_write_mask[31]       
1          1          1          i_sw_write_mask[30]       
1          1          1          i_sw_write_mask[29]       
1          1          1          i_sw_write_mask[28]       
1          1          1          i_sw_write_mask[27]       
1          1          1          i_sw_write_mask[26]       
1          1          1          i_sw_write_mask[25]       
1          1          1          i_sw_write_mask[24]       
1          1          1          i_sw_write_mask[23]       
1          1          1          i_sw_write_mask[22]       
1          1          1          i_sw_write_mask[21]       
1          1          1          i_sw_write_mask[20]       
1          1          1          i_sw_write_mask[19]       
1          1          1          i_sw_write_mask[18]       
1          1          1          i_sw_write_mask[17]       
1          1          1          i_sw_write_mask[16]       
1          1          1          i_sw_write_mask[15]       
1          1          1          i_sw_write_mask[14]       
1          1          1          i_sw_write_mask[13]       
1          1          1          i_sw_write_mask[12]       
1          1          1          i_sw_write_mask[11]       
1          1          1          i_sw_write_mask[10]       
1          1          1          i_sw_write_mask[9]        
1          1          1          i_sw_write_mask[8]        
1          1          1          i_sw_write_mask[7]        
1          1          1          i_sw_write_mask[6]        
1          1          1          i_sw_write_mask[5]        
1          1          1          i_sw_write_mask[4]        
1          1          1          i_sw_write_mask[3]        
1          1          1          i_sw_write_mask[2]        
1          1          1          i_sw_write_mask[1]        
1          1          1          i_sw_write_mask[0]        
0          0          0          i_sw_write_data[31]       
0          0          0          i_sw_write_data[30]       
0          0          0          i_sw_write_data[29]       
0          0          0          i_sw_write_data[28]       
0          0          0          i_sw_write_data[27]       
0          0          0          i_sw_write_data[26]       
0          0          0          i_sw_write_data[25]       
0          0          0          i_sw_write_data[24]       
0          0          0          i_sw_write_data[23]       
0          0          0          i_sw_write_data[22]       
0          0          0          i_sw_write_data[21]       
0          0          0          i_sw_write_data[20]       
0          0          0          i_sw_write_data[19]       
0          0          0          i_sw_write_data[18]       
0          0          0          i_sw_write_data[17]       
0          0          0          i_sw_write_data[16]       
0          0          0          i_sw_write_data[15]       
0          0          0          i_sw_write_data[14]       
0          0          0          i_sw_write_data[13]       
0          0          0          i_sw_write_data[12]       
0          0          0          i_sw_write_data[11]       
0          0          0          i_sw_write_data[10]       
0          0          0          i_sw_write_data[9]        
0          0          0          i_sw_write_data[8]        
0          0          0          i_sw_write_data[7]        
0          0          0          i_sw_write_data[6]        
0          0          0          i_sw_write_data[5]        
0          0          0          i_sw_write_data[4]        
0          0          0          i_sw_write_data[3]        
0          0          0          i_sw_write_data[2]        
1          1          1          i_sw_write_data[1]        
1          1          1          i_sw_write_data[0]        
0          0          0          o_sw_read_data[31]        
0          0          0          o_sw_read_data[30]        
0          0          0          o_sw_read_data[29]        
0          0          0          o_sw_read_data[28]        
0          0          0          o_sw_read_data[27]        
0          0          0          o_sw_read_data[26]        
0          0          0          o_sw_read_data[25]        
0          0          0          o_sw_read_data[24]        
0          0          0          o_sw_read_data[23]        
0          0          0          o_sw_read_data[22]        
0          0          0          o_sw_read_data[21]        
0          0          0          o_sw_read_data[20]        
0          0          0          o_sw_read_data[19]        
0          0          0          o_sw_read_data[18]        
0          0          0          o_sw_read_data[17]        
0          0          0          o_sw_read_data[16]        
0          0          0          o_sw_read_data[15]        
0          0          0          o_sw_read_data[14]        
0          0          0          o_sw_read_data[13]        
0          0          0          o_sw_read_data[12]        
0          0          0          o_sw_read_data[11]        
0          0          0          o_sw_read_data[10]        
0          0          0          o_sw_read_data[9]         
0          0          0          o_sw_read_data[8]         
0          0          0          o_sw_read_data[7]         
0          0          0          o_sw_read_data[6]         
0          0          0          o_sw_read_data[5]         
0          0          0          o_sw_read_data[4]         
0          0          0          o_sw_read_data[3]         
0          0          0          o_sw_read_data[2]         
0          0          0          o_sw_read_data[1]         
0          1          0          o_sw_read_data[0]         
0          0          0          o_sw_value[31]            
0          0          0          o_sw_value[30]            
0          0          0          o_sw_value[29]            
0          0          0          o_sw_value[28]            
0          0          0          o_sw_value[27]            
0          0          0          o_sw_value[26]            
0          0          0          o_sw_value[25]            
0          0          0          o_sw_value[24]            
0          0          0          o_sw_value[23]            
0          0          0          o_sw_value[22]            
0          0          0          o_sw_value[21]            
0          0          0          o_sw_value[20]            
0          0          0          o_sw_value[19]            
0          0          0          o_sw_value[18]            
0          0          0          o_sw_value[17]            
0          0          0          o_sw_value[16]            
0          0          0          o_sw_value[15]            
0          0          0          o_sw_value[14]            
0          0          0          o_sw_value[13]            
0          0          0          o_sw_value[12]            
0          0          0          o_sw_value[11]            
0          0          0          o_sw_value[10]            
0          0          0          o_sw_value[9]             
0          0          0          o_sw_value[8]             
0          0          0          o_sw_value[7]             
0          0          0          o_sw_value[6]             
0          0          0          o_sw_value[5]             
0          0          0          o_sw_value[4]             
0          0          0          o_sw_value[3]             
0          0          0          o_sw_value[2]             
0          0          0          o_sw_value[1]             
0          1          0          o_sw_value[0]             
0          0          0          o_write_trigger           
0          0          0          o_read_trigger            
0          0          0          i_hw_write_enable         
0          0          0          i_hw_write_data[31]       
0          0          0          i_hw_write_data[30]       
0          0          0          i_hw_write_data[29]       
0          0          0          i_hw_write_data[28]       
0          0          0          i_hw_write_data[27]       
0          0          0          i_hw_write_data[26]       
0          0          0          i_hw_write_data[25]       
0          0          0          i_hw_write_data[24]       
0          0          0          i_hw_write_data[23]       
0          0          0          i_hw_write_data[22]       
0          0          0          i_hw_write_data[21]       
0          0          0          i_hw_write_data[20]       
0          0          0          i_hw_write_data[19]       
0          0          0          i_hw_write_data[18]       
0          0          0          i_hw_write_data[17]       
0          0          0          i_hw_write_data[16]       
0          0          0          i_hw_write_data[15]       
0          0          0          i_hw_write_data[14]       
0          0          0          i_hw_write_data[13]       
0          0          0          i_hw_write_data[12]       
0          0          0          i_hw_write_data[11]       
0          0          0          i_hw_write_data[10]       
0          0          0          i_hw_write_data[9]        
0          0          0          i_hw_write_data[8]        
0          0          0          i_hw_write_data[7]        
0          0          0          i_hw_write_data[6]        
0          0          0          i_hw_write_data[5]        
0          0          0          i_hw_write_data[4]        
0          0          0          i_hw_write_data[3]        
0          0          0          i_hw_write_data[2]        
0          0          0          i_hw_write_data[1]        
0          0          0          i_hw_write_data[0]        
0          0          0          i_hw_set[31]              
0          0          0          i_hw_set[30]              
0          0          0          i_hw_set[29]              
0          0          0          i_hw_set[28]              
0          0          0          i_hw_set[27]              
0          0          0          i_hw_set[26]              
0          0          0          i_hw_set[25]              
0          0          0          i_hw_set[24]              
0          0          0          i_hw_set[23]              
0          0          0          i_hw_set[22]              
0          0          0          i_hw_set[21]              
0          0          0          i_hw_set[20]              
0          0          0          i_hw_set[19]              
0          0          0          i_hw_set[18]              
0          0          0          i_hw_set[17]              
0          0          0          i_hw_set[16]              
0          0          0          i_hw_set[15]              
0          0          0          i_hw_set[14]              
0          0          0          i_hw_set[13]              
0          0          0          i_hw_set[12]              
0          0          0          i_hw_set[11]              
0          0          0          i_hw_set[10]              
0          0          0          i_hw_set[9]               
0          0          0          i_hw_set[8]               
0          0          0          i_hw_set[7]               
0          0          0          i_hw_set[6]               
0          0          0          i_hw_set[5]               
0          0          0          i_hw_set[4]               
0          0          0          i_hw_set[3]               
0          0          0          i_hw_set[2]               
0          0          0          i_hw_set[1]               
0          0          0          i_hw_set[0]               
0          0          0          i_hw_clear[31]            
0          0          0          i_hw_clear[30]            
0          0          0          i_hw_clear[29]            
0          0          0          i_hw_clear[28]            
0          0          0          i_hw_clear[27]            
0          0          0          i_hw_clear[26]            
0          0          0          i_hw_clear[25]            
0          0          0          i_hw_clear[24]            
0          0          0          i_hw_clear[23]            
0          0          0          i_hw_clear[22]            
0          0          0          i_hw_clear[21]            
0          0          0          i_hw_clear[20]            
0          0          0          i_hw_clear[19]            
0          0          0          i_hw_clear[18]            
0          0          0          i_hw_clear[17]            
0          0          0          i_hw_clear[16]            
0          0          0          i_hw_clear[15]            
0          0          0          i_hw_clear[14]            
0          0          0          i_hw_clear[13]            
0          0          0          i_hw_clear[12]            
0          0          0          i_hw_clear[11]            
0          0          0          i_hw_clear[10]            
0          0          0          i_hw_clear[9]             
0          0          0          i_hw_clear[8]             
0          0          0          i_hw_clear[7]             
0          0          0          i_hw_clear[6]             
0          0          0          i_hw_clear[5]             
0          0          0          i_hw_clear[4]             
0          0          0          i_hw_clear[3]             
0          0          0          i_hw_clear[2]             
0          0          0          i_hw_clear[1]             
0          0          0          i_hw_clear[0]             
0          0          0          i_value[31]               
0          0          0          i_value[30]               
0          0          0          i_value[29]               
0          0          0          i_value[28]               
0          0          0          i_value[27]               
0          0          0          i_value[26]               
0          0          0          i_value[25]               
0          0          0          i_value[24]               
0          0          0          i_value[23]               
0          0          0          i_value[22]               
0          0          0          i_value[21]               
0          0          0          i_value[20]               
0          0          0          i_value[19]               
0          0          0          i_value[18]               
0          0          0          i_value[17]               
0          0          0          i_value[16]               
0          0          0          i_value[15]               
0          0          0          i_value[14]               
0          0          0          i_value[13]               
0          0          0          i_value[12]               
0          0          0          i_value[11]               
0          0          0          i_value[10]               
0          0          0          i_value[9]                
0          0          0          i_value[8]                
0          0          0          i_value[7]                
0          0          0          i_value[6]                
0          0          0          i_value[5]                
0          0          0          i_value[4]                
0          0          0          i_value[3]                
0          0          0          i_value[2]                
0          0          0          i_value[1]                
0          0          0          i_value[0]                
0          0          0          i_mask[31]                
0          0          0          i_mask[30]                
0          0          0          i_mask[29]                
0          0          0          i_mask[28]                
0          0          0          i_mask[27]                
0          0          0          i_mask[26]                
0          0          0          i_mask[25]                
0          0          0          i_mask[24]                
0          0          0          i_mask[23]                
0          0          0          i_mask[22]                
0          0          0          i_mask[21]                
0          0          0          i_mask[20]                
0          0          0          i_mask[19]                
0          0          0          i_mask[18]                
0          0          0          i_mask[17]                
0          0          0          i_mask[16]                
0          0          0          i_mask[15]                
0          0          0          i_mask[14]                
0          0          0          i_mask[13]                
0          0          0          i_mask[12]                
0          0          0          i_mask[11]                
0          0          0          i_mask[10]                
0          0          0          i_mask[9]                 
0          0          0          i_mask[8]                 
0          0          0          i_mask[7]                 
0          0          0          i_mask[6]                 
0          0          0          i_mask[5]                 
0          0          0          i_mask[4]                 
0          0          0          i_mask[3]                 
0          0          0          i_mask[2]                 
0          0          0          i_mask[1]                 
0          0          0          i_mask[0]                 
0          0          0          o_value[31]               
0          0          0          o_value[30]               
0          0          0          o_value[29]               
0          0          0          o_value[28]               
0          0          0          o_value[27]               
0          0          0          o_value[26]               
0          0          0          o_value[25]               
0          0          0          o_value[24]               
0          0          0          o_value[23]               
0          0          0          o_value[22]               
0          0          0          o_value[21]               
0          0          0          o_value[20]               
0          0          0          o_value[19]               
0          0          0          o_value[18]               
0          0          0          o_value[17]               
0          0          0          o_value[16]               
0          0          0          o_value[15]               
0          0          0          o_value[14]               
0          0          0          o_value[13]               
0          0          0          o_value[12]               
0          0          0          o_value[11]               
0          0          0          o_value[10]               
0          0          0          o_value[9]                
0          0          0          o_value[8]                
0          0          0          o_value[7]                
0          0          0          o_value[6]                
0          0          0          o_value[5]                
0          0          0          o_value[4]                
0          0          0          o_value[3]                
0          0          0          o_value[2]                
0          0          0          o_value[1]                
0          1          0          o_value[0]                
0          0          0          o_value_unmasked[31]      
0          0          0          o_value_unmasked[30]      
0          0          0          o_value_unmasked[29]      
0          0          0          o_value_unmasked[28]      
0          0          0          o_value_unmasked[27]      
0          0          0          o_value_unmasked[26]      
0          0          0          o_value_unmasked[25]      
0          0          0          o_value_unmasked[24]      
0          0          0          o_value_unmasked[23]      
0          0          0          o_value_unmasked[22]      
0          0          0          o_value_unmasked[21]      
0          0          0          o_value_unmasked[20]      
0          0          0          o_value_unmasked[19]      
0          0          0          o_value_unmasked[18]      
0          0          0          o_value_unmasked[17]      
0          0          0          o_value_unmasked[16]      
0          0          0          o_value_unmasked[15]      
0          0          0          o_value_unmasked[14]      
0          0          0          o_value_unmasked[13]      
0          0          0          o_value_unmasked[12]      
0          0          0          o_value_unmasked[11]      
0          0          0          o_value_unmasked[10]      
0          0          0          o_value_unmasked[9]       
0          0          0          o_value_unmasked[8]       
0          0          0          o_value_unmasked[7]       
0          0          0          o_value_unmasked[6]       
0          0          0          o_value_unmasked[5]       
0          0          0          o_value_unmasked[4]       
0          0          0          o_value_unmasked[3]       
0          0          0          o_value_unmasked[2]       
0          0          0          o_value_unmasked[1]       
0          1          0          o_value_unmasked[0]       
1          1          1          w_sw_update[1]            
0          0          0          w_sw_update[0]            
0          0          0          w_sw_write_done           
0          0          0          w_hw_update               
0          0          0          w_trigger[1]              
0          0          0          w_trigger[0]              
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          1          0          w_read_data[0]            
0          0          0          w_value[31]               
0          0          0          w_value[30]               
0          0          0          w_value[29]               
0          0          0          w_value[28]               
0          0          0          w_value[27]               
0          0          0          w_value[26]               
0          0          0          w_value[25]               
0          0          0          w_value[24]               
0          0          0          w_value[23]               
0          0          0          w_value[22]               
0          0          0          w_value[21]               
0          0          0          w_value[20]               
0          0          0          w_value[19]               
0          0          0          w_value[18]               
0          0          0          w_value[17]               
0          0          0          w_value[16]               
0          0          0          w_value[15]               
0          0          0          w_value[14]               
0          0          0          w_value[13]               
0          0          0          w_value[12]               
0          0          0          w_value[11]               
0          0          0          w_value[10]               
0          0          0          w_value[9]                
0          0          0          w_value[8]                
0          0          0          w_value[7]                
0          0          0          w_value[6]                
0          0          0          w_value[5]                
0          0          0          w_value[4]                
0          0          0          w_value[3]                
0          0          0          w_value[2]                
0          0          0          w_value[1]                
0          1          0          w_value[0]                

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.u_register
Type name: rggen_default_register
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_default_register.v
Number of covered signal bits: 13 of 280
Number of uncovered signal bits: 267 of 280
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 280
Number of signal bits partially toggled(fall): 0 of 280

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered signal bits: 13 of 318
Number of uncovered signal bits: 305 of 318
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 318
Number of signal bits partially toggled(fall): 0 of 318

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          i_additional_match        
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      
0          0          0          w_match                   
0          0          0          w_active                  
0          0          0          w_frontdoor_valid         
0          0          0          w_backdoor_valid          
0          0          0          w_pending_valid           
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered signal bits: 3 of 16
Number of uncovered signal bits: 13 of 16
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 16
Number of signal bits partially toggled(fall): 0 of 16

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_address[9]              
0          0          0          i_address[8]              
0          0          0          i_address[7]              
0          0          0          i_address[6]              
0          0          0          i_address[5]              
0          0          0          i_address[4]              
1          1          1          i_address[3]              
1          1          1          i_address[2]              
0          0          0          i_address[1]              
0          0          0          i_address[0]              
0          0          0          i_access[1]               
1          1          1          i_access[0]               
0          0          0          i_additional_match        
0          0          0          o_match                   
0          0          0          w_address_match           
0          0          0          w_access_match            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.u_register.u_register_common.u_read_data_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 0 of 65
Number of uncovered signal bits: 65 of 65
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 65
Number of signal bits partially toggled(fall): 0 of 65

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_select                  
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          0          0          i_data[0]                 
0          0          0          o_data[31]                
0          0          0          o_data[30]                
0          0          0          o_data[29]                
0          0          0          o_data[28]                
0          0          0          o_data[27]                
0          0          0          o_data[26]                
0          0          0          o_data[25]                
0          0          0          o_data[24]                
0          0          0          o_data[23]                
0          0          0          o_data[22]                
0          0          0          o_data[21]                
0          0          0          o_data[20]                
0          0          0          o_data[19]                
0          0          0          o_data[18]                
0          0          0          o_data[17]                
0          0          0          o_data[16]                
0          0          0          o_data[15]                
0          0          0          o_data[14]                
0          0          0          o_data[13]                
0          0          0          o_data[12]                
0          0          0          o_data[11]                
0          0          0          o_data[10]                
0          0          0          o_data[9]                 
0          0          0          o_data[8]                 
0          0          0          o_data[7]                 
0          0          0          o_data[6]                 
0          0          0          o_data[5]                 
0          0          0          o_data[4]                 
0          0          0          o_data[3]                 
0          0          0          o_data[2]                 
0          0          0          o_data[1]                 
0          0          0          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_CNT_REG.g_CE_CNT_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered signal bits: 3 of 461
Number of uncovered signal bits: 458 of 461
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 461
Number of signal bits partially toggled(fall): 0 of 461

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
0          0          0          i_sw_valid                
0          0          0          i_sw_read_mask[31]        
0          0          0          i_sw_read_mask[30]        
0          0          0          i_sw_read_mask[29]        
0          0          0          i_sw_read_mask[28]        
0          0          0          i_sw_read_mask[27]        
0          0          0          i_sw_read_mask[26]        
0          0          0          i_sw_read_mask[25]        
0          0          0          i_sw_read_mask[24]        
0          0          0          i_sw_read_mask[23]        
0          0          0          i_sw_read_mask[22]        
0          0          0          i_sw_read_mask[21]        
0          0          0          i_sw_read_mask[20]        
0          0          0          i_sw_read_mask[19]        
0          0          0          i_sw_read_mask[18]        
0          0          0          i_sw_read_mask[17]        
0          0          0          i_sw_read_mask[16]        
0          0          0          i_sw_read_mask[15]        
0          0          0          i_sw_read_mask[14]        
0          0          0          i_sw_read_mask[13]        
0          0          0          i_sw_read_mask[12]        
0          0          0          i_sw_read_mask[11]        
0          0          0          i_sw_read_mask[10]        
0          0          0          i_sw_read_mask[9]         
0          0          0          i_sw_read_mask[8]         
0          0          0          i_sw_read_mask[7]         
0          0          0          i_sw_read_mask[6]         
0          0          0          i_sw_read_mask[5]         
0          0          0          i_sw_read_mask[4]         
0          0          0          i_sw_read_mask[3]         
0          0          0          i_sw_read_mask[2]         
0          0          0          i_sw_read_mask[1]         
0          0          0          i_sw_read_mask[0]         
0          0          0          i_sw_write_enable         
0          0          0          i_sw_write_mask[31]       
0          0          0          i_sw_write_mask[30]       
0          0          0          i_sw_write_mask[29]       
0          0          0          i_sw_write_mask[28]       
0          0          0          i_sw_write_mask[27]       
0          0          0          i_sw_write_mask[26]       
0          0          0          i_sw_write_mask[25]       
0          0          0          i_sw_write_mask[24]       
0          0          0          i_sw_write_mask[23]       
0          0          0          i_sw_write_mask[22]       
0          0          0          i_sw_write_mask[21]       
0          0          0          i_sw_write_mask[20]       
0          0          0          i_sw_write_mask[19]       
0          0          0          i_sw_write_mask[18]       
0          0          0          i_sw_write_mask[17]       
0          0          0          i_sw_write_mask[16]       
0          0          0          i_sw_write_mask[15]       
0          0          0          i_sw_write_mask[14]       
0          0          0          i_sw_write_mask[13]       
0          0          0          i_sw_write_mask[12]       
0          0          0          i_sw_write_mask[11]       
0          0          0          i_sw_write_mask[10]       
0          0          0          i_sw_write_mask[9]        
0          0          0          i_sw_write_mask[8]        
0          0          0          i_sw_write_mask[7]        
0          0          0          i_sw_write_mask[6]        
0          0          0          i_sw_write_mask[5]        
0          0          0          i_sw_write_mask[4]        
0          0          0          i_sw_write_mask[3]        
0          0          0          i_sw_write_mask[2]        
0          0          0          i_sw_write_mask[1]        
0          0          0          i_sw_write_mask[0]        
0          0          0          i_sw_write_data[31]       
0          0          0          i_sw_write_data[30]       
0          0          0          i_sw_write_data[29]       
0          0          0          i_sw_write_data[28]       
0          0          0          i_sw_write_data[27]       
0          0          0          i_sw_write_data[26]       
0          0          0          i_sw_write_data[25]       
0          0          0          i_sw_write_data[24]       
0          0          0          i_sw_write_data[23]       
0          0          0          i_sw_write_data[22]       
0          0          0          i_sw_write_data[21]       
0          0          0          i_sw_write_data[20]       
0          0          0          i_sw_write_data[19]       
0          0          0          i_sw_write_data[18]       
0          0          0          i_sw_write_data[17]       
0          0          0          i_sw_write_data[16]       
0          0          0          i_sw_write_data[15]       
0          0          0          i_sw_write_data[14]       
0          0          0          i_sw_write_data[13]       
0          0          0          i_sw_write_data[12]       
0          0          0          i_sw_write_data[11]       
0          0          0          i_sw_write_data[10]       
0          0          0          i_sw_write_data[9]        
0          0          0          i_sw_write_data[8]        
0          0          0          i_sw_write_data[7]        
0          0          0          i_sw_write_data[6]        
0          0          0          i_sw_write_data[5]        
0          0          0          i_sw_write_data[4]        
0          0          0          i_sw_write_data[3]        
0          0          0          i_sw_write_data[2]        
1          1          1          i_sw_write_data[1]        
1          1          1          i_sw_write_data[0]        
0          0          0          o_sw_read_data[31]        
0          0          0          o_sw_read_data[30]        
0          0          0          o_sw_read_data[29]        
0          0          0          o_sw_read_data[28]        
0          0          0          o_sw_read_data[27]        
0          0          0          o_sw_read_data[26]        
0          0          0          o_sw_read_data[25]        
0          0          0          o_sw_read_data[24]        
0          0          0          o_sw_read_data[23]        
0          0          0          o_sw_read_data[22]        
0          0          0          o_sw_read_data[21]        
0          0          0          o_sw_read_data[20]        
0          0          0          o_sw_read_data[19]        
0          0          0          o_sw_read_data[18]        
0          0          0          o_sw_read_data[17]        
0          0          0          o_sw_read_data[16]        
0          0          0          o_sw_read_data[15]        
0          0          0          o_sw_read_data[14]        
0          0          0          o_sw_read_data[13]        
0          0          0          o_sw_read_data[12]        
0          0          0          o_sw_read_data[11]        
0          0          0          o_sw_read_data[10]        
0          0          0          o_sw_read_data[9]         
0          0          0          o_sw_read_data[8]         
0          0          0          o_sw_read_data[7]         
0          0          0          o_sw_read_data[6]         
0          0          0          o_sw_read_data[5]         
0          0          0          o_sw_read_data[4]         
0          0          0          o_sw_read_data[3]         
0          0          0          o_sw_read_data[2]         
0          0          0          o_sw_read_data[1]         
0          0          0          o_sw_read_data[0]         
0          0          0          o_sw_value[31]            
0          0          0          o_sw_value[30]            
0          0          0          o_sw_value[29]            
0          0          0          o_sw_value[28]            
0          0          0          o_sw_value[27]            
0          0          0          o_sw_value[26]            
0          0          0          o_sw_value[25]            
0          0          0          o_sw_value[24]            
0          0          0          o_sw_value[23]            
0          0          0          o_sw_value[22]            
0          0          0          o_sw_value[21]            
0          0          0          o_sw_value[20]            
0          0          0          o_sw_value[19]            
0          0          0          o_sw_value[18]            
0          0          0          o_sw_value[17]            
0          0          0          o_sw_value[16]            
0          0          0          o_sw_value[15]            
0          0          0          o_sw_value[14]            
0          0          0          o_sw_value[13]            
0          0          0          o_sw_value[12]            
0          0          0          o_sw_value[11]            
0          0          0          o_sw_value[10]            
0          0          0          o_sw_value[9]             
0          0          0          o_sw_value[8]             
0          0          0          o_sw_value[7]             
0          0          0          o_sw_value[6]             
0          0          0          o_sw_value[5]             
0          0          0          o_sw_value[4]             
0          0          0          o_sw_value[3]             
0          0          0          o_sw_value[2]             
0          0          0          o_sw_value[1]             
0          0          0          o_sw_value[0]             
0          0          0          o_write_trigger           
0          0          0          o_read_trigger            
0          0          0          i_hw_write_enable         
0          0          0          i_hw_write_data[31]       
0          0          0          i_hw_write_data[30]       
0          0          0          i_hw_write_data[29]       
0          0          0          i_hw_write_data[28]       
0          0          0          i_hw_write_data[27]       
0          0          0          i_hw_write_data[26]       
0          0          0          i_hw_write_data[25]       
0          0          0          i_hw_write_data[24]       
0          0          0          i_hw_write_data[23]       
0          0          0          i_hw_write_data[22]       
0          0          0          i_hw_write_data[21]       
0          0          0          i_hw_write_data[20]       
0          0          0          i_hw_write_data[19]       
0          0          0          i_hw_write_data[18]       
0          0          0          i_hw_write_data[17]       
0          0          0          i_hw_write_data[16]       
0          0          0          i_hw_write_data[15]       
0          0          0          i_hw_write_data[14]       
0          0          0          i_hw_write_data[13]       
0          0          0          i_hw_write_data[12]       
0          0          0          i_hw_write_data[11]       
0          0          0          i_hw_write_data[10]       
0          0          0          i_hw_write_data[9]        
0          0          0          i_hw_write_data[8]        
0          0          0          i_hw_write_data[7]        
0          0          0          i_hw_write_data[6]        
0          0          0          i_hw_write_data[5]        
0          0          0          i_hw_write_data[4]        
0          0          0          i_hw_write_data[3]        
0          0          0          i_hw_write_data[2]        
0          0          0          i_hw_write_data[1]        
0          0          0          i_hw_write_data[0]        
0          0          0          i_hw_set[31]              
0          0          0          i_hw_set[30]              
0          0          0          i_hw_set[29]              
0          0          0          i_hw_set[28]              
0          0          0          i_hw_set[27]              
0          0          0          i_hw_set[26]              
0          0          0          i_hw_set[25]              
0          0          0          i_hw_set[24]              
0          0          0          i_hw_set[23]              
0          0          0          i_hw_set[22]              
0          0          0          i_hw_set[21]              
0          0          0          i_hw_set[20]              
0          0          0          i_hw_set[19]              
0          0          0          i_hw_set[18]              
0          0          0          i_hw_set[17]              
0          0          0          i_hw_set[16]              
0          0          0          i_hw_set[15]              
0          0          0          i_hw_set[14]              
0          0          0          i_hw_set[13]              
0          0          0          i_hw_set[12]              
0          0          0          i_hw_set[11]              
0          0          0          i_hw_set[10]              
0          0          0          i_hw_set[9]               
0          0          0          i_hw_set[8]               
0          0          0          i_hw_set[7]               
0          0          0          i_hw_set[6]               
0          0          0          i_hw_set[5]               
0          0          0          i_hw_set[4]               
0          0          0          i_hw_set[3]               
0          0          0          i_hw_set[2]               
0          0          0          i_hw_set[1]               
0          0          0          i_hw_set[0]               
0          0          0          i_hw_clear[31]            
0          0          0          i_hw_clear[30]            
0          0          0          i_hw_clear[29]            
0          0          0          i_hw_clear[28]            
0          0          0          i_hw_clear[27]            
0          0          0          i_hw_clear[26]            
0          0          0          i_hw_clear[25]            
0          0          0          i_hw_clear[24]            
0          0          0          i_hw_clear[23]            
0          0          0          i_hw_clear[22]            
0          0          0          i_hw_clear[21]            
0          0          0          i_hw_clear[20]            
0          0          0          i_hw_clear[19]            
0          0          0          i_hw_clear[18]            
0          0          0          i_hw_clear[17]            
0          0          0          i_hw_clear[16]            
0          0          0          i_hw_clear[15]            
0          0          0          i_hw_clear[14]            
0          0          0          i_hw_clear[13]            
0          0          0          i_hw_clear[12]            
0          0          0          i_hw_clear[11]            
0          0          0          i_hw_clear[10]            
0          0          0          i_hw_clear[9]             
0          0          0          i_hw_clear[8]             
0          0          0          i_hw_clear[7]             
0          0          0          i_hw_clear[6]             
0          0          0          i_hw_clear[5]             
0          0          0          i_hw_clear[4]             
0          0          0          i_hw_clear[3]             
0          0          0          i_hw_clear[2]             
0          0          0          i_hw_clear[1]             
0          0          0          i_hw_clear[0]             
0          0          0          i_value[31]               
0          0          0          i_value[30]               
0          0          0          i_value[29]               
0          0          0          i_value[28]               
0          0          0          i_value[27]               
0          0          0          i_value[26]               
0          0          0          i_value[25]               
0          0          0          i_value[24]               
0          0          0          i_value[23]               
0          0          0          i_value[22]               
0          0          0          i_value[21]               
0          0          0          i_value[20]               
0          0          0          i_value[19]               
0          0          0          i_value[18]               
0          0          0          i_value[17]               
0          0          0          i_value[16]               
0          0          0          i_value[15]               
0          0          0          i_value[14]               
0          0          0          i_value[13]               
0          0          0          i_value[12]               
0          0          0          i_value[11]               
0          0          0          i_value[10]               
0          0          0          i_value[9]                
0          0          0          i_value[8]                
0          0          0          i_value[7]                
0          0          0          i_value[6]                
0          0          0          i_value[5]                
0          0          0          i_value[4]                
0          0          0          i_value[3]                
0          0          0          i_value[2]                
0          0          0          i_value[1]                
0          0          0          i_value[0]                
0          0          0          i_mask[31]                
0          0          0          i_mask[30]                
0          0          0          i_mask[29]                
0          0          0          i_mask[28]                
0          0          0          i_mask[27]                
0          0          0          i_mask[26]                
0          0          0          i_mask[25]                
0          0          0          i_mask[24]                
0          0          0          i_mask[23]                
0          0          0          i_mask[22]                
0          0          0          i_mask[21]                
0          0          0          i_mask[20]                
0          0          0          i_mask[19]                
0          0          0          i_mask[18]                
0          0          0          i_mask[17]                
0          0          0          i_mask[16]                
0          0          0          i_mask[15]                
0          0          0          i_mask[14]                
0          0          0          i_mask[13]                
0          0          0          i_mask[12]                
0          0          0          i_mask[11]                
0          0          0          i_mask[10]                
0          0          0          i_mask[9]                 
0          0          0          i_mask[8]                 
0          0          0          i_mask[7]                 
0          0          0          i_mask[6]                 
0          0          0          i_mask[5]                 
0          0          0          i_mask[4]                 
0          0          0          i_mask[3]                 
0          0          0          i_mask[2]                 
0          0          0          i_mask[1]                 
0          0          0          i_mask[0]                 
0          0          0          o_value[31]               
0          0          0          o_value[30]               
0          0          0          o_value[29]               
0          0          0          o_value[28]               
0          0          0          o_value[27]               
0          0          0          o_value[26]               
0          0          0          o_value[25]               
0          0          0          o_value[24]               
0          0          0          o_value[23]               
0          0          0          o_value[22]               
0          0          0          o_value[21]               
0          0          0          o_value[20]               
0          0          0          o_value[19]               
0          0          0          o_value[18]               
0          0          0          o_value[17]               
0          0          0          o_value[16]               
0          0          0          o_value[15]               
0          0          0          o_value[14]               
0          0          0          o_value[13]               
0          0          0          o_value[12]               
0          0          0          o_value[11]               
0          0          0          o_value[10]               
0          0          0          o_value[9]                
0          0          0          o_value[8]                
0          0          0          o_value[7]                
0          0          0          o_value[6]                
0          0          0          o_value[5]                
0          0          0          o_value[4]                
0          0          0          o_value[3]                
0          0          0          o_value[2]                
0          0          0          o_value[1]                
0          0          0          o_value[0]                
0          0          0          o_value_unmasked[31]      
0          0          0          o_value_unmasked[30]      
0          0          0          o_value_unmasked[29]      
0          0          0          o_value_unmasked[28]      
0          0          0          o_value_unmasked[27]      
0          0          0          o_value_unmasked[26]      
0          0          0          o_value_unmasked[25]      
0          0          0          o_value_unmasked[24]      
0          0          0          o_value_unmasked[23]      
0          0          0          o_value_unmasked[22]      
0          0          0          o_value_unmasked[21]      
0          0          0          o_value_unmasked[20]      
0          0          0          o_value_unmasked[19]      
0          0          0          o_value_unmasked[18]      
0          0          0          o_value_unmasked[17]      
0          0          0          o_value_unmasked[16]      
0          0          0          o_value_unmasked[15]      
0          0          0          o_value_unmasked[14]      
0          0          0          o_value_unmasked[13]      
0          0          0          o_value_unmasked[12]      
0          0          0          o_value_unmasked[11]      
0          0          0          o_value_unmasked[10]      
0          0          0          o_value_unmasked[9]       
0          0          0          o_value_unmasked[8]       
0          0          0          o_value_unmasked[7]       
0          0          0          o_value_unmasked[6]       
0          0          0          o_value_unmasked[5]       
0          0          0          o_value_unmasked[4]       
0          0          0          o_value_unmasked[3]       
0          0          0          o_value_unmasked[2]       
0          0          0          o_value_unmasked[1]       
0          0          0          o_value_unmasked[0]       
0          0          0          w_sw_update[1]            
0          0          0          w_sw_update[0]            
0          0          0          w_sw_write_done           
0          0          0          w_hw_update               
0          0          0          w_trigger[1]              
0          0          0          w_trigger[0]              
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            
0          0          0          w_value[31]               
0          0          0          w_value[30]               
0          0          0          w_value[29]               
0          0          0          w_value[28]               
0          0          0          w_value[27]               
0          0          0          w_value[26]               
0          0          0          w_value[25]               
0          0          0          w_value[24]               
0          0          0          w_value[23]               
0          0          0          w_value[22]               
0          0          0          w_value[21]               
0          0          0          w_value[20]               
0          0          0          w_value[19]               
0          0          0          w_value[18]               
0          0          0          w_value[17]               
0          0          0          w_value[16]               
0          0          0          w_value[15]               
0          0          0          w_value[14]               
0          0          0          w_value[13]               
0          0          0          w_value[12]               
0          0          0          w_value[11]               
0          0          0          w_value[10]               
0          0          0          w_value[9]                
0          0          0          w_value[8]                
0          0          0          w_value[7]                
0          0          0          w_value[6]                
0          0          0          w_value[5]                
0          0          0          w_value[4]                
0          0          0          w_value[3]                
0          0          0          w_value[2]                
0          0          0          w_value[1]                
0          0          0          w_value[0]                

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.u_register
Type name: rggen_default_register
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_default_register.v
Number of covered signal bits: 13 of 280
Number of uncovered signal bits: 267 of 280
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 280
Number of signal bits partially toggled(fall): 0 of 280

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered signal bits: 13 of 318
Number of uncovered signal bits: 305 of 318
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 318
Number of signal bits partially toggled(fall): 0 of 318

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          i_additional_match        
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      
0          0          0          w_match                   
0          0          0          w_active                  
0          0          0          w_frontdoor_valid         
0          0          0          w_backdoor_valid          
0          0          0          w_pending_valid           
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered signal bits: 4 of 16
Number of uncovered signal bits: 12 of 16
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 16
Number of signal bits partially toggled(fall): 0 of 16

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_address[9]              
0          0          0          i_address[8]              
0          0          0          i_address[7]              
0          0          0          i_address[6]              
0          0          0          i_address[5]              
0          0          0          i_address[4]              
1          1          1          i_address[3]              
1          1          1          i_address[2]              
0          0          0          i_address[1]              
0          0          0          i_address[0]              
0          0          0          i_access[1]               
1          1          1          i_access[0]               
0          0          0          i_additional_match        
0          0          0          o_match                   
0          0          0          w_address_match           
1          1          1          w_access_match            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.u_register.u_register_common.u_read_data_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 0 of 65
Number of uncovered signal bits: 65 of 65
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 65
Number of signal bits partially toggled(fall): 0 of 65

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_select                  
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          0          0          i_data[0]                 
0          0          0          o_data[31]                
0          0          0          o_data[30]                
0          0          0          o_data[29]                
0          0          0          o_data[28]                
0          0          0          o_data[27]                
0          0          0          o_data[26]                
0          0          0          o_data[25]                
0          0          0          o_data[24]                
0          0          0          o_data[23]                
0          0          0          o_data[22]                
0          0          0          o_data[21]                
0          0          0          o_data[20]                
0          0          0          o_data[19]                
0          0          0          o_data[18]                
0          0          0          o_data[17]                
0          0          0          o_data[16]                
0          0          0          o_data[15]                
0          0          0          o_data[14]                
0          0          0          o_data[13]                
0          0          0          o_data[12]                
0          0          0          o_data[11]                
0          0          0          o_data[10]                
0          0          0          o_data[9]                 
0          0          0          o_data[8]                 
0          0          0          o_data[7]                 
0          0          0          o_data[6]                 
0          0          0          o_data[5]                 
0          0          0          o_data[4]                 
0          0          0          o_data[3]                 
0          0          0          o_data[2]                 
0          0          0          o_data[1]                 
0          0          0          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFD_REG.g_CE_FFD_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered signal bits: 3 of 461
Number of uncovered signal bits: 458 of 461
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 461
Number of signal bits partially toggled(fall): 0 of 461

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
0          0          0          i_sw_valid                
0          0          0          i_sw_read_mask[31]        
0          0          0          i_sw_read_mask[30]        
0          0          0          i_sw_read_mask[29]        
0          0          0          i_sw_read_mask[28]        
0          0          0          i_sw_read_mask[27]        
0          0          0          i_sw_read_mask[26]        
0          0          0          i_sw_read_mask[25]        
0          0          0          i_sw_read_mask[24]        
0          0          0          i_sw_read_mask[23]        
0          0          0          i_sw_read_mask[22]        
0          0          0          i_sw_read_mask[21]        
0          0          0          i_sw_read_mask[20]        
0          0          0          i_sw_read_mask[19]        
0          0          0          i_sw_read_mask[18]        
0          0          0          i_sw_read_mask[17]        
0          0          0          i_sw_read_mask[16]        
0          0          0          i_sw_read_mask[15]        
0          0          0          i_sw_read_mask[14]        
0          0          0          i_sw_read_mask[13]        
0          0          0          i_sw_read_mask[12]        
0          0          0          i_sw_read_mask[11]        
0          0          0          i_sw_read_mask[10]        
0          0          0          i_sw_read_mask[9]         
0          0          0          i_sw_read_mask[8]         
0          0          0          i_sw_read_mask[7]         
0          0          0          i_sw_read_mask[6]         
0          0          0          i_sw_read_mask[5]         
0          0          0          i_sw_read_mask[4]         
0          0          0          i_sw_read_mask[3]         
0          0          0          i_sw_read_mask[2]         
0          0          0          i_sw_read_mask[1]         
0          0          0          i_sw_read_mask[0]         
0          0          0          i_sw_write_enable         
0          0          0          i_sw_write_mask[31]       
0          0          0          i_sw_write_mask[30]       
0          0          0          i_sw_write_mask[29]       
0          0          0          i_sw_write_mask[28]       
0          0          0          i_sw_write_mask[27]       
0          0          0          i_sw_write_mask[26]       
0          0          0          i_sw_write_mask[25]       
0          0          0          i_sw_write_mask[24]       
0          0          0          i_sw_write_mask[23]       
0          0          0          i_sw_write_mask[22]       
0          0          0          i_sw_write_mask[21]       
0          0          0          i_sw_write_mask[20]       
0          0          0          i_sw_write_mask[19]       
0          0          0          i_sw_write_mask[18]       
0          0          0          i_sw_write_mask[17]       
0          0          0          i_sw_write_mask[16]       
0          0          0          i_sw_write_mask[15]       
0          0          0          i_sw_write_mask[14]       
0          0          0          i_sw_write_mask[13]       
0          0          0          i_sw_write_mask[12]       
0          0          0          i_sw_write_mask[11]       
0          0          0          i_sw_write_mask[10]       
0          0          0          i_sw_write_mask[9]        
0          0          0          i_sw_write_mask[8]        
0          0          0          i_sw_write_mask[7]        
0          0          0          i_sw_write_mask[6]        
0          0          0          i_sw_write_mask[5]        
0          0          0          i_sw_write_mask[4]        
0          0          0          i_sw_write_mask[3]        
0          0          0          i_sw_write_mask[2]        
0          0          0          i_sw_write_mask[1]        
0          0          0          i_sw_write_mask[0]        
0          0          0          i_sw_write_data[31]       
0          0          0          i_sw_write_data[30]       
0          0          0          i_sw_write_data[29]       
0          0          0          i_sw_write_data[28]       
0          0          0          i_sw_write_data[27]       
0          0          0          i_sw_write_data[26]       
0          0          0          i_sw_write_data[25]       
0          0          0          i_sw_write_data[24]       
0          0          0          i_sw_write_data[23]       
0          0          0          i_sw_write_data[22]       
0          0          0          i_sw_write_data[21]       
0          0          0          i_sw_write_data[20]       
0          0          0          i_sw_write_data[19]       
0          0          0          i_sw_write_data[18]       
0          0          0          i_sw_write_data[17]       
0          0          0          i_sw_write_data[16]       
0          0          0          i_sw_write_data[15]       
0          0          0          i_sw_write_data[14]       
0          0          0          i_sw_write_data[13]       
0          0          0          i_sw_write_data[12]       
0          0          0          i_sw_write_data[11]       
0          0          0          i_sw_write_data[10]       
0          0          0          i_sw_write_data[9]        
0          0          0          i_sw_write_data[8]        
0          0          0          i_sw_write_data[7]        
0          0          0          i_sw_write_data[6]        
0          0          0          i_sw_write_data[5]        
0          0          0          i_sw_write_data[4]        
0          0          0          i_sw_write_data[3]        
0          0          0          i_sw_write_data[2]        
1          1          1          i_sw_write_data[1]        
1          1          1          i_sw_write_data[0]        
0          0          0          o_sw_read_data[31]        
0          0          0          o_sw_read_data[30]        
0          0          0          o_sw_read_data[29]        
0          0          0          o_sw_read_data[28]        
0          0          0          o_sw_read_data[27]        
0          0          0          o_sw_read_data[26]        
0          0          0          o_sw_read_data[25]        
0          0          0          o_sw_read_data[24]        
0          0          0          o_sw_read_data[23]        
0          0          0          o_sw_read_data[22]        
0          0          0          o_sw_read_data[21]        
0          0          0          o_sw_read_data[20]        
0          0          0          o_sw_read_data[19]        
0          0          0          o_sw_read_data[18]        
0          0          0          o_sw_read_data[17]        
0          0          0          o_sw_read_data[16]        
0          0          0          o_sw_read_data[15]        
0          0          0          o_sw_read_data[14]        
0          0          0          o_sw_read_data[13]        
0          0          0          o_sw_read_data[12]        
0          0          0          o_sw_read_data[11]        
0          0          0          o_sw_read_data[10]        
0          0          0          o_sw_read_data[9]         
0          0          0          o_sw_read_data[8]         
0          0          0          o_sw_read_data[7]         
0          0          0          o_sw_read_data[6]         
0          0          0          o_sw_read_data[5]         
0          0          0          o_sw_read_data[4]         
0          0          0          o_sw_read_data[3]         
0          0          0          o_sw_read_data[2]         
0          0          0          o_sw_read_data[1]         
0          0          0          o_sw_read_data[0]         
0          0          0          o_sw_value[31]            
0          0          0          o_sw_value[30]            
0          0          0          o_sw_value[29]            
0          0          0          o_sw_value[28]            
0          0          0          o_sw_value[27]            
0          0          0          o_sw_value[26]            
0          0          0          o_sw_value[25]            
0          0          0          o_sw_value[24]            
0          0          0          o_sw_value[23]            
0          0          0          o_sw_value[22]            
0          0          0          o_sw_value[21]            
0          0          0          o_sw_value[20]            
0          0          0          o_sw_value[19]            
0          0          0          o_sw_value[18]            
0          0          0          o_sw_value[17]            
0          0          0          o_sw_value[16]            
0          0          0          o_sw_value[15]            
0          0          0          o_sw_value[14]            
0          0          0          o_sw_value[13]            
0          0          0          o_sw_value[12]            
0          0          0          o_sw_value[11]            
0          0          0          o_sw_value[10]            
0          0          0          o_sw_value[9]             
0          0          0          o_sw_value[8]             
0          0          0          o_sw_value[7]             
0          0          0          o_sw_value[6]             
0          0          0          o_sw_value[5]             
0          0          0          o_sw_value[4]             
0          0          0          o_sw_value[3]             
0          0          0          o_sw_value[2]             
0          0          0          o_sw_value[1]             
0          0          0          o_sw_value[0]             
0          0          0          o_write_trigger           
0          0          0          o_read_trigger            
0          0          0          i_hw_write_enable         
0          0          0          i_hw_write_data[31]       
0          0          0          i_hw_write_data[30]       
0          0          0          i_hw_write_data[29]       
0          0          0          i_hw_write_data[28]       
0          0          0          i_hw_write_data[27]       
0          0          0          i_hw_write_data[26]       
0          0          0          i_hw_write_data[25]       
0          0          0          i_hw_write_data[24]       
0          0          0          i_hw_write_data[23]       
0          0          0          i_hw_write_data[22]       
0          0          0          i_hw_write_data[21]       
0          0          0          i_hw_write_data[20]       
0          0          0          i_hw_write_data[19]       
0          0          0          i_hw_write_data[18]       
0          0          0          i_hw_write_data[17]       
0          0          0          i_hw_write_data[16]       
0          0          0          i_hw_write_data[15]       
0          0          0          i_hw_write_data[14]       
0          0          0          i_hw_write_data[13]       
0          0          0          i_hw_write_data[12]       
0          0          0          i_hw_write_data[11]       
0          0          0          i_hw_write_data[10]       
0          0          0          i_hw_write_data[9]        
0          0          0          i_hw_write_data[8]        
0          0          0          i_hw_write_data[7]        
0          0          0          i_hw_write_data[6]        
0          0          0          i_hw_write_data[5]        
0          0          0          i_hw_write_data[4]        
0          0          0          i_hw_write_data[3]        
0          0          0          i_hw_write_data[2]        
0          0          0          i_hw_write_data[1]        
0          0          0          i_hw_write_data[0]        
0          0          0          i_hw_set[31]              
0          0          0          i_hw_set[30]              
0          0          0          i_hw_set[29]              
0          0          0          i_hw_set[28]              
0          0          0          i_hw_set[27]              
0          0          0          i_hw_set[26]              
0          0          0          i_hw_set[25]              
0          0          0          i_hw_set[24]              
0          0          0          i_hw_set[23]              
0          0          0          i_hw_set[22]              
0          0          0          i_hw_set[21]              
0          0          0          i_hw_set[20]              
0          0          0          i_hw_set[19]              
0          0          0          i_hw_set[18]              
0          0          0          i_hw_set[17]              
0          0          0          i_hw_set[16]              
0          0          0          i_hw_set[15]              
0          0          0          i_hw_set[14]              
0          0          0          i_hw_set[13]              
0          0          0          i_hw_set[12]              
0          0          0          i_hw_set[11]              
0          0          0          i_hw_set[10]              
0          0          0          i_hw_set[9]               
0          0          0          i_hw_set[8]               
0          0          0          i_hw_set[7]               
0          0          0          i_hw_set[6]               
0          0          0          i_hw_set[5]               
0          0          0          i_hw_set[4]               
0          0          0          i_hw_set[3]               
0          0          0          i_hw_set[2]               
0          0          0          i_hw_set[1]               
0          0          0          i_hw_set[0]               
0          0          0          i_hw_clear[31]            
0          0          0          i_hw_clear[30]            
0          0          0          i_hw_clear[29]            
0          0          0          i_hw_clear[28]            
0          0          0          i_hw_clear[27]            
0          0          0          i_hw_clear[26]            
0          0          0          i_hw_clear[25]            
0          0          0          i_hw_clear[24]            
0          0          0          i_hw_clear[23]            
0          0          0          i_hw_clear[22]            
0          0          0          i_hw_clear[21]            
0          0          0          i_hw_clear[20]            
0          0          0          i_hw_clear[19]            
0          0          0          i_hw_clear[18]            
0          0          0          i_hw_clear[17]            
0          0          0          i_hw_clear[16]            
0          0          0          i_hw_clear[15]            
0          0          0          i_hw_clear[14]            
0          0          0          i_hw_clear[13]            
0          0          0          i_hw_clear[12]            
0          0          0          i_hw_clear[11]            
0          0          0          i_hw_clear[10]            
0          0          0          i_hw_clear[9]             
0          0          0          i_hw_clear[8]             
0          0          0          i_hw_clear[7]             
0          0          0          i_hw_clear[6]             
0          0          0          i_hw_clear[5]             
0          0          0          i_hw_clear[4]             
0          0          0          i_hw_clear[3]             
0          0          0          i_hw_clear[2]             
0          0          0          i_hw_clear[1]             
0          0          0          i_hw_clear[0]             
0          0          0          i_value[31]               
0          0          0          i_value[30]               
0          0          0          i_value[29]               
0          0          0          i_value[28]               
0          0          0          i_value[27]               
0          0          0          i_value[26]               
0          0          0          i_value[25]               
0          0          0          i_value[24]               
0          0          0          i_value[23]               
0          0          0          i_value[22]               
0          0          0          i_value[21]               
0          0          0          i_value[20]               
0          0          0          i_value[19]               
0          0          0          i_value[18]               
0          0          0          i_value[17]               
0          0          0          i_value[16]               
0          0          0          i_value[15]               
0          0          0          i_value[14]               
0          0          0          i_value[13]               
0          0          0          i_value[12]               
0          0          0          i_value[11]               
0          0          0          i_value[10]               
0          0          0          i_value[9]                
0          0          0          i_value[8]                
0          0          0          i_value[7]                
0          0          0          i_value[6]                
0          0          0          i_value[5]                
0          0          0          i_value[4]                
0          0          0          i_value[3]                
0          0          0          i_value[2]                
0          0          0          i_value[1]                
0          0          0          i_value[0]                
0          0          0          i_mask[31]                
0          0          0          i_mask[30]                
0          0          0          i_mask[29]                
0          0          0          i_mask[28]                
0          0          0          i_mask[27]                
0          0          0          i_mask[26]                
0          0          0          i_mask[25]                
0          0          0          i_mask[24]                
0          0          0          i_mask[23]                
0          0          0          i_mask[22]                
0          0          0          i_mask[21]                
0          0          0          i_mask[20]                
0          0          0          i_mask[19]                
0          0          0          i_mask[18]                
0          0          0          i_mask[17]                
0          0          0          i_mask[16]                
0          0          0          i_mask[15]                
0          0          0          i_mask[14]                
0          0          0          i_mask[13]                
0          0          0          i_mask[12]                
0          0          0          i_mask[11]                
0          0          0          i_mask[10]                
0          0          0          i_mask[9]                 
0          0          0          i_mask[8]                 
0          0          0          i_mask[7]                 
0          0          0          i_mask[6]                 
0          0          0          i_mask[5]                 
0          0          0          i_mask[4]                 
0          0          0          i_mask[3]                 
0          0          0          i_mask[2]                 
0          0          0          i_mask[1]                 
0          0          0          i_mask[0]                 
0          0          0          o_value[31]               
0          0          0          o_value[30]               
0          0          0          o_value[29]               
0          0          0          o_value[28]               
0          0          0          o_value[27]               
0          0          0          o_value[26]               
0          0          0          o_value[25]               
0          0          0          o_value[24]               
0          0          0          o_value[23]               
0          0          0          o_value[22]               
0          0          0          o_value[21]               
0          0          0          o_value[20]               
0          0          0          o_value[19]               
0          0          0          o_value[18]               
0          0          0          o_value[17]               
0          0          0          o_value[16]               
0          0          0          o_value[15]               
0          0          0          o_value[14]               
0          0          0          o_value[13]               
0          0          0          o_value[12]               
0          0          0          o_value[11]               
0          0          0          o_value[10]               
0          0          0          o_value[9]                
0          0          0          o_value[8]                
0          0          0          o_value[7]                
0          0          0          o_value[6]                
0          0          0          o_value[5]                
0          0          0          o_value[4]                
0          0          0          o_value[3]                
0          0          0          o_value[2]                
0          0          0          o_value[1]                
0          0          0          o_value[0]                
0          0          0          o_value_unmasked[31]      
0          0          0          o_value_unmasked[30]      
0          0          0          o_value_unmasked[29]      
0          0          0          o_value_unmasked[28]      
0          0          0          o_value_unmasked[27]      
0          0          0          o_value_unmasked[26]      
0          0          0          o_value_unmasked[25]      
0          0          0          o_value_unmasked[24]      
0          0          0          o_value_unmasked[23]      
0          0          0          o_value_unmasked[22]      
0          0          0          o_value_unmasked[21]      
0          0          0          o_value_unmasked[20]      
0          0          0          o_value_unmasked[19]      
0          0          0          o_value_unmasked[18]      
0          0          0          o_value_unmasked[17]      
0          0          0          o_value_unmasked[16]      
0          0          0          o_value_unmasked[15]      
0          0          0          o_value_unmasked[14]      
0          0          0          o_value_unmasked[13]      
0          0          0          o_value_unmasked[12]      
0          0          0          o_value_unmasked[11]      
0          0          0          o_value_unmasked[10]      
0          0          0          o_value_unmasked[9]       
0          0          0          o_value_unmasked[8]       
0          0          0          o_value_unmasked[7]       
0          0          0          o_value_unmasked[6]       
0          0          0          o_value_unmasked[5]       
0          0          0          o_value_unmasked[4]       
0          0          0          o_value_unmasked[3]       
0          0          0          o_value_unmasked[2]       
0          0          0          o_value_unmasked[1]       
0          0          0          o_value_unmasked[0]       
0          0          0          w_sw_update[1]            
0          0          0          w_sw_update[0]            
0          0          0          w_sw_write_done           
0          0          0          w_hw_update               
0          0          0          w_trigger[1]              
0          0          0          w_trigger[0]              
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            
0          0          0          w_value[31]               
0          0          0          w_value[30]               
0          0          0          w_value[29]               
0          0          0          w_value[28]               
0          0          0          w_value[27]               
0          0          0          w_value[26]               
0          0          0          w_value[25]               
0          0          0          w_value[24]               
0          0          0          w_value[23]               
0          0          0          w_value[22]               
0          0          0          w_value[21]               
0          0          0          w_value[20]               
0          0          0          w_value[19]               
0          0          0          w_value[18]               
0          0          0          w_value[17]               
0          0          0          w_value[16]               
0          0          0          w_value[15]               
0          0          0          w_value[14]               
0          0          0          w_value[13]               
0          0          0          w_value[12]               
0          0          0          w_value[11]               
0          0          0          w_value[10]               
0          0          0          w_value[9]                
0          0          0          w_value[8]                
0          0          0          w_value[7]                
0          0          0          w_value[6]                
0          0          0          w_value[5]                
0          0          0          w_value[4]                
0          0          0          w_value[3]                
0          0          0          w_value[2]                
0          0          0          w_value[1]                
0          0          0          w_value[0]                

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.u_register
Type name: rggen_default_register
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_default_register.v
Number of covered signal bits: 13 of 280
Number of uncovered signal bits: 267 of 280
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 280
Number of signal bits partially toggled(fall): 0 of 280

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered signal bits: 13 of 318
Number of uncovered signal bits: 305 of 318
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 318
Number of signal bits partially toggled(fall): 0 of 318

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          i_additional_match        
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      
0          0          0          w_match                   
0          0          0          w_active                  
0          0          0          w_frontdoor_valid         
0          0          0          w_backdoor_valid          
0          0          0          w_pending_valid           
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered signal bits: 4 of 16
Number of uncovered signal bits: 12 of 16
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 16
Number of signal bits partially toggled(fall): 0 of 16

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_address[9]              
0          0          0          i_address[8]              
0          0          0          i_address[7]              
0          0          0          i_address[6]              
0          0          0          i_address[5]              
0          0          0          i_address[4]              
1          1          1          i_address[3]              
1          1          1          i_address[2]              
0          0          0          i_address[1]              
0          0          0          i_address[0]              
0          0          0          i_access[1]               
1          1          1          i_access[0]               
0          0          0          i_additional_match        
0          0          0          o_match                   
0          0          0          w_address_match           
1          1          1          w_access_match            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.u_register.u_register_common.u_read_data_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 0 of 65
Number of uncovered signal bits: 65 of 65
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 65
Number of signal bits partially toggled(fall): 0 of 65

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_select                  
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          0          0          i_data[0]                 
0          0          0          o_data[31]                
0          0          0          o_data[30]                
0          0          0          o_data[29]                
0          0          0          o_data[28]                
0          0          0          o_data[27]                
0          0          0          o_data[26]                
0          0          0          o_data[25]                
0          0          0          o_data[24]                
0          0          0          o_data[23]                
0          0          0          o_data[22]                
0          0          0          o_data[21]                
0          0          0          o_data[20]                
0          0          0          o_data[19]                
0          0          0          o_data[18]                
0          0          0          o_data[17]                
0          0          0          o_data[16]                
0          0          0          o_data[15]                
0          0          0          o_data[14]                
0          0          0          o_data[13]                
0          0          0          o_data[12]                
0          0          0          o_data[11]                
0          0          0          o_data[10]                
0          0          0          o_data[9]                 
0          0          0          o_data[8]                 
0          0          0          o_data[7]                 
0          0          0          o_data[6]                 
0          0          0          o_data[5]                 
0          0          0          o_data[4]                 
0          0          0          o_data[3]                 
0          0          0          o_data[2]                 
0          0          0          o_data[1]                 
0          0          0          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_CE_FFE_REG.g_CE_FFE_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered signal bits: 3 of 461
Number of uncovered signal bits: 458 of 461
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 461
Number of signal bits partially toggled(fall): 0 of 461

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
0          0          0          i_sw_valid                
0          0          0          i_sw_read_mask[31]        
0          0          0          i_sw_read_mask[30]        
0          0          0          i_sw_read_mask[29]        
0          0          0          i_sw_read_mask[28]        
0          0          0          i_sw_read_mask[27]        
0          0          0          i_sw_read_mask[26]        
0          0          0          i_sw_read_mask[25]        
0          0          0          i_sw_read_mask[24]        
0          0          0          i_sw_read_mask[23]        
0          0          0          i_sw_read_mask[22]        
0          0          0          i_sw_read_mask[21]        
0          0          0          i_sw_read_mask[20]        
0          0          0          i_sw_read_mask[19]        
0          0          0          i_sw_read_mask[18]        
0          0          0          i_sw_read_mask[17]        
0          0          0          i_sw_read_mask[16]        
0          0          0          i_sw_read_mask[15]        
0          0          0          i_sw_read_mask[14]        
0          0          0          i_sw_read_mask[13]        
0          0          0          i_sw_read_mask[12]        
0          0          0          i_sw_read_mask[11]        
0          0          0          i_sw_read_mask[10]        
0          0          0          i_sw_read_mask[9]         
0          0          0          i_sw_read_mask[8]         
0          0          0          i_sw_read_mask[7]         
0          0          0          i_sw_read_mask[6]         
0          0          0          i_sw_read_mask[5]         
0          0          0          i_sw_read_mask[4]         
0          0          0          i_sw_read_mask[3]         
0          0          0          i_sw_read_mask[2]         
0          0          0          i_sw_read_mask[1]         
0          0          0          i_sw_read_mask[0]         
0          0          0          i_sw_write_enable         
0          0          0          i_sw_write_mask[31]       
0          0          0          i_sw_write_mask[30]       
0          0          0          i_sw_write_mask[29]       
0          0          0          i_sw_write_mask[28]       
0          0          0          i_sw_write_mask[27]       
0          0          0          i_sw_write_mask[26]       
0          0          0          i_sw_write_mask[25]       
0          0          0          i_sw_write_mask[24]       
0          0          0          i_sw_write_mask[23]       
0          0          0          i_sw_write_mask[22]       
0          0          0          i_sw_write_mask[21]       
0          0          0          i_sw_write_mask[20]       
0          0          0          i_sw_write_mask[19]       
0          0          0          i_sw_write_mask[18]       
0          0          0          i_sw_write_mask[17]       
0          0          0          i_sw_write_mask[16]       
0          0          0          i_sw_write_mask[15]       
0          0          0          i_sw_write_mask[14]       
0          0          0          i_sw_write_mask[13]       
0          0          0          i_sw_write_mask[12]       
0          0          0          i_sw_write_mask[11]       
0          0          0          i_sw_write_mask[10]       
0          0          0          i_sw_write_mask[9]        
0          0          0          i_sw_write_mask[8]        
0          0          0          i_sw_write_mask[7]        
0          0          0          i_sw_write_mask[6]        
0          0          0          i_sw_write_mask[5]        
0          0          0          i_sw_write_mask[4]        
0          0          0          i_sw_write_mask[3]        
0          0          0          i_sw_write_mask[2]        
0          0          0          i_sw_write_mask[1]        
0          0          0          i_sw_write_mask[0]        
0          0          0          i_sw_write_data[31]       
0          0          0          i_sw_write_data[30]       
0          0          0          i_sw_write_data[29]       
0          0          0          i_sw_write_data[28]       
0          0          0          i_sw_write_data[27]       
0          0          0          i_sw_write_data[26]       
0          0          0          i_sw_write_data[25]       
0          0          0          i_sw_write_data[24]       
0          0          0          i_sw_write_data[23]       
0          0          0          i_sw_write_data[22]       
0          0          0          i_sw_write_data[21]       
0          0          0          i_sw_write_data[20]       
0          0          0          i_sw_write_data[19]       
0          0          0          i_sw_write_data[18]       
0          0          0          i_sw_write_data[17]       
0          0          0          i_sw_write_data[16]       
0          0          0          i_sw_write_data[15]       
0          0          0          i_sw_write_data[14]       
0          0          0          i_sw_write_data[13]       
0          0          0          i_sw_write_data[12]       
0          0          0          i_sw_write_data[11]       
0          0          0          i_sw_write_data[10]       
0          0          0          i_sw_write_data[9]        
0          0          0          i_sw_write_data[8]        
0          0          0          i_sw_write_data[7]        
0          0          0          i_sw_write_data[6]        
0          0          0          i_sw_write_data[5]        
0          0          0          i_sw_write_data[4]        
0          0          0          i_sw_write_data[3]        
0          0          0          i_sw_write_data[2]        
1          1          1          i_sw_write_data[1]        
1          1          1          i_sw_write_data[0]        
0          0          0          o_sw_read_data[31]        
0          0          0          o_sw_read_data[30]        
0          0          0          o_sw_read_data[29]        
0          0          0          o_sw_read_data[28]        
0          0          0          o_sw_read_data[27]        
0          0          0          o_sw_read_data[26]        
0          0          0          o_sw_read_data[25]        
0          0          0          o_sw_read_data[24]        
0          0          0          o_sw_read_data[23]        
0          0          0          o_sw_read_data[22]        
0          0          0          o_sw_read_data[21]        
0          0          0          o_sw_read_data[20]        
0          0          0          o_sw_read_data[19]        
0          0          0          o_sw_read_data[18]        
0          0          0          o_sw_read_data[17]        
0          0          0          o_sw_read_data[16]        
0          0          0          o_sw_read_data[15]        
0          0          0          o_sw_read_data[14]        
0          0          0          o_sw_read_data[13]        
0          0          0          o_sw_read_data[12]        
0          0          0          o_sw_read_data[11]        
0          0          0          o_sw_read_data[10]        
0          0          0          o_sw_read_data[9]         
0          0          0          o_sw_read_data[8]         
0          0          0          o_sw_read_data[7]         
0          0          0          o_sw_read_data[6]         
0          0          0          o_sw_read_data[5]         
0          0          0          o_sw_read_data[4]         
0          0          0          o_sw_read_data[3]         
0          0          0          o_sw_read_data[2]         
0          0          0          o_sw_read_data[1]         
0          0          0          o_sw_read_data[0]         
0          0          0          o_sw_value[31]            
0          0          0          o_sw_value[30]            
0          0          0          o_sw_value[29]            
0          0          0          o_sw_value[28]            
0          0          0          o_sw_value[27]            
0          0          0          o_sw_value[26]            
0          0          0          o_sw_value[25]            
0          0          0          o_sw_value[24]            
0          0          0          o_sw_value[23]            
0          0          0          o_sw_value[22]            
0          0          0          o_sw_value[21]            
0          0          0          o_sw_value[20]            
0          0          0          o_sw_value[19]            
0          0          0          o_sw_value[18]            
0          0          0          o_sw_value[17]            
0          0          0          o_sw_value[16]            
0          0          0          o_sw_value[15]            
0          0          0          o_sw_value[14]            
0          0          0          o_sw_value[13]            
0          0          0          o_sw_value[12]            
0          0          0          o_sw_value[11]            
0          0          0          o_sw_value[10]            
0          0          0          o_sw_value[9]             
0          0          0          o_sw_value[8]             
0          0          0          o_sw_value[7]             
0          0          0          o_sw_value[6]             
0          0          0          o_sw_value[5]             
0          0          0          o_sw_value[4]             
0          0          0          o_sw_value[3]             
0          0          0          o_sw_value[2]             
0          0          0          o_sw_value[1]             
0          0          0          o_sw_value[0]             
0          0          0          o_write_trigger           
0          0          0          o_read_trigger            
0          0          0          i_hw_write_enable         
0          0          0          i_hw_write_data[31]       
0          0          0          i_hw_write_data[30]       
0          0          0          i_hw_write_data[29]       
0          0          0          i_hw_write_data[28]       
0          0          0          i_hw_write_data[27]       
0          0          0          i_hw_write_data[26]       
0          0          0          i_hw_write_data[25]       
0          0          0          i_hw_write_data[24]       
0          0          0          i_hw_write_data[23]       
0          0          0          i_hw_write_data[22]       
0          0          0          i_hw_write_data[21]       
0          0          0          i_hw_write_data[20]       
0          0          0          i_hw_write_data[19]       
0          0          0          i_hw_write_data[18]       
0          0          0          i_hw_write_data[17]       
0          0          0          i_hw_write_data[16]       
0          0          0          i_hw_write_data[15]       
0          0          0          i_hw_write_data[14]       
0          0          0          i_hw_write_data[13]       
0          0          0          i_hw_write_data[12]       
0          0          0          i_hw_write_data[11]       
0          0          0          i_hw_write_data[10]       
0          0          0          i_hw_write_data[9]        
0          0          0          i_hw_write_data[8]        
0          0          0          i_hw_write_data[7]        
0          0          0          i_hw_write_data[6]        
0          0          0          i_hw_write_data[5]        
0          0          0          i_hw_write_data[4]        
0          0          0          i_hw_write_data[3]        
0          0          0          i_hw_write_data[2]        
0          0          0          i_hw_write_data[1]        
0          0          0          i_hw_write_data[0]        
0          0          0          i_hw_set[31]              
0          0          0          i_hw_set[30]              
0          0          0          i_hw_set[29]              
0          0          0          i_hw_set[28]              
0          0          0          i_hw_set[27]              
0          0          0          i_hw_set[26]              
0          0          0          i_hw_set[25]              
0          0          0          i_hw_set[24]              
0          0          0          i_hw_set[23]              
0          0          0          i_hw_set[22]              
0          0          0          i_hw_set[21]              
0          0          0          i_hw_set[20]              
0          0          0          i_hw_set[19]              
0          0          0          i_hw_set[18]              
0          0          0          i_hw_set[17]              
0          0          0          i_hw_set[16]              
0          0          0          i_hw_set[15]              
0          0          0          i_hw_set[14]              
0          0          0          i_hw_set[13]              
0          0          0          i_hw_set[12]              
0          0          0          i_hw_set[11]              
0          0          0          i_hw_set[10]              
0          0          0          i_hw_set[9]               
0          0          0          i_hw_set[8]               
0          0          0          i_hw_set[7]               
0          0          0          i_hw_set[6]               
0          0          0          i_hw_set[5]               
0          0          0          i_hw_set[4]               
0          0          0          i_hw_set[3]               
0          0          0          i_hw_set[2]               
0          0          0          i_hw_set[1]               
0          0          0          i_hw_set[0]               
0          0          0          i_hw_clear[31]            
0          0          0          i_hw_clear[30]            
0          0          0          i_hw_clear[29]            
0          0          0          i_hw_clear[28]            
0          0          0          i_hw_clear[27]            
0          0          0          i_hw_clear[26]            
0          0          0          i_hw_clear[25]            
0          0          0          i_hw_clear[24]            
0          0          0          i_hw_clear[23]            
0          0          0          i_hw_clear[22]            
0          0          0          i_hw_clear[21]            
0          0          0          i_hw_clear[20]            
0          0          0          i_hw_clear[19]            
0          0          0          i_hw_clear[18]            
0          0          0          i_hw_clear[17]            
0          0          0          i_hw_clear[16]            
0          0          0          i_hw_clear[15]            
0          0          0          i_hw_clear[14]            
0          0          0          i_hw_clear[13]            
0          0          0          i_hw_clear[12]            
0          0          0          i_hw_clear[11]            
0          0          0          i_hw_clear[10]            
0          0          0          i_hw_clear[9]             
0          0          0          i_hw_clear[8]             
0          0          0          i_hw_clear[7]             
0          0          0          i_hw_clear[6]             
0          0          0          i_hw_clear[5]             
0          0          0          i_hw_clear[4]             
0          0          0          i_hw_clear[3]             
0          0          0          i_hw_clear[2]             
0          0          0          i_hw_clear[1]             
0          0          0          i_hw_clear[0]             
0          0          0          i_value[31]               
0          0          0          i_value[30]               
0          0          0          i_value[29]               
0          0          0          i_value[28]               
0          0          0          i_value[27]               
0          0          0          i_value[26]               
0          0          0          i_value[25]               
0          0          0          i_value[24]               
0          0          0          i_value[23]               
0          0          0          i_value[22]               
0          0          0          i_value[21]               
0          0          0          i_value[20]               
0          0          0          i_value[19]               
0          0          0          i_value[18]               
0          0          0          i_value[17]               
0          0          0          i_value[16]               
0          0          0          i_value[15]               
0          0          0          i_value[14]               
0          0          0          i_value[13]               
0          0          0          i_value[12]               
0          0          0          i_value[11]               
0          0          0          i_value[10]               
0          0          0          i_value[9]                
0          0          0          i_value[8]                
0          0          0          i_value[7]                
0          0          0          i_value[6]                
0          0          0          i_value[5]                
0          0          0          i_value[4]                
0          0          0          i_value[3]                
0          0          0          i_value[2]                
0          0          0          i_value[1]                
0          0          0          i_value[0]                
0          0          0          i_mask[31]                
0          0          0          i_mask[30]                
0          0          0          i_mask[29]                
0          0          0          i_mask[28]                
0          0          0          i_mask[27]                
0          0          0          i_mask[26]                
0          0          0          i_mask[25]                
0          0          0          i_mask[24]                
0          0          0          i_mask[23]                
0          0          0          i_mask[22]                
0          0          0          i_mask[21]                
0          0          0          i_mask[20]                
0          0          0          i_mask[19]                
0          0          0          i_mask[18]                
0          0          0          i_mask[17]                
0          0          0          i_mask[16]                
0          0          0          i_mask[15]                
0          0          0          i_mask[14]                
0          0          0          i_mask[13]                
0          0          0          i_mask[12]                
0          0          0          i_mask[11]                
0          0          0          i_mask[10]                
0          0          0          i_mask[9]                 
0          0          0          i_mask[8]                 
0          0          0          i_mask[7]                 
0          0          0          i_mask[6]                 
0          0          0          i_mask[5]                 
0          0          0          i_mask[4]                 
0          0          0          i_mask[3]                 
0          0          0          i_mask[2]                 
0          0          0          i_mask[1]                 
0          0          0          i_mask[0]                 
0          0          0          o_value[31]               
0          0          0          o_value[30]               
0          0          0          o_value[29]               
0          0          0          o_value[28]               
0          0          0          o_value[27]               
0          0          0          o_value[26]               
0          0          0          o_value[25]               
0          0          0          o_value[24]               
0          0          0          o_value[23]               
0          0          0          o_value[22]               
0          0          0          o_value[21]               
0          0          0          o_value[20]               
0          0          0          o_value[19]               
0          0          0          o_value[18]               
0          0          0          o_value[17]               
0          0          0          o_value[16]               
0          0          0          o_value[15]               
0          0          0          o_value[14]               
0          0          0          o_value[13]               
0          0          0          o_value[12]               
0          0          0          o_value[11]               
0          0          0          o_value[10]               
0          0          0          o_value[9]                
0          0          0          o_value[8]                
0          0          0          o_value[7]                
0          0          0          o_value[6]                
0          0          0          o_value[5]                
0          0          0          o_value[4]                
0          0          0          o_value[3]                
0          0          0          o_value[2]                
0          0          0          o_value[1]                
0          0          0          o_value[0]                
0          0          0          o_value_unmasked[31]      
0          0          0          o_value_unmasked[30]      
0          0          0          o_value_unmasked[29]      
0          0          0          o_value_unmasked[28]      
0          0          0          o_value_unmasked[27]      
0          0          0          o_value_unmasked[26]      
0          0          0          o_value_unmasked[25]      
0          0          0          o_value_unmasked[24]      
0          0          0          o_value_unmasked[23]      
0          0          0          o_value_unmasked[22]      
0          0          0          o_value_unmasked[21]      
0          0          0          o_value_unmasked[20]      
0          0          0          o_value_unmasked[19]      
0          0          0          o_value_unmasked[18]      
0          0          0          o_value_unmasked[17]      
0          0          0          o_value_unmasked[16]      
0          0          0          o_value_unmasked[15]      
0          0          0          o_value_unmasked[14]      
0          0          0          o_value_unmasked[13]      
0          0          0          o_value_unmasked[12]      
0          0          0          o_value_unmasked[11]      
0          0          0          o_value_unmasked[10]      
0          0          0          o_value_unmasked[9]       
0          0          0          o_value_unmasked[8]       
0          0          0          o_value_unmasked[7]       
0          0          0          o_value_unmasked[6]       
0          0          0          o_value_unmasked[5]       
0          0          0          o_value_unmasked[4]       
0          0          0          o_value_unmasked[3]       
0          0          0          o_value_unmasked[2]       
0          0          0          o_value_unmasked[1]       
0          0          0          o_value_unmasked[0]       
0          0          0          w_sw_update[1]            
0          0          0          w_sw_update[0]            
0          0          0          w_sw_write_done           
0          0          0          w_hw_update               
0          0          0          w_trigger[1]              
0          0          0          w_trigger[0]              
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            
0          0          0          w_value[31]               
0          0          0          w_value[30]               
0          0          0          w_value[29]               
0          0          0          w_value[28]               
0          0          0          w_value[27]               
0          0          0          w_value[26]               
0          0          0          w_value[25]               
0          0          0          w_value[24]               
0          0          0          w_value[23]               
0          0          0          w_value[22]               
0          0          0          w_value[21]               
0          0          0          w_value[20]               
0          0          0          w_value[19]               
0          0          0          w_value[18]               
0          0          0          w_value[17]               
0          0          0          w_value[16]               
0          0          0          w_value[15]               
0          0          0          w_value[14]               
0          0          0          w_value[13]               
0          0          0          w_value[12]               
0          0          0          w_value[11]               
0          0          0          w_value[10]               
0          0          0          w_value[9]                
0          0          0          w_value[8]                
0          0          0          w_value[7]                
0          0          0          w_value[6]                
0          0          0          w_value[5]                
0          0          0          w_value[4]                
0          0          0          w_value[3]                
0          0          0          w_value[2]                
0          0          0          w_value[1]                
0          0          0          w_value[0]                

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.u_register
Type name: rggen_default_register
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_default_register.v
Number of covered signal bits: 13 of 280
Number of uncovered signal bits: 267 of 280
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 280
Number of signal bits partially toggled(fall): 0 of 280

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered signal bits: 13 of 318
Number of uncovered signal bits: 305 of 318
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 318
Number of signal bits partially toggled(fall): 0 of 318

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          i_additional_match        
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      
0          0          0          w_match                   
0          0          0          w_active                  
0          0          0          w_frontdoor_valid         
0          0          0          w_backdoor_valid          
0          0          0          w_pending_valid           
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered signal bits: 4 of 16
Number of uncovered signal bits: 12 of 16
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 16
Number of signal bits partially toggled(fall): 0 of 16

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_address[9]              
0          0          0          i_address[8]              
0          0          0          i_address[7]              
0          0          0          i_address[6]              
0          0          0          i_address[5]              
0          0          0          i_address[4]              
1          1          1          i_address[3]              
1          1          1          i_address[2]              
0          0          0          i_address[1]              
0          0          0          i_address[0]              
0          0          0          i_access[1]               
1          1          1          i_access[0]               
0          0          0          i_additional_match        
0          0          0          o_match                   
0          0          0          w_address_match           
1          1          1          w_access_match            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.u_register.u_register_common.u_read_data_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 0 of 65
Number of uncovered signal bits: 65 of 65
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 65
Number of signal bits partially toggled(fall): 0 of 65

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_select                  
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          0          0          i_data[0]                 
0          0          0          o_data[31]                
0          0          0          o_data[30]                
0          0          0          o_data[29]                
0          0          0          o_data[28]                
0          0          0          o_data[27]                
0          0          0          o_data[26]                
0          0          0          o_data[25]                
0          0          0          o_data[24]                
0          0          0          o_data[23]                
0          0          0          o_data[22]                
0          0          0          o_data[21]                
0          0          0          o_data[20]                
0          0          0          o_data[19]                
0          0          0          o_data[18]                
0          0          0          o_data[17]                
0          0          0          o_data[16]                
0          0          0          o_data[15]                
0          0          0          o_data[14]                
0          0          0          o_data[13]                
0          0          0          o_data[12]                
0          0          0          o_data[11]                
0          0          0          o_data[10]                
0          0          0          o_data[9]                 
0          0          0          o_data[8]                 
0          0          0          o_data[7]                 
0          0          0          o_data[6]                 
0          0          0          o_data[5]                 
0          0          0          o_data[4]                 
0          0          0          o_data[3]                 
0          0          0          o_data[2]                 
0          0          0          o_data[1]                 
0          0          0          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFE_REG.g_UE_FFE_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered signal bits: 3 of 461
Number of uncovered signal bits: 458 of 461
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 461
Number of signal bits partially toggled(fall): 0 of 461

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
0          0          0          i_sw_valid                
0          0          0          i_sw_read_mask[31]        
0          0          0          i_sw_read_mask[30]        
0          0          0          i_sw_read_mask[29]        
0          0          0          i_sw_read_mask[28]        
0          0          0          i_sw_read_mask[27]        
0          0          0          i_sw_read_mask[26]        
0          0          0          i_sw_read_mask[25]        
0          0          0          i_sw_read_mask[24]        
0          0          0          i_sw_read_mask[23]        
0          0          0          i_sw_read_mask[22]        
0          0          0          i_sw_read_mask[21]        
0          0          0          i_sw_read_mask[20]        
0          0          0          i_sw_read_mask[19]        
0          0          0          i_sw_read_mask[18]        
0          0          0          i_sw_read_mask[17]        
0          0          0          i_sw_read_mask[16]        
0          0          0          i_sw_read_mask[15]        
0          0          0          i_sw_read_mask[14]        
0          0          0          i_sw_read_mask[13]        
0          0          0          i_sw_read_mask[12]        
0          0          0          i_sw_read_mask[11]        
0          0          0          i_sw_read_mask[10]        
0          0          0          i_sw_read_mask[9]         
0          0          0          i_sw_read_mask[8]         
0          0          0          i_sw_read_mask[7]         
0          0          0          i_sw_read_mask[6]         
0          0          0          i_sw_read_mask[5]         
0          0          0          i_sw_read_mask[4]         
0          0          0          i_sw_read_mask[3]         
0          0          0          i_sw_read_mask[2]         
0          0          0          i_sw_read_mask[1]         
0          0          0          i_sw_read_mask[0]         
0          0          0          i_sw_write_enable         
0          0          0          i_sw_write_mask[31]       
0          0          0          i_sw_write_mask[30]       
0          0          0          i_sw_write_mask[29]       
0          0          0          i_sw_write_mask[28]       
0          0          0          i_sw_write_mask[27]       
0          0          0          i_sw_write_mask[26]       
0          0          0          i_sw_write_mask[25]       
0          0          0          i_sw_write_mask[24]       
0          0          0          i_sw_write_mask[23]       
0          0          0          i_sw_write_mask[22]       
0          0          0          i_sw_write_mask[21]       
0          0          0          i_sw_write_mask[20]       
0          0          0          i_sw_write_mask[19]       
0          0          0          i_sw_write_mask[18]       
0          0          0          i_sw_write_mask[17]       
0          0          0          i_sw_write_mask[16]       
0          0          0          i_sw_write_mask[15]       
0          0          0          i_sw_write_mask[14]       
0          0          0          i_sw_write_mask[13]       
0          0          0          i_sw_write_mask[12]       
0          0          0          i_sw_write_mask[11]       
0          0          0          i_sw_write_mask[10]       
0          0          0          i_sw_write_mask[9]        
0          0          0          i_sw_write_mask[8]        
0          0          0          i_sw_write_mask[7]        
0          0          0          i_sw_write_mask[6]        
0          0          0          i_sw_write_mask[5]        
0          0          0          i_sw_write_mask[4]        
0          0          0          i_sw_write_mask[3]        
0          0          0          i_sw_write_mask[2]        
0          0          0          i_sw_write_mask[1]        
0          0          0          i_sw_write_mask[0]        
0          0          0          i_sw_write_data[31]       
0          0          0          i_sw_write_data[30]       
0          0          0          i_sw_write_data[29]       
0          0          0          i_sw_write_data[28]       
0          0          0          i_sw_write_data[27]       
0          0          0          i_sw_write_data[26]       
0          0          0          i_sw_write_data[25]       
0          0          0          i_sw_write_data[24]       
0          0          0          i_sw_write_data[23]       
0          0          0          i_sw_write_data[22]       
0          0          0          i_sw_write_data[21]       
0          0          0          i_sw_write_data[20]       
0          0          0          i_sw_write_data[19]       
0          0          0          i_sw_write_data[18]       
0          0          0          i_sw_write_data[17]       
0          0          0          i_sw_write_data[16]       
0          0          0          i_sw_write_data[15]       
0          0          0          i_sw_write_data[14]       
0          0          0          i_sw_write_data[13]       
0          0          0          i_sw_write_data[12]       
0          0          0          i_sw_write_data[11]       
0          0          0          i_sw_write_data[10]       
0          0          0          i_sw_write_data[9]        
0          0          0          i_sw_write_data[8]        
0          0          0          i_sw_write_data[7]        
0          0          0          i_sw_write_data[6]        
0          0          0          i_sw_write_data[5]        
0          0          0          i_sw_write_data[4]        
0          0          0          i_sw_write_data[3]        
0          0          0          i_sw_write_data[2]        
1          1          1          i_sw_write_data[1]        
1          1          1          i_sw_write_data[0]        
0          0          0          o_sw_read_data[31]        
0          0          0          o_sw_read_data[30]        
0          0          0          o_sw_read_data[29]        
0          0          0          o_sw_read_data[28]        
0          0          0          o_sw_read_data[27]        
0          0          0          o_sw_read_data[26]        
0          0          0          o_sw_read_data[25]        
0          0          0          o_sw_read_data[24]        
0          0          0          o_sw_read_data[23]        
0          0          0          o_sw_read_data[22]        
0          0          0          o_sw_read_data[21]        
0          0          0          o_sw_read_data[20]        
0          0          0          o_sw_read_data[19]        
0          0          0          o_sw_read_data[18]        
0          0          0          o_sw_read_data[17]        
0          0          0          o_sw_read_data[16]        
0          0          0          o_sw_read_data[15]        
0          0          0          o_sw_read_data[14]        
0          0          0          o_sw_read_data[13]        
0          0          0          o_sw_read_data[12]        
0          0          0          o_sw_read_data[11]        
0          0          0          o_sw_read_data[10]        
0          0          0          o_sw_read_data[9]         
0          0          0          o_sw_read_data[8]         
0          0          0          o_sw_read_data[7]         
0          0          0          o_sw_read_data[6]         
0          0          0          o_sw_read_data[5]         
0          0          0          o_sw_read_data[4]         
0          0          0          o_sw_read_data[3]         
0          0          0          o_sw_read_data[2]         
0          0          0          o_sw_read_data[1]         
0          0          0          o_sw_read_data[0]         
0          0          0          o_sw_value[31]            
0          0          0          o_sw_value[30]            
0          0          0          o_sw_value[29]            
0          0          0          o_sw_value[28]            
0          0          0          o_sw_value[27]            
0          0          0          o_sw_value[26]            
0          0          0          o_sw_value[25]            
0          0          0          o_sw_value[24]            
0          0          0          o_sw_value[23]            
0          0          0          o_sw_value[22]            
0          0          0          o_sw_value[21]            
0          0          0          o_sw_value[20]            
0          0          0          o_sw_value[19]            
0          0          0          o_sw_value[18]            
0          0          0          o_sw_value[17]            
0          0          0          o_sw_value[16]            
0          0          0          o_sw_value[15]            
0          0          0          o_sw_value[14]            
0          0          0          o_sw_value[13]            
0          0          0          o_sw_value[12]            
0          0          0          o_sw_value[11]            
0          0          0          o_sw_value[10]            
0          0          0          o_sw_value[9]             
0          0          0          o_sw_value[8]             
0          0          0          o_sw_value[7]             
0          0          0          o_sw_value[6]             
0          0          0          o_sw_value[5]             
0          0          0          o_sw_value[4]             
0          0          0          o_sw_value[3]             
0          0          0          o_sw_value[2]             
0          0          0          o_sw_value[1]             
0          0          0          o_sw_value[0]             
0          0          0          o_write_trigger           
0          0          0          o_read_trigger            
0          0          0          i_hw_write_enable         
0          0          0          i_hw_write_data[31]       
0          0          0          i_hw_write_data[30]       
0          0          0          i_hw_write_data[29]       
0          0          0          i_hw_write_data[28]       
0          0          0          i_hw_write_data[27]       
0          0          0          i_hw_write_data[26]       
0          0          0          i_hw_write_data[25]       
0          0          0          i_hw_write_data[24]       
0          0          0          i_hw_write_data[23]       
0          0          0          i_hw_write_data[22]       
0          0          0          i_hw_write_data[21]       
0          0          0          i_hw_write_data[20]       
0          0          0          i_hw_write_data[19]       
0          0          0          i_hw_write_data[18]       
0          0          0          i_hw_write_data[17]       
0          0          0          i_hw_write_data[16]       
0          0          0          i_hw_write_data[15]       
0          0          0          i_hw_write_data[14]       
0          0          0          i_hw_write_data[13]       
0          0          0          i_hw_write_data[12]       
0          0          0          i_hw_write_data[11]       
0          0          0          i_hw_write_data[10]       
0          0          0          i_hw_write_data[9]        
0          0          0          i_hw_write_data[8]        
0          0          0          i_hw_write_data[7]        
0          0          0          i_hw_write_data[6]        
0          0          0          i_hw_write_data[5]        
0          0          0          i_hw_write_data[4]        
0          0          0          i_hw_write_data[3]        
0          0          0          i_hw_write_data[2]        
0          0          0          i_hw_write_data[1]        
0          0          0          i_hw_write_data[0]        
0          0          0          i_hw_set[31]              
0          0          0          i_hw_set[30]              
0          0          0          i_hw_set[29]              
0          0          0          i_hw_set[28]              
0          0          0          i_hw_set[27]              
0          0          0          i_hw_set[26]              
0          0          0          i_hw_set[25]              
0          0          0          i_hw_set[24]              
0          0          0          i_hw_set[23]              
0          0          0          i_hw_set[22]              
0          0          0          i_hw_set[21]              
0          0          0          i_hw_set[20]              
0          0          0          i_hw_set[19]              
0          0          0          i_hw_set[18]              
0          0          0          i_hw_set[17]              
0          0          0          i_hw_set[16]              
0          0          0          i_hw_set[15]              
0          0          0          i_hw_set[14]              
0          0          0          i_hw_set[13]              
0          0          0          i_hw_set[12]              
0          0          0          i_hw_set[11]              
0          0          0          i_hw_set[10]              
0          0          0          i_hw_set[9]               
0          0          0          i_hw_set[8]               
0          0          0          i_hw_set[7]               
0          0          0          i_hw_set[6]               
0          0          0          i_hw_set[5]               
0          0          0          i_hw_set[4]               
0          0          0          i_hw_set[3]               
0          0          0          i_hw_set[2]               
0          0          0          i_hw_set[1]               
0          0          0          i_hw_set[0]               
0          0          0          i_hw_clear[31]            
0          0          0          i_hw_clear[30]            
0          0          0          i_hw_clear[29]            
0          0          0          i_hw_clear[28]            
0          0          0          i_hw_clear[27]            
0          0          0          i_hw_clear[26]            
0          0          0          i_hw_clear[25]            
0          0          0          i_hw_clear[24]            
0          0          0          i_hw_clear[23]            
0          0          0          i_hw_clear[22]            
0          0          0          i_hw_clear[21]            
0          0          0          i_hw_clear[20]            
0          0          0          i_hw_clear[19]            
0          0          0          i_hw_clear[18]            
0          0          0          i_hw_clear[17]            
0          0          0          i_hw_clear[16]            
0          0          0          i_hw_clear[15]            
0          0          0          i_hw_clear[14]            
0          0          0          i_hw_clear[13]            
0          0          0          i_hw_clear[12]            
0          0          0          i_hw_clear[11]            
0          0          0          i_hw_clear[10]            
0          0          0          i_hw_clear[9]             
0          0          0          i_hw_clear[8]             
0          0          0          i_hw_clear[7]             
0          0          0          i_hw_clear[6]             
0          0          0          i_hw_clear[5]             
0          0          0          i_hw_clear[4]             
0          0          0          i_hw_clear[3]             
0          0          0          i_hw_clear[2]             
0          0          0          i_hw_clear[1]             
0          0          0          i_hw_clear[0]             
0          0          0          i_value[31]               
0          0          0          i_value[30]               
0          0          0          i_value[29]               
0          0          0          i_value[28]               
0          0          0          i_value[27]               
0          0          0          i_value[26]               
0          0          0          i_value[25]               
0          0          0          i_value[24]               
0          0          0          i_value[23]               
0          0          0          i_value[22]               
0          0          0          i_value[21]               
0          0          0          i_value[20]               
0          0          0          i_value[19]               
0          0          0          i_value[18]               
0          0          0          i_value[17]               
0          0          0          i_value[16]               
0          0          0          i_value[15]               
0          0          0          i_value[14]               
0          0          0          i_value[13]               
0          0          0          i_value[12]               
0          0          0          i_value[11]               
0          0          0          i_value[10]               
0          0          0          i_value[9]                
0          0          0          i_value[8]                
0          0          0          i_value[7]                
0          0          0          i_value[6]                
0          0          0          i_value[5]                
0          0          0          i_value[4]                
0          0          0          i_value[3]                
0          0          0          i_value[2]                
0          0          0          i_value[1]                
0          0          0          i_value[0]                
0          0          0          i_mask[31]                
0          0          0          i_mask[30]                
0          0          0          i_mask[29]                
0          0          0          i_mask[28]                
0          0          0          i_mask[27]                
0          0          0          i_mask[26]                
0          0          0          i_mask[25]                
0          0          0          i_mask[24]                
0          0          0          i_mask[23]                
0          0          0          i_mask[22]                
0          0          0          i_mask[21]                
0          0          0          i_mask[20]                
0          0          0          i_mask[19]                
0          0          0          i_mask[18]                
0          0          0          i_mask[17]                
0          0          0          i_mask[16]                
0          0          0          i_mask[15]                
0          0          0          i_mask[14]                
0          0          0          i_mask[13]                
0          0          0          i_mask[12]                
0          0          0          i_mask[11]                
0          0          0          i_mask[10]                
0          0          0          i_mask[9]                 
0          0          0          i_mask[8]                 
0          0          0          i_mask[7]                 
0          0          0          i_mask[6]                 
0          0          0          i_mask[5]                 
0          0          0          i_mask[4]                 
0          0          0          i_mask[3]                 
0          0          0          i_mask[2]                 
0          0          0          i_mask[1]                 
0          0          0          i_mask[0]                 
0          0          0          o_value[31]               
0          0          0          o_value[30]               
0          0          0          o_value[29]               
0          0          0          o_value[28]               
0          0          0          o_value[27]               
0          0          0          o_value[26]               
0          0          0          o_value[25]               
0          0          0          o_value[24]               
0          0          0          o_value[23]               
0          0          0          o_value[22]               
0          0          0          o_value[21]               
0          0          0          o_value[20]               
0          0          0          o_value[19]               
0          0          0          o_value[18]               
0          0          0          o_value[17]               
0          0          0          o_value[16]               
0          0          0          o_value[15]               
0          0          0          o_value[14]               
0          0          0          o_value[13]               
0          0          0          o_value[12]               
0          0          0          o_value[11]               
0          0          0          o_value[10]               
0          0          0          o_value[9]                
0          0          0          o_value[8]                
0          0          0          o_value[7]                
0          0          0          o_value[6]                
0          0          0          o_value[5]                
0          0          0          o_value[4]                
0          0          0          o_value[3]                
0          0          0          o_value[2]                
0          0          0          o_value[1]                
0          0          0          o_value[0]                
0          0          0          o_value_unmasked[31]      
0          0          0          o_value_unmasked[30]      
0          0          0          o_value_unmasked[29]      
0          0          0          o_value_unmasked[28]      
0          0          0          o_value_unmasked[27]      
0          0          0          o_value_unmasked[26]      
0          0          0          o_value_unmasked[25]      
0          0          0          o_value_unmasked[24]      
0          0          0          o_value_unmasked[23]      
0          0          0          o_value_unmasked[22]      
0          0          0          o_value_unmasked[21]      
0          0          0          o_value_unmasked[20]      
0          0          0          o_value_unmasked[19]      
0          0          0          o_value_unmasked[18]      
0          0          0          o_value_unmasked[17]      
0          0          0          o_value_unmasked[16]      
0          0          0          o_value_unmasked[15]      
0          0          0          o_value_unmasked[14]      
0          0          0          o_value_unmasked[13]      
0          0          0          o_value_unmasked[12]      
0          0          0          o_value_unmasked[11]      
0          0          0          o_value_unmasked[10]      
0          0          0          o_value_unmasked[9]       
0          0          0          o_value_unmasked[8]       
0          0          0          o_value_unmasked[7]       
0          0          0          o_value_unmasked[6]       
0          0          0          o_value_unmasked[5]       
0          0          0          o_value_unmasked[4]       
0          0          0          o_value_unmasked[3]       
0          0          0          o_value_unmasked[2]       
0          0          0          o_value_unmasked[1]       
0          0          0          o_value_unmasked[0]       
0          0          0          w_sw_update[1]            
0          0          0          w_sw_update[0]            
0          0          0          w_sw_write_done           
0          0          0          w_hw_update               
0          0          0          w_trigger[1]              
0          0          0          w_trigger[0]              
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            
0          0          0          w_value[31]               
0          0          0          w_value[30]               
0          0          0          w_value[29]               
0          0          0          w_value[28]               
0          0          0          w_value[27]               
0          0          0          w_value[26]               
0          0          0          w_value[25]               
0          0          0          w_value[24]               
0          0          0          w_value[23]               
0          0          0          w_value[22]               
0          0          0          w_value[21]               
0          0          0          w_value[20]               
0          0          0          w_value[19]               
0          0          0          w_value[18]               
0          0          0          w_value[17]               
0          0          0          w_value[16]               
0          0          0          w_value[15]               
0          0          0          w_value[14]               
0          0          0          w_value[13]               
0          0          0          w_value[12]               
0          0          0          w_value[11]               
0          0          0          w_value[10]               
0          0          0          w_value[9]                
0          0          0          w_value[8]                
0          0          0          w_value[7]                
0          0          0          w_value[6]                
0          0          0          w_value[5]                
0          0          0          w_value[4]                
0          0          0          w_value[3]                
0          0          0          w_value[2]                
0          0          0          w_value[1]                
0          0          0          w_value[0]                

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.u_register
Type name: rggen_default_register
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_default_register.v
Number of covered signal bits: 13 of 280
Number of uncovered signal bits: 267 of 280
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 280
Number of signal bits partially toggled(fall): 0 of 280

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.u_register.u_register_common
Type name: rggen_register_common
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_register_common.v
Number of covered signal bits: 13 of 318
Number of uncovered signal bits: 305 of 318
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 318
Number of signal bits partially toggled(fall): 0 of 318

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
1          1          1          i_register_valid          
0          0          0          i_register_access[1]      
1          1          1          i_register_access[0]      
0          0          0          i_register_address[9]     
0          0          0          i_register_address[8]     
0          0          0          i_register_address[7]     
0          0          0          i_register_address[6]     
0          0          0          i_register_address[5]     
0          0          0          i_register_address[4]     
1          1          1          i_register_address[3]     
1          1          1          i_register_address[2]     
0          0          0          i_register_address[1]     
0          0          0          i_register_address[0]     
0          0          0          i_register_write_data[31] 
0          0          0          i_register_write_data[30] 
0          0          0          i_register_write_data[29] 
0          0          0          i_register_write_data[28] 
0          0          0          i_register_write_data[27] 
0          0          0          i_register_write_data[26] 
0          0          0          i_register_write_data[25] 
0          0          0          i_register_write_data[24] 
0          0          0          i_register_write_data[23] 
0          0          0          i_register_write_data[22] 
0          0          0          i_register_write_data[21] 
0          0          0          i_register_write_data[20] 
0          0          0          i_register_write_data[19] 
0          0          0          i_register_write_data[18] 
0          0          0          i_register_write_data[17] 
0          0          0          i_register_write_data[16] 
0          0          0          i_register_write_data[15] 
0          0          0          i_register_write_data[14] 
0          0          0          i_register_write_data[13] 
0          0          0          i_register_write_data[12] 
0          0          0          i_register_write_data[11] 
0          0          0          i_register_write_data[10] 
0          0          0          i_register_write_data[9]  
0          0          0          i_register_write_data[8]  
0          0          0          i_register_write_data[7]  
0          0          0          i_register_write_data[6]  
0          0          0          i_register_write_data[5]  
0          0          0          i_register_write_data[4]  
0          0          0          i_register_write_data[3]  
0          0          0          i_register_write_data[2]  
1          1          1          i_register_write_data[1]  
1          1          1          i_register_write_data[0]  
1          1          1          i_register_strobe[3]      
1          1          1          i_register_strobe[2]      
1          1          1          i_register_strobe[1]      
1          1          1          i_register_strobe[0]      
0          0          0          o_register_active         
0          0          0          o_register_ready          
0          0          0          o_register_status[1]      
0          0          0          o_register_status[0]      
0          0          0          o_register_read_data[31]  
0          0          0          o_register_read_data[30]  
0          0          0          o_register_read_data[29]  
0          0          0          o_register_read_data[28]  
0          0          0          o_register_read_data[27]  
0          0          0          o_register_read_data[26]  
0          0          0          o_register_read_data[25]  
0          0          0          o_register_read_data[24]  
0          0          0          o_register_read_data[23]  
0          0          0          o_register_read_data[22]  
0          0          0          o_register_read_data[21]  
0          0          0          o_register_read_data[20]  
0          0          0          o_register_read_data[19]  
0          0          0          o_register_read_data[18]  
0          0          0          o_register_read_data[17]  
0          0          0          o_register_read_data[16]  
0          0          0          o_register_read_data[15]  
0          0          0          o_register_read_data[14]  
0          0          0          o_register_read_data[13]  
0          0          0          o_register_read_data[12]  
0          0          0          o_register_read_data[11]  
0          0          0          o_register_read_data[10]  
0          0          0          o_register_read_data[9]   
0          0          0          o_register_read_data[8]   
0          0          0          o_register_read_data[7]   
0          0          0          o_register_read_data[6]   
0          0          0          o_register_read_data[5]   
0          0          0          o_register_read_data[4]   
0          0          0          o_register_read_data[3]   
0          0          0          o_register_read_data[2]   
0          0          0          o_register_read_data[1]   
0          0          0          o_register_read_data[0]   
0          0          0          o_register_value[31]      
0          0          0          o_register_value[30]      
0          0          0          o_register_value[29]      
0          0          0          o_register_value[28]      
0          0          0          o_register_value[27]      
0          0          0          o_register_value[26]      
0          0          0          o_register_value[25]      
0          0          0          o_register_value[24]      
0          0          0          o_register_value[23]      
0          0          0          o_register_value[22]      
0          0          0          o_register_value[21]      
0          0          0          o_register_value[20]      
0          0          0          o_register_value[19]      
0          0          0          o_register_value[18]      
0          0          0          o_register_value[17]      
0          0          0          o_register_value[16]      
0          0          0          o_register_value[15]      
0          0          0          o_register_value[14]      
0          0          0          o_register_value[13]      
0          0          0          o_register_value[12]      
0          0          0          o_register_value[11]      
0          0          0          o_register_value[10]      
0          0          0          o_register_value[9]       
0          0          0          o_register_value[8]       
0          0          0          o_register_value[7]       
0          0          0          o_register_value[6]       
0          0          0          o_register_value[5]       
0          0          0          o_register_value[4]       
0          0          0          o_register_value[3]       
0          0          0          o_register_value[2]       
0          0          0          o_register_value[1]       
0          0          0          o_register_value[0]       
0          0          0          i_additional_match        
0          0          0          o_bit_field_valid         
0          0          0          o_bit_field_read_mask[31] 
0          0          0          o_bit_field_read_mask[30] 
0          0          0          o_bit_field_read_mask[29] 
0          0          0          o_bit_field_read_mask[28] 
0          0          0          o_bit_field_read_mask[27] 
0          0          0          o_bit_field_read_mask[26] 
0          0          0          o_bit_field_read_mask[25] 
0          0          0          o_bit_field_read_mask[24] 
0          0          0          o_bit_field_read_mask[23] 
0          0          0          o_bit_field_read_mask[22] 
0          0          0          o_bit_field_read_mask[21] 
0          0          0          o_bit_field_read_mask[20] 
0          0          0          o_bit_field_read_mask[19] 
0          0          0          o_bit_field_read_mask[18] 
0          0          0          o_bit_field_read_mask[17] 
0          0          0          o_bit_field_read_mask[16] 
0          0          0          o_bit_field_read_mask[15] 
0          0          0          o_bit_field_read_mask[14] 
0          0          0          o_bit_field_read_mask[13] 
0          0          0          o_bit_field_read_mask[12] 
0          0          0          o_bit_field_read_mask[11] 
0          0          0          o_bit_field_read_mask[10] 
0          0          0          o_bit_field_read_mask[9]  
0          0          0          o_bit_field_read_mask[8]  
0          0          0          o_bit_field_read_mask[7]  
0          0          0          o_bit_field_read_mask[6]  
0          0          0          o_bit_field_read_mask[5]  
0          0          0          o_bit_field_read_mask[4]  
0          0          0          o_bit_field_read_mask[3]  
0          0          0          o_bit_field_read_mask[2]  
0          0          0          o_bit_field_read_mask[1]  
0          0          0          o_bit_field_read_mask[0]  
0          0          0          o_bit_field_write_mask[31] 
0          0          0          o_bit_field_write_mask[30] 
0          0          0          o_bit_field_write_mask[29] 
0          0          0          o_bit_field_write_mask[28] 
0          0          0          o_bit_field_write_mask[27] 
0          0          0          o_bit_field_write_mask[26] 
0          0          0          o_bit_field_write_mask[25] 
0          0          0          o_bit_field_write_mask[24] 
0          0          0          o_bit_field_write_mask[23] 
0          0          0          o_bit_field_write_mask[22] 
0          0          0          o_bit_field_write_mask[21] 
0          0          0          o_bit_field_write_mask[20] 
0          0          0          o_bit_field_write_mask[19] 
0          0          0          o_bit_field_write_mask[18] 
0          0          0          o_bit_field_write_mask[17] 
0          0          0          o_bit_field_write_mask[16] 
0          0          0          o_bit_field_write_mask[15] 
0          0          0          o_bit_field_write_mask[14] 
0          0          0          o_bit_field_write_mask[13] 
0          0          0          o_bit_field_write_mask[12] 
0          0          0          o_bit_field_write_mask[11] 
0          0          0          o_bit_field_write_mask[10] 
0          0          0          o_bit_field_write_mask[9] 
0          0          0          o_bit_field_write_mask[8] 
0          0          0          o_bit_field_write_mask[7] 
0          0          0          o_bit_field_write_mask[6] 
0          0          0          o_bit_field_write_mask[5] 
0          0          0          o_bit_field_write_mask[4] 
0          0          0          o_bit_field_write_mask[3] 
0          0          0          o_bit_field_write_mask[2] 
0          0          0          o_bit_field_write_mask[1] 
0          0          0          o_bit_field_write_mask[0] 
0          0          0          o_bit_field_write_data[31] 
0          0          0          o_bit_field_write_data[30] 
0          0          0          o_bit_field_write_data[29] 
0          0          0          o_bit_field_write_data[28] 
0          0          0          o_bit_field_write_data[27] 
0          0          0          o_bit_field_write_data[26] 
0          0          0          o_bit_field_write_data[25] 
0          0          0          o_bit_field_write_data[24] 
0          0          0          o_bit_field_write_data[23] 
0          0          0          o_bit_field_write_data[22] 
0          0          0          o_bit_field_write_data[21] 
0          0          0          o_bit_field_write_data[20] 
0          0          0          o_bit_field_write_data[19] 
0          0          0          o_bit_field_write_data[18] 
0          0          0          o_bit_field_write_data[17] 
0          0          0          o_bit_field_write_data[16] 
0          0          0          o_bit_field_write_data[15] 
0          0          0          o_bit_field_write_data[14] 
0          0          0          o_bit_field_write_data[13] 
0          0          0          o_bit_field_write_data[12] 
0          0          0          o_bit_field_write_data[11] 
0          0          0          o_bit_field_write_data[10] 
0          0          0          o_bit_field_write_data[9] 
0          0          0          o_bit_field_write_data[8] 
0          0          0          o_bit_field_write_data[7] 
0          0          0          o_bit_field_write_data[6] 
0          0          0          o_bit_field_write_data[5] 
0          0          0          o_bit_field_write_data[4] 
0          0          0          o_bit_field_write_data[3] 
0          0          0          o_bit_field_write_data[2] 
1          1          1          o_bit_field_write_data[1] 
1          1          1          o_bit_field_write_data[0] 
0          0          0          i_bit_field_read_data[31] 
0          0          0          i_bit_field_read_data[30] 
0          0          0          i_bit_field_read_data[29] 
0          0          0          i_bit_field_read_data[28] 
0          0          0          i_bit_field_read_data[27] 
0          0          0          i_bit_field_read_data[26] 
0          0          0          i_bit_field_read_data[25] 
0          0          0          i_bit_field_read_data[24] 
0          0          0          i_bit_field_read_data[23] 
0          0          0          i_bit_field_read_data[22] 
0          0          0          i_bit_field_read_data[21] 
0          0          0          i_bit_field_read_data[20] 
0          0          0          i_bit_field_read_data[19] 
0          0          0          i_bit_field_read_data[18] 
0          0          0          i_bit_field_read_data[17] 
0          0          0          i_bit_field_read_data[16] 
0          0          0          i_bit_field_read_data[15] 
0          0          0          i_bit_field_read_data[14] 
0          0          0          i_bit_field_read_data[13] 
0          0          0          i_bit_field_read_data[12] 
0          0          0          i_bit_field_read_data[11] 
0          0          0          i_bit_field_read_data[10] 
0          0          0          i_bit_field_read_data[9]  
0          0          0          i_bit_field_read_data[8]  
0          0          0          i_bit_field_read_data[7]  
0          0          0          i_bit_field_read_data[6]  
0          0          0          i_bit_field_read_data[5]  
0          0          0          i_bit_field_read_data[4]  
0          0          0          i_bit_field_read_data[3]  
0          0          0          i_bit_field_read_data[2]  
0          0          0          i_bit_field_read_data[1]  
0          0          0          i_bit_field_read_data[0]  
0          0          0          i_bit_field_value[31]     
0          0          0          i_bit_field_value[30]     
0          0          0          i_bit_field_value[29]     
0          0          0          i_bit_field_value[28]     
0          0          0          i_bit_field_value[27]     
0          0          0          i_bit_field_value[26]     
0          0          0          i_bit_field_value[25]     
0          0          0          i_bit_field_value[24]     
0          0          0          i_bit_field_value[23]     
0          0          0          i_bit_field_value[22]     
0          0          0          i_bit_field_value[21]     
0          0          0          i_bit_field_value[20]     
0          0          0          i_bit_field_value[19]     
0          0          0          i_bit_field_value[18]     
0          0          0          i_bit_field_value[17]     
0          0          0          i_bit_field_value[16]     
0          0          0          i_bit_field_value[15]     
0          0          0          i_bit_field_value[14]     
0          0          0          i_bit_field_value[13]     
0          0          0          i_bit_field_value[12]     
0          0          0          i_bit_field_value[11]     
0          0          0          i_bit_field_value[10]     
0          0          0          i_bit_field_value[9]      
0          0          0          i_bit_field_value[8]      
0          0          0          i_bit_field_value[7]      
0          0          0          i_bit_field_value[6]      
0          0          0          i_bit_field_value[5]      
0          0          0          i_bit_field_value[4]      
0          0          0          i_bit_field_value[3]      
0          0          0          i_bit_field_value[2]      
0          0          0          i_bit_field_value[1]      
0          0          0          i_bit_field_value[0]      
0          0          0          w_match                   
0          0          0          w_active                  
0          0          0          w_frontdoor_valid         
0          0          0          w_backdoor_valid          
0          0          0          w_pending_valid           
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.u_register.u_register_common.g_decoder[0].u_decoder
Type name: rggen_address_decoder
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_address_decoder.v
Number of covered signal bits: 4 of 16
Number of uncovered signal bits: 12 of 16
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 16
Number of signal bits partially toggled(fall): 0 of 16

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_address[9]              
0          0          0          i_address[8]              
0          0          0          i_address[7]              
0          0          0          i_address[6]              
0          0          0          i_address[5]              
0          0          0          i_address[4]              
1          1          1          i_address[3]              
1          1          1          i_address[2]              
0          0          0          i_address[1]              
0          0          0          i_address[0]              
0          0          0          i_access[1]               
1          1          1          i_access[0]               
0          0          0          i_additional_match        
0          0          0          o_match                   
0          0          0          w_address_match           
1          1          1          w_access_match            

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.u_register.u_register_common.u_read_data_mux
Type name: rggen_mux
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_mux.v
Number of covered signal bits: 0 of 65
Number of uncovered signal bits: 65 of 65
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 0 of 65
Number of signal bits partially toggled(fall): 0 of 65

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
0          0          0          i_select                  
0          0          0          i_data[31]                
0          0          0          i_data[30]                
0          0          0          i_data[29]                
0          0          0          i_data[28]                
0          0          0          i_data[27]                
0          0          0          i_data[26]                
0          0          0          i_data[25]                
0          0          0          i_data[24]                
0          0          0          i_data[23]                
0          0          0          i_data[22]                
0          0          0          i_data[21]                
0          0          0          i_data[20]                
0          0          0          i_data[19]                
0          0          0          i_data[18]                
0          0          0          i_data[17]                
0          0          0          i_data[16]                
0          0          0          i_data[15]                
0          0          0          i_data[14]                
0          0          0          i_data[13]                
0          0          0          i_data[12]                
0          0          0          i_data[11]                
0          0          0          i_data[10]                
0          0          0          i_data[9]                 
0          0          0          i_data[8]                 
0          0          0          i_data[7]                 
0          0          0          i_data[6]                 
0          0          0          i_data[5]                 
0          0          0          i_data[4]                 
0          0          0          i_data[3]                 
0          0          0          i_data[2]                 
0          0          0          i_data[1]                 
0          0          0          i_data[0]                 
0          0          0          o_data[31]                
0          0          0          o_data[30]                
0          0          0          o_data[29]                
0          0          0          o_data[28]                
0          0          0          o_data[27]                
0          0          0          o_data[26]                
0          0          0          o_data[25]                
0          0          0          o_data[24]                
0          0          0          o_data[23]                
0          0          0          o_data[22]                
0          0          0          o_data[21]                
0          0          0          o_data[20]                
0          0          0          o_data[19]                
0          0          0          o_data[18]                
0          0          0          o_data[17]                
0          0          0          o_data[16]                
0          0          0          o_data[15]                
0          0          0          o_data[14]                
0          0          0          o_data[13]                
0          0          0          o_data[12]                
0          0          0          o_data[11]                
0          0          0          o_data[10]                
0          0          0          o_data[9]                 
0          0          0          o_data[8]                 
0          0          0          o_data[7]                 
0          0          0          o_data[6]                 
0          0          0          o_data[5]                 
0          0          0          o_data[4]                 
0          0          0          o_data[3]                 
0          0          0          o_data[2]                 
0          0          0          o_data[1]                 
0          0          0          o_data[0]                 

Instance name: zmc_axi4_top.mem_ctrl_inst.CSR_registers_inst.g_UE_FFD_REG.g_UE_FFD_REG.u_bit_field
Type name: rggen_bit_field
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/rggen_files/rggen_bit_field.v
Number of covered signal bits: 3 of 461
Number of uncovered signal bits: 458 of 461
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 461
Number of signal bits partially toggled(fall): 0 of 461

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          i_clk                     
0          1          0          i_rst_n                   
0          0          0          i_sw_valid                
0          0          0          i_sw_read_mask[31]        
0          0          0          i_sw_read_mask[30]        
0          0          0          i_sw_read_mask[29]        
0          0          0          i_sw_read_mask[28]        
0          0          0          i_sw_read_mask[27]        
0          0          0          i_sw_read_mask[26]        
0          0          0          i_sw_read_mask[25]        
0          0          0          i_sw_read_mask[24]        
0          0          0          i_sw_read_mask[23]        
0          0          0          i_sw_read_mask[22]        
0          0          0          i_sw_read_mask[21]        
0          0          0          i_sw_read_mask[20]        
0          0          0          i_sw_read_mask[19]        
0          0          0          i_sw_read_mask[18]        
0          0          0          i_sw_read_mask[17]        
0          0          0          i_sw_read_mask[16]        
0          0          0          i_sw_read_mask[15]        
0          0          0          i_sw_read_mask[14]        
0          0          0          i_sw_read_mask[13]        
0          0          0          i_sw_read_mask[12]        
0          0          0          i_sw_read_mask[11]        
0          0          0          i_sw_read_mask[10]        
0          0          0          i_sw_read_mask[9]         
0          0          0          i_sw_read_mask[8]         
0          0          0          i_sw_read_mask[7]         
0          0          0          i_sw_read_mask[6]         
0          0          0          i_sw_read_mask[5]         
0          0          0          i_sw_read_mask[4]         
0          0          0          i_sw_read_mask[3]         
0          0          0          i_sw_read_mask[2]         
0          0          0          i_sw_read_mask[1]         
0          0          0          i_sw_read_mask[0]         
0          0          0          i_sw_write_enable         
0          0          0          i_sw_write_mask[31]       
0          0          0          i_sw_write_mask[30]       
0          0          0          i_sw_write_mask[29]       
0          0          0          i_sw_write_mask[28]       
0          0          0          i_sw_write_mask[27]       
0          0          0          i_sw_write_mask[26]       
0          0          0          i_sw_write_mask[25]       
0          0          0          i_sw_write_mask[24]       
0          0          0          i_sw_write_mask[23]       
0          0          0          i_sw_write_mask[22]       
0          0          0          i_sw_write_mask[21]       
0          0          0          i_sw_write_mask[20]       
0          0          0          i_sw_write_mask[19]       
0          0          0          i_sw_write_mask[18]       
0          0          0          i_sw_write_mask[17]       
0          0          0          i_sw_write_mask[16]       
0          0          0          i_sw_write_mask[15]       
0          0          0          i_sw_write_mask[14]       
0          0          0          i_sw_write_mask[13]       
0          0          0          i_sw_write_mask[12]       
0          0          0          i_sw_write_mask[11]       
0          0          0          i_sw_write_mask[10]       
0          0          0          i_sw_write_mask[9]        
0          0          0          i_sw_write_mask[8]        
0          0          0          i_sw_write_mask[7]        
0          0          0          i_sw_write_mask[6]        
0          0          0          i_sw_write_mask[5]        
0          0          0          i_sw_write_mask[4]        
0          0          0          i_sw_write_mask[3]        
0          0          0          i_sw_write_mask[2]        
0          0          0          i_sw_write_mask[1]        
0          0          0          i_sw_write_mask[0]        
0          0          0          i_sw_write_data[31]       
0          0          0          i_sw_write_data[30]       
0          0          0          i_sw_write_data[29]       
0          0          0          i_sw_write_data[28]       
0          0          0          i_sw_write_data[27]       
0          0          0          i_sw_write_data[26]       
0          0          0          i_sw_write_data[25]       
0          0          0          i_sw_write_data[24]       
0          0          0          i_sw_write_data[23]       
0          0          0          i_sw_write_data[22]       
0          0          0          i_sw_write_data[21]       
0          0          0          i_sw_write_data[20]       
0          0          0          i_sw_write_data[19]       
0          0          0          i_sw_write_data[18]       
0          0          0          i_sw_write_data[17]       
0          0          0          i_sw_write_data[16]       
0          0          0          i_sw_write_data[15]       
0          0          0          i_sw_write_data[14]       
0          0          0          i_sw_write_data[13]       
0          0          0          i_sw_write_data[12]       
0          0          0          i_sw_write_data[11]       
0          0          0          i_sw_write_data[10]       
0          0          0          i_sw_write_data[9]        
0          0          0          i_sw_write_data[8]        
0          0          0          i_sw_write_data[7]        
0          0          0          i_sw_write_data[6]        
0          0          0          i_sw_write_data[5]        
0          0          0          i_sw_write_data[4]        
0          0          0          i_sw_write_data[3]        
0          0          0          i_sw_write_data[2]        
1          1          1          i_sw_write_data[1]        
1          1          1          i_sw_write_data[0]        
0          0          0          o_sw_read_data[31]        
0          0          0          o_sw_read_data[30]        
0          0          0          o_sw_read_data[29]        
0          0          0          o_sw_read_data[28]        
0          0          0          o_sw_read_data[27]        
0          0          0          o_sw_read_data[26]        
0          0          0          o_sw_read_data[25]        
0          0          0          o_sw_read_data[24]        
0          0          0          o_sw_read_data[23]        
0          0          0          o_sw_read_data[22]        
0          0          0          o_sw_read_data[21]        
0          0          0          o_sw_read_data[20]        
0          0          0          o_sw_read_data[19]        
0          0          0          o_sw_read_data[18]        
0          0          0          o_sw_read_data[17]        
0          0          0          o_sw_read_data[16]        
0          0          0          o_sw_read_data[15]        
0          0          0          o_sw_read_data[14]        
0          0          0          o_sw_read_data[13]        
0          0          0          o_sw_read_data[12]        
0          0          0          o_sw_read_data[11]        
0          0          0          o_sw_read_data[10]        
0          0          0          o_sw_read_data[9]         
0          0          0          o_sw_read_data[8]         
0          0          0          o_sw_read_data[7]         
0          0          0          o_sw_read_data[6]         
0          0          0          o_sw_read_data[5]         
0          0          0          o_sw_read_data[4]         
0          0          0          o_sw_read_data[3]         
0          0          0          o_sw_read_data[2]         
0          0          0          o_sw_read_data[1]         
0          0          0          o_sw_read_data[0]         
0          0          0          o_sw_value[31]            
0          0          0          o_sw_value[30]            
0          0          0          o_sw_value[29]            
0          0          0          o_sw_value[28]            
0          0          0          o_sw_value[27]            
0          0          0          o_sw_value[26]            
0          0          0          o_sw_value[25]            
0          0          0          o_sw_value[24]            
0          0          0          o_sw_value[23]            
0          0          0          o_sw_value[22]            
0          0          0          o_sw_value[21]            
0          0          0          o_sw_value[20]            
0          0          0          o_sw_value[19]            
0          0          0          o_sw_value[18]            
0          0          0          o_sw_value[17]            
0          0          0          o_sw_value[16]            
0          0          0          o_sw_value[15]            
0          0          0          o_sw_value[14]            
0          0          0          o_sw_value[13]            
0          0          0          o_sw_value[12]            
0          0          0          o_sw_value[11]            
0          0          0          o_sw_value[10]            
0          0          0          o_sw_value[9]             
0          0          0          o_sw_value[8]             
0          0          0          o_sw_value[7]             
0          0          0          o_sw_value[6]             
0          0          0          o_sw_value[5]             
0          0          0          o_sw_value[4]             
0          0          0          o_sw_value[3]             
0          0          0          o_sw_value[2]             
0          0          0          o_sw_value[1]             
0          0          0          o_sw_value[0]             
0          0          0          o_write_trigger           
0          0          0          o_read_trigger            
0          0          0          i_hw_write_enable         
0          0          0          i_hw_write_data[31]       
0          0          0          i_hw_write_data[30]       
0          0          0          i_hw_write_data[29]       
0          0          0          i_hw_write_data[28]       
0          0          0          i_hw_write_data[27]       
0          0          0          i_hw_write_data[26]       
0          0          0          i_hw_write_data[25]       
0          0          0          i_hw_write_data[24]       
0          0          0          i_hw_write_data[23]       
0          0          0          i_hw_write_data[22]       
0          0          0          i_hw_write_data[21]       
0          0          0          i_hw_write_data[20]       
0          0          0          i_hw_write_data[19]       
0          0          0          i_hw_write_data[18]       
0          0          0          i_hw_write_data[17]       
0          0          0          i_hw_write_data[16]       
0          0          0          i_hw_write_data[15]       
0          0          0          i_hw_write_data[14]       
0          0          0          i_hw_write_data[13]       
0          0          0          i_hw_write_data[12]       
0          0          0          i_hw_write_data[11]       
0          0          0          i_hw_write_data[10]       
0          0          0          i_hw_write_data[9]        
0          0          0          i_hw_write_data[8]        
0          0          0          i_hw_write_data[7]        
0          0          0          i_hw_write_data[6]        
0          0          0          i_hw_write_data[5]        
0          0          0          i_hw_write_data[4]        
0          0          0          i_hw_write_data[3]        
0          0          0          i_hw_write_data[2]        
0          0          0          i_hw_write_data[1]        
0          0          0          i_hw_write_data[0]        
0          0          0          i_hw_set[31]              
0          0          0          i_hw_set[30]              
0          0          0          i_hw_set[29]              
0          0          0          i_hw_set[28]              
0          0          0          i_hw_set[27]              
0          0          0          i_hw_set[26]              
0          0          0          i_hw_set[25]              
0          0          0          i_hw_set[24]              
0          0          0          i_hw_set[23]              
0          0          0          i_hw_set[22]              
0          0          0          i_hw_set[21]              
0          0          0          i_hw_set[20]              
0          0          0          i_hw_set[19]              
0          0          0          i_hw_set[18]              
0          0          0          i_hw_set[17]              
0          0          0          i_hw_set[16]              
0          0          0          i_hw_set[15]              
0          0          0          i_hw_set[14]              
0          0          0          i_hw_set[13]              
0          0          0          i_hw_set[12]              
0          0          0          i_hw_set[11]              
0          0          0          i_hw_set[10]              
0          0          0          i_hw_set[9]               
0          0          0          i_hw_set[8]               
0          0          0          i_hw_set[7]               
0          0          0          i_hw_set[6]               
0          0          0          i_hw_set[5]               
0          0          0          i_hw_set[4]               
0          0          0          i_hw_set[3]               
0          0          0          i_hw_set[2]               
0          0          0          i_hw_set[1]               
0          0          0          i_hw_set[0]               
0          0          0          i_hw_clear[31]            
0          0          0          i_hw_clear[30]            
0          0          0          i_hw_clear[29]            
0          0          0          i_hw_clear[28]            
0          0          0          i_hw_clear[27]            
0          0          0          i_hw_clear[26]            
0          0          0          i_hw_clear[25]            
0          0          0          i_hw_clear[24]            
0          0          0          i_hw_clear[23]            
0          0          0          i_hw_clear[22]            
0          0          0          i_hw_clear[21]            
0          0          0          i_hw_clear[20]            
0          0          0          i_hw_clear[19]            
0          0          0          i_hw_clear[18]            
0          0          0          i_hw_clear[17]            
0          0          0          i_hw_clear[16]            
0          0          0          i_hw_clear[15]            
0          0          0          i_hw_clear[14]            
0          0          0          i_hw_clear[13]            
0          0          0          i_hw_clear[12]            
0          0          0          i_hw_clear[11]            
0          0          0          i_hw_clear[10]            
0          0          0          i_hw_clear[9]             
0          0          0          i_hw_clear[8]             
0          0          0          i_hw_clear[7]             
0          0          0          i_hw_clear[6]             
0          0          0          i_hw_clear[5]             
0          0          0          i_hw_clear[4]             
0          0          0          i_hw_clear[3]             
0          0          0          i_hw_clear[2]             
0          0          0          i_hw_clear[1]             
0          0          0          i_hw_clear[0]             
0          0          0          i_value[31]               
0          0          0          i_value[30]               
0          0          0          i_value[29]               
0          0          0          i_value[28]               
0          0          0          i_value[27]               
0          0          0          i_value[26]               
0          0          0          i_value[25]               
0          0          0          i_value[24]               
0          0          0          i_value[23]               
0          0          0          i_value[22]               
0          0          0          i_value[21]               
0          0          0          i_value[20]               
0          0          0          i_value[19]               
0          0          0          i_value[18]               
0          0          0          i_value[17]               
0          0          0          i_value[16]               
0          0          0          i_value[15]               
0          0          0          i_value[14]               
0          0          0          i_value[13]               
0          0          0          i_value[12]               
0          0          0          i_value[11]               
0          0          0          i_value[10]               
0          0          0          i_value[9]                
0          0          0          i_value[8]                
0          0          0          i_value[7]                
0          0          0          i_value[6]                
0          0          0          i_value[5]                
0          0          0          i_value[4]                
0          0          0          i_value[3]                
0          0          0          i_value[2]                
0          0          0          i_value[1]                
0          0          0          i_value[0]                
0          0          0          i_mask[31]                
0          0          0          i_mask[30]                
0          0          0          i_mask[29]                
0          0          0          i_mask[28]                
0          0          0          i_mask[27]                
0          0          0          i_mask[26]                
0          0          0          i_mask[25]                
0          0          0          i_mask[24]                
0          0          0          i_mask[23]                
0          0          0          i_mask[22]                
0          0          0          i_mask[21]                
0          0          0          i_mask[20]                
0          0          0          i_mask[19]                
0          0          0          i_mask[18]                
0          0          0          i_mask[17]                
0          0          0          i_mask[16]                
0          0          0          i_mask[15]                
0          0          0          i_mask[14]                
0          0          0          i_mask[13]                
0          0          0          i_mask[12]                
0          0          0          i_mask[11]                
0          0          0          i_mask[10]                
0          0          0          i_mask[9]                 
0          0          0          i_mask[8]                 
0          0          0          i_mask[7]                 
0          0          0          i_mask[6]                 
0          0          0          i_mask[5]                 
0          0          0          i_mask[4]                 
0          0          0          i_mask[3]                 
0          0          0          i_mask[2]                 
0          0          0          i_mask[1]                 
0          0          0          i_mask[0]                 
0          0          0          o_value[31]               
0          0          0          o_value[30]               
0          0          0          o_value[29]               
0          0          0          o_value[28]               
0          0          0          o_value[27]               
0          0          0          o_value[26]               
0          0          0          o_value[25]               
0          0          0          o_value[24]               
0          0          0          o_value[23]               
0          0          0          o_value[22]               
0          0          0          o_value[21]               
0          0          0          o_value[20]               
0          0          0          o_value[19]               
0          0          0          o_value[18]               
0          0          0          o_value[17]               
0          0          0          o_value[16]               
0          0          0          o_value[15]               
0          0          0          o_value[14]               
0          0          0          o_value[13]               
0          0          0          o_value[12]               
0          0          0          o_value[11]               
0          0          0          o_value[10]               
0          0          0          o_value[9]                
0          0          0          o_value[8]                
0          0          0          o_value[7]                
0          0          0          o_value[6]                
0          0          0          o_value[5]                
0          0          0          o_value[4]                
0          0          0          o_value[3]                
0          0          0          o_value[2]                
0          0          0          o_value[1]                
0          0          0          o_value[0]                
0          0          0          o_value_unmasked[31]      
0          0          0          o_value_unmasked[30]      
0          0          0          o_value_unmasked[29]      
0          0          0          o_value_unmasked[28]      
0          0          0          o_value_unmasked[27]      
0          0          0          o_value_unmasked[26]      
0          0          0          o_value_unmasked[25]      
0          0          0          o_value_unmasked[24]      
0          0          0          o_value_unmasked[23]      
0          0          0          o_value_unmasked[22]      
0          0          0          o_value_unmasked[21]      
0          0          0          o_value_unmasked[20]      
0          0          0          o_value_unmasked[19]      
0          0          0          o_value_unmasked[18]      
0          0          0          o_value_unmasked[17]      
0          0          0          o_value_unmasked[16]      
0          0          0          o_value_unmasked[15]      
0          0          0          o_value_unmasked[14]      
0          0          0          o_value_unmasked[13]      
0          0          0          o_value_unmasked[12]      
0          0          0          o_value_unmasked[11]      
0          0          0          o_value_unmasked[10]      
0          0          0          o_value_unmasked[9]       
0          0          0          o_value_unmasked[8]       
0          0          0          o_value_unmasked[7]       
0          0          0          o_value_unmasked[6]       
0          0          0          o_value_unmasked[5]       
0          0          0          o_value_unmasked[4]       
0          0          0          o_value_unmasked[3]       
0          0          0          o_value_unmasked[2]       
0          0          0          o_value_unmasked[1]       
0          0          0          o_value_unmasked[0]       
0          0          0          w_sw_update[1]            
0          0          0          w_sw_update[0]            
0          0          0          w_sw_write_done           
0          0          0          w_hw_update               
0          0          0          w_trigger[1]              
0          0          0          w_trigger[0]              
0          0          0          w_read_data[31]           
0          0          0          w_read_data[30]           
0          0          0          w_read_data[29]           
0          0          0          w_read_data[28]           
0          0          0          w_read_data[27]           
0          0          0          w_read_data[26]           
0          0          0          w_read_data[25]           
0          0          0          w_read_data[24]           
0          0          0          w_read_data[23]           
0          0          0          w_read_data[22]           
0          0          0          w_read_data[21]           
0          0          0          w_read_data[20]           
0          0          0          w_read_data[19]           
0          0          0          w_read_data[18]           
0          0          0          w_read_data[17]           
0          0          0          w_read_data[16]           
0          0          0          w_read_data[15]           
0          0          0          w_read_data[14]           
0          0          0          w_read_data[13]           
0          0          0          w_read_data[12]           
0          0          0          w_read_data[11]           
0          0          0          w_read_data[10]           
0          0          0          w_read_data[9]            
0          0          0          w_read_data[8]            
0          0          0          w_read_data[7]            
0          0          0          w_read_data[6]            
0          0          0          w_read_data[5]            
0          0          0          w_read_data[4]            
0          0          0          w_read_data[3]            
0          0          0          w_read_data[2]            
0          0          0          w_read_data[1]            
0          0          0          w_read_data[0]            
0          0          0          w_value[31]               
0          0          0          w_value[30]               
0          0          0          w_value[29]               
0          0          0          w_value[28]               
0          0          0          w_value[27]               
0          0          0          w_value[26]               
0          0          0          w_value[25]               
0          0          0          w_value[24]               
0          0          0          w_value[23]               
0          0          0          w_value[22]               
0          0          0          w_value[21]               
0          0          0          w_value[20]               
0          0          0          w_value[19]               
0          0          0          w_value[18]               
0          0          0          w_value[17]               
0          0          0          w_value[16]               
0          0          0          w_value[15]               
0          0          0          w_value[14]               
0          0          0          w_value[13]               
0          0          0          w_value[12]               
0          0          0          w_value[11]               
0          0          0          w_value[10]               
0          0          0          w_value[9]                
0          0          0          w_value[8]                
0          0          0          w_value[7]                
0          0          0          w_value[6]                
0          0          0          w_value[5]                
0          0          0          w_value[4]                
0          0          0          w_value[3]                
0          0          0          w_value[2]                
0          0          0          w_value[1]                
0          0          0          w_value[0]                

Instance name: zmc_axi4_top.dual_port_ram_inst
Type name: dual_port_ram
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/dual_port_ram.sv
Number of covered signal bits: 108 of 111
Number of uncovered signal bits: 3 of 111
Number of excluded signal bits: 0
Number of unreachable signal bits: 0
Number of signal bits partially toggled(rise): 1 of 111
Number of signal bits partially toggled(fall): 0 of 111

Hit(Full)  Hit(Rise)  Hit(Fall)  Signal                    
-----------------------------------------------------------
1          1          1          RAM_clk                   
0          1          0          RAM_rstn                  
1          1          1          RAM_en                    
1          1          1          RAM_wr_en                 
1          1          1          RAM_wr_addr[13]           
1          1          1          RAM_wr_addr[12]           
1          1          1          RAM_wr_addr[11]           
1          1          1          RAM_wr_addr[10]           
1          1          1          RAM_wr_addr[9]            
1          1          1          RAM_wr_addr[8]            
1          1          1          RAM_wr_addr[7]            
1          1          1          RAM_wr_addr[6]            
1          1          1          RAM_wr_addr[5]            
1          1          1          RAM_wr_addr[4]            
1          1          1          RAM_wr_addr[3]            
1          1          1          RAM_wr_addr[2]            
1          1          1          RAM_wr_addr[1]            
1          1          1          RAM_wr_addr[0]            
1          1          1          RAM_wr_data[38]           
1          1          1          RAM_wr_data[37]           
1          1          1          RAM_wr_data[36]           
1          1          1          RAM_wr_data[35]           
1          1          1          RAM_wr_data[34]           
1          1          1          RAM_wr_data[33]           
1          1          1          RAM_wr_data[32]           
1          1          1          RAM_wr_data[31]           
1          1          1          RAM_wr_data[30]           
1          1          1          RAM_wr_data[29]           
1          1          1          RAM_wr_data[28]           
1          1          1          RAM_wr_data[27]           
1          1          1          RAM_wr_data[26]           
1          1          1          RAM_wr_data[25]           
1          1          1          RAM_wr_data[24]           
1          1          1          RAM_wr_data[23]           
1          1          1          RAM_wr_data[22]           
1          1          1          RAM_wr_data[21]           
1          1          1          RAM_wr_data[20]           
1          1          1          RAM_wr_data[19]           
1          1          1          RAM_wr_data[18]           
1          1          1          RAM_wr_data[17]           
1          1          1          RAM_wr_data[16]           
1          1          1          RAM_wr_data[15]           
1          1          1          RAM_wr_data[14]           
1          1          1          RAM_wr_data[13]           
1          1          1          RAM_wr_data[12]           
1          1          1          RAM_wr_data[11]           
1          1          1          RAM_wr_data[10]           
1          1          1          RAM_wr_data[9]            
1          1          1          RAM_wr_data[8]            
1          1          1          RAM_wr_data[7]            
1          1          1          RAM_wr_data[6]            
1          1          1          RAM_wr_data[5]            
1          1          1          RAM_wr_data[4]            
1          1          1          RAM_wr_data[3]            
1          1          1          RAM_wr_data[2]            
1          1          1          RAM_wr_data[1]            
1          1          1          RAM_wr_data[0]            
1          1          1          RAM_rd_en                 
0          0          0          RAM_rd_addr[13]           
0          0          0          RAM_rd_addr[12]           
1          1          1          RAM_rd_addr[11]           
1          1          1          RAM_rd_addr[10]           
1          1          1          RAM_rd_addr[9]            
1          1          1          RAM_rd_addr[8]            
1          1          1          RAM_rd_addr[7]            
1          1          1          RAM_rd_addr[6]            
1          1          1          RAM_rd_addr[5]            
1          1          1          RAM_rd_addr[4]            
1          1          1          RAM_rd_addr[3]            
1          1          1          RAM_rd_addr[2]            
1          1          1          RAM_rd_addr[1]            
1          1          1          RAM_rd_addr[0]            
1          1          1          RAM_rd_data[38]           
1          1          1          RAM_rd_data[37]           
1          1          1          RAM_rd_data[36]           
1          1          1          RAM_rd_data[35]           
1          1          1          RAM_rd_data[34]           
1          1          1          RAM_rd_data[33]           
1          1          1          RAM_rd_data[32]           
1          1          1          RAM_rd_data[31]           
1          1          1          RAM_rd_data[30]           
1          1          1          RAM_rd_data[29]           
1          1          1          RAM_rd_data[28]           
1          1          1          RAM_rd_data[27]           
1          1          1          RAM_rd_data[26]           
1          1          1          RAM_rd_data[25]           
1          1          1          RAM_rd_data[24]           
1          1          1          RAM_rd_data[23]           
1          1          1          RAM_rd_data[22]           
1          1          1          RAM_rd_data[21]           
1          1          1          RAM_rd_data[20]           
1          1          1          RAM_rd_data[19]           
1          1          1          RAM_rd_data[18]           
1          1          1          RAM_rd_data[17]           
1          1          1          RAM_rd_data[16]           
1          1          1          RAM_rd_data[15]           
1          1          1          RAM_rd_data[14]           
1          1          1          RAM_rd_data[13]           
1          1          1          RAM_rd_data[12]           
1          1          1          RAM_rd_data[11]           
1          1          1          RAM_rd_data[10]           
1          1          1          RAM_rd_data[9]            
1          1          1          RAM_rd_data[8]            
1          1          1          RAM_rd_data[7]            
1          1          1          RAM_rd_data[6]            
1          1          1          RAM_rd_data[5]            
1          1          1          RAM_rd_data[4]            
1          1          1          RAM_rd_data[3]            
1          1          1          RAM_rd_data[2]            
1          1          1          RAM_rd_data[1]            
1          1          1          RAM_rd_data[0]            

Covered+Uncovered+Excluded+UNR Fsm Detail Report, Instance Based
================================================================

Instance name: zmc_axi4_top.axi4_slave_inst
Type name: axi4_slave
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/AXI4_slave.sv
State register: present_state_rd
Number of covered states: 4 of 4
Number of uncovered states: 0 of 4
Number of excluded states: 0
Number of covered transitions: 6 of 6
Number of uncovered transitions: 0 of 6
Number of excluded transitions: 0

State Coverage:
===============
State                Encoding             Visits 
-------------------------------------------------
RD_IDLE              00                   480    
RD_FIX_BURST         01                   445    
RD_INCR_BURST        10                   10     
RD_WRAP_BURST        11                   10     

Reset States:
=============
Reset State          Visits 
----------------------------
RD_IDLE              15     

Transition Coverage:
====================
P-State              N-State              Visits 
-------------------------------------------------
RD_IDLE              RD_FIX_BURST         445    
                     RD_INCR_BURST        10     
                     RD_WRAP_BURST        10     
RD_FIX_BURST         RD_IDLE              445    
RD_INCR_BURST        RD_IDLE              10     
RD_WRAP_BURST        RD_IDLE              10     

Arc Coverage:
=============
[ Arc coverage not enabled ]

Instance name: zmc_axi4_top.axi4_slave_inst
Type name: axi4_slave
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/AXI4_slave.sv
State register: rd_present_state
Number of covered states: 3 of 3
Number of uncovered states: 0 of 3
Number of excluded states: 0
Number of covered transitions: 3 of 3
Number of uncovered transitions: 0 of 3
Number of excluded transitions: 0

State Coverage:
===============
State                Encoding             Visits 
-------------------------------------------------
IDLE_R               00                   480    
RD_ADDR              01                   467    
RD_DATA              10                   467    

Reset States:
=============
Reset State          Visits 
----------------------------
IDLE_R               15     

Transition Coverage:
====================
P-State              N-State              Visits 
-------------------------------------------------
IDLE_R               RD_ADDR              467    
RD_ADDR              RD_DATA              467    
RD_DATA              IDLE_R               465    

Arc Coverage:
=============
[ Arc coverage not enabled ]

Instance name: zmc_axi4_top.axi4_slave_inst
Type name: axi4_slave
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/AXI4_slave.sv
State register: present_state_wr
Number of covered states: 4 of 4
Number of uncovered states: 0 of 4
Number of excluded states: 0
Number of covered transitions: 6 of 6
Number of uncovered transitions: 0 of 6
Number of excluded transitions: 0

State Coverage:
===============
State                Encoding             Visits 
-------------------------------------------------
WR_IDLE              00                   390    
WR_FIX_BURST         01                   345    
WR_INCR_BURST        10                   20     
WR_WRAP_BURST        11                   10     

Reset States:
=============
Reset State          Visits 
----------------------------
WR_IDLE              15     

Transition Coverage:
====================
P-State              N-State              Visits 
-------------------------------------------------
WR_IDLE              WR_FIX_BURST         345    
                     WR_INCR_BURST        20     
                     WR_WRAP_BURST        10     
WR_FIX_BURST         WR_IDLE              345    
WR_INCR_BURST        WR_IDLE              20     
WR_WRAP_BURST        WR_IDLE              10     

Arc Coverage:
=============
[ Arc coverage not enabled ]

Instance name: zmc_axi4_top.axi4_slave_inst
Type name: axi4_slave
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/MEM_ctrl_AXI/AXI4_slave.sv
State register: wr_present_state
Number of covered states: 4 of 4
Number of uncovered states: 0 of 4
Number of excluded states: 0
Number of covered transitions: 4 of 5
Number of uncovered transitions: 1 of 5
Number of excluded transitions: 0

State Coverage:
===============
State                Encoding             Visits 
-------------------------------------------------
IDLE_W               00                   390    
WR_ADDR              01                   375    
WR_DATA              10                   375    
WR_RESP              11                   375    

Reset States:
=============
Reset State          Visits 
----------------------------
IDLE_W               15     

Transition Coverage:
====================
P-State              N-State              Visits 
-------------------------------------------------
IDLE_W               WR_ADDR              375    
WR_ADDR              WR_DATA              375    
WR_DATA              WR_RESP              375    
WR_RESP              IDLE_W               375    
                     WR_DATA              0      

Arc Coverage:
=============
[ Arc coverage not enabled ]


Covered+Uncovered+Excluded+UNR Assertion Detail Report, Instance Based
======================================================================

Covered+Uncovered+Excluded+UNR CoverGroup Detail Report, Instance Based
=======================================================================

Instance name: uvm_pkg.uvm_test_top.env.cov1
Type name: mc_uvm_pkg
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/Verification/UVME/uvm_pkg/mc_uvm_pkg.sv
Include Files:
    /home/sgeuser33/Prajwal/memory_controller_with_ECC/Verification/UVME/env/mc_coverage_collector.sv
Number of covered cover bins: 35 of 41
Number of uncovered cover bins: 6 of 41
Number of excluded cover bins: 0

Name                           Average, Covered Grade         Line  Source Code                    
---------------------------------------------------------------------------------------------------
input_signals_cg               89.22%, 84.62% (22/26)         9 (mc_coverage_collector.sv) covergroup input_signals_cg(); 
|--cp_rst                      50.00% (1/2)                   13 (mc_coverage_collector.sv) cp_rst: coverpoint axi_seq_item.zmc_top_rstn 
| |--active                    100.00% (1170/1)               14 (mc_coverage_collector.sv) {bins active = {1};            
| |--low                       0.00% (0/1)                    15 (mc_coverage_collector.sv) bins low    = {0};             
|--cp_soft_reset               50.00% (1/2)                   19 (mc_coverage_collector.sv) cp_soft_reset: coverpoint axi_seq_item.zmc_top_sw_rst 
| |--active                    0.00% (0/1)                    20 (mc_coverage_collector.sv) {bins active = {1};            
| |--low                       100.00% (1170/1)               21 (mc_coverage_collector.sv) bins low    = {0};             
|--cp_mem_init                 50.00% (1/2)                   24 (mc_coverage_collector.sv) cp_mem_init: coverpoint axi_seq_item.zmc_top_mem_init 
| |--low                       100.00% (1170/1)               25 (mc_coverage_collector.sv) {bins low  = {0};              
| |--high                      0.00% (0/1)                    26 (mc_coverage_collector.sv) bins high = {1};               
|--cp_awaddr                   66.67% (2/3)                   30 (mc_coverage_collector.sv) cp_awaddr: coverpoint axi_seq_item.awaddr 
| |--low_range                 0.00% (0/1)                    31 (mc_coverage_collector.sv) {bins low_range   = {[32'h0000_0000 : 32'h0000_FFFF]}; 
| |--mid_range                 100.00% (23/1)                 32 (mc_coverage_collector.sv) bins mid_range   = {[32'h0001_0000 : 32'h0FFF_FFFF]}; 
| |--high_range                100.00% (1037/1)               33 (mc_coverage_collector.sv) bins high_range  = {[32'h1000_0000 : 32'hFFFF_FFFF]}; 
|--cp_awlen                    100.00% (1/1)                  36 (mc_coverage_collector.sv) cp_awlen: coverpoint axi_seq_item.awlen 
| |--all_values                100.00% (710/1)                37 (mc_coverage_collector.sv) {bins all_values = {0,3,7 };   
|--cp_awburst                  100.00% (2/2)                  41 (mc_coverage_collector.sv) cp_awburst: coverpoint axi_seq_item.awburst 
| |--burst[0]                  100.00% (710/1)                42 (mc_coverage_collector.sv) {bins burst[] = {[0:1]};}      
| |--burst[1]                  100.00% (180/1)                42 (mc_coverage_collector.sv) {bins burst[] = {[0:1]};}      
|--cp_awvalid                  100.00% (1/1)                  44 (mc_coverage_collector.sv) cp_awvalid: coverpoint axi_seq_item.awvalid 
| |--valid                     100.00% (1060/1)               45 (mc_coverage_collector.sv) {bins valid = {1};}            
|--cp_wdata                    100.00% (1/1)                  47 (mc_coverage_collector.sv) cp_wdata: coverpoint axi_seq_item.wdata[i] 
| |--auto_bin_max              100.00% (1060/1)               48 (mc_coverage_collector.sv) {bins auto_bin_max={[0:$]};    
|--cp_wlast                    100.00% (1/1)                  51 (mc_coverage_collector.sv) cp_wlast: coverpoint axi_seq_item.wlast 
| |--last                      100.00% (1060/1)               52 (mc_coverage_collector.sv) {bins last = {1};              
|--cp_wstrb                    100.00% (1/1)                  55 (mc_coverage_collector.sv) cp_wstrb: coverpoint axi_seq_item.wstrb 
| |--fullword                  100.00% (1060/1)               56 (mc_coverage_collector.sv) {bins fullword  = {4'b1111};   
|--cp_wvalid                   100.00% (1/1)                  59 (mc_coverage_collector.sv) cp_wvalid: coverpoint axi_seq_item.wvalid 
| |--valid                     100.00% (1060/1)               60 (mc_coverage_collector.sv) {bins valid = {1};             
|--cp_bready                   100.00% (1/1)                  63 (mc_coverage_collector.sv) cp_bready: coverpoint axi_seq_item.bready 
| |--ready                     100.00% (1060/1)               64 (mc_coverage_collector.sv) {bins ready = {1};             
|--cp_araddr                   100.00% (3/3)                  67 (mc_coverage_collector.sv) cp_araddr: coverpoint axi_seq_item.araddr 
| |--low_range                 100.00% (384/1)                68 (mc_coverage_collector.sv) {bins low_range   = {[32'h0000_0000 : 32'h0000_FFFF]}; 
| |--mid_range                 100.00% (32/1)                 69 (mc_coverage_collector.sv) bins mid_range   = {[32'h0001_0000 : 32'h0FFF_FFFF]}; 
| |--high_range                100.00% (653/1)                70 (mc_coverage_collector.sv) bins high_range  = {[32'h1000_0000 : 32'hFFFF_FFFF]}; 
|--cp_arlen                    100.00% (1/1)                  73 (mc_coverage_collector.sv) cp_arlen: coverpoint axi_seq_item.arlen 
| |--all_values                100.00% (749/1)                74 (mc_coverage_collector.sv) {bins all_values = {0,3,7 };   
|--cp_arburst                  100.00% (2/2)                  78 (mc_coverage_collector.sv) cp_arburst: coverpoint axi_seq_item.arburst 
| |--burst[0]                  100.00% (749/1)                79 (mc_coverage_collector.sv) {bins burst[]={[0:1]};         
| |--burst[1]                  100.00% (160/1)                79 (mc_coverage_collector.sv) {bins burst[]={[0:1]};         
|--cp_arvalid                  100.00% (1/1)                  81 (mc_coverage_collector.sv) cp_arvalid: coverpoint axi_seq_item.arvalid 
| |--valid                     100.00% (1069/1)               82 (mc_coverage_collector.sv) {bins valid = {1};             
|--cp_rready                   100.00% (1/1)                  85 (mc_coverage_collector.sv) cp_rready: coverpoint axi_seq_item.rready 
| |--ready                     100.00% (1069/1)               86 (mc_coverage_collector.sv) {bins ready = {1};             
output_signals_cg              93.06%, 86.67% (13/15)         91 (mc_coverage_collector.sv) covergroup output_signals_cg(); 
|--cp_awready                  100.00% (1/1)                  95 (mc_coverage_collector.sv) cp_awready: coverpoint axi_seq_item.awready 
| |--awready                   100.00% (1060/1)               96 (mc_coverage_collector.sv) {bins awready = {1};           
|--cp_wready                   100.00% (1/1)                  99 (mc_coverage_collector.sv) cp_wready: coverpoint axi_seq_item.wready 
| |--wready                    100.00% (1060/1)               100 (mc_coverage_collector.sv) {bins wready = {1};            
|--cp_bvalid                   100.00% (1/1)                  103 (mc_coverage_collector.sv) cp_bvalid: coverpoint axi_seq_item.bvalid 
| |--valid                     100.00% (1060/1)               104 (mc_coverage_collector.sv) {bins valid = {1};             
|--cp_bresp                    100.00% (1/1)                  107 (mc_coverage_collector.sv) cp_bresp: coverpoint axi_seq_item.bresp 
| |--okay                      100.00% (1060/1)               108 (mc_coverage_collector.sv) {bins okay = {2'b00};          
|--cp_arready                  100.00% (1/1)                  111 (mc_coverage_collector.sv) cp_arready: coverpoint axi_seq_item.arready 
| |--ready                     100.00% (1069/1)               112 (mc_coverage_collector.sv) {bins ready = {1};             
|--cp_rdata                    100.00% (1/1)                  115 (mc_coverage_collector.sv) cp_rdata: coverpoint axi_seq_item.rdata[i] 
| |--auto_bin_max              100.00% (1069/1)               116 (mc_coverage_collector.sv) {bins auto_bin_max={[0:$]};    
|--cp_rlast                    100.00% (1/1)                  118 (mc_coverage_collector.sv) cp_rlast: coverpoint axi_seq_item.rlast 
| |--last                      100.00% (739/1)                119 (mc_coverage_collector.sv) {bins last = {1};              
|--cp_rvalid                   100.00% (1/1)                  122 (mc_coverage_collector.sv) cp_rvalid: coverpoint axi_seq_item.rvalid 
| |--valid                     100.00% (1069/1)               123 (mc_coverage_collector.sv) {bins valid = {1};             
|--cp_rresp                    100.00% (1/1)                  126 (mc_coverage_collector.sv) cp_rresp: coverpoint axi_seq_item.rresp 
| |--okay                      100.00% (1069/1)               127 (mc_coverage_collector.sv) {bins okay = {2'b00};          
|--cp_ecc_interrupt            100.00% (1/1)                  131 (mc_coverage_collector.sv) cp_ecc_interrupt: coverpoint axi_seq_item.ECC_interrupt 
| |--active                    100.00% (110/1)                132 (mc_coverage_collector.sv) {bins active = {1};            
|--cp_mem_init_ack             50.00% (1/2)                   135 (mc_coverage_collector.sv) cp_mem_init_ack: coverpoint axi_seq_item.MEM_init_ACK 
| |--ack_received              0.00% (0/1)                    136 (mc_coverage_collector.sv) {bins  ack_received = {1};     
| |--not_ack_received          100.00% (1170/1)               137 (mc_coverage_collector.sv) bins not_ack_received ={0};    
|--cp_ecc_status               66.67% (2/3)                   141 (mc_coverage_collector.sv) cp_ecc_status: coverpoint  axi_seq_item.o_ECC_STAUS_REG 
| |--no_error                  100.00% (1053/1)               142 (mc_coverage_collector.sv) {bins no_error = {32'h00000000}; 
| |--single_bit_error          0.00% (0/1)                    143 (mc_coverage_collector.sv) bins single_bit_error = {32'h00000001}; 
| |--double_bit_error          100.00% (117/1)                144 (mc_coverage_collector.sv) bins double_bit_error = {32'h00000002}; 

Instance name: uvm_pkg.uvm_test_top.env.cov2
Type name: mc_uvm_pkg
File name: /home/sgeuser33/Prajwal/memory_controller_with_ECC/Verification/UVME/uvm_pkg/mc_uvm_pkg.sv
Include Files:
    /home/sgeuser33/Prajwal/memory_controller_with_ECC/Verification/UVME/env/mc_coverage_collector.sv
Number of covered cover bins: 0 of 10
Number of uncovered cover bins: 10 of 10
Number of excluded cover bins: 0

Name                           Average, Covered Grade         Line  Source Code                    
---------------------------------------------------------------------------------------------------
apb_config_regs_cg             0.00%, 0.00% (0/10)            174 (mc_coverage_collector.sv) covergroup apb_config_regs_cg(); 
|--cp_apb_sel                  0.00% (0/1)                    177 (mc_coverage_collector.sv) cp_apb_sel: coverpoint apb_seq_item.i_psel 
| |--select                    0.00% (0/1)                    178 (mc_coverage_collector.sv) {bins select = {1'b1};         
|--cp_apb_enable               0.00% (0/2)                    181 (mc_coverage_collector.sv) cp_apb_enable: coverpoint apb_seq_item.i_penable 
| |--enable                    0.00% (0/1)                    182 (mc_coverage_collector.sv) {bins enable = {1'b1};         
| |--disabled                  0.00% (0/1)                    183 (mc_coverage_collector.sv) bins disabled ={1'b0};         
|--cp_apb_write                0.00% (0/1)                    186 (mc_coverage_collector.sv) cp_apb_write: coverpoint apb_seq_item.i_pwrite 
| |--write                     0.00% (0/1)                    187 (mc_coverage_collector.sv) {bins write = {1};             
|--cp_apb_wdata                0.00% (0/2)                    190 (mc_coverage_collector.sv) cp_apb_wdata: coverpoint apb_seq_item.i_pwdata 
| |--enable                    0.00% (0/1)                    191 (mc_coverage_collector.sv) {bins enable = {32'b00000001}; 
| |--disabled                  0.00% (0/1)                    192 (mc_coverage_collector.sv) bins disabled = {32'b00000000}; 
|--cp_apb_addr                 0.00% (0/2)                    195 (mc_coverage_collector.sv) cp_apb_addr: coverpoint apb_seq_item.i_paddr 
| |--addr_0x04                 0.00% (0/1)                    197 (mc_coverage_collector.sv) bins addr_0x04 = {32'h00000004}; 
| |--addr_0x08                 0.00% (0/1)                    198 (mc_coverage_collector.sv) bins addr_0x08 = {32'h00000008}; 
|--cp_apb_strobe               0.00% (0/1)                    201 (mc_coverage_collector.sv) cp_apb_strobe: coverpoint apb_seq_item.i_pstrb 
| |--fullword                  0.00% (0/1)                    202 (mc_coverage_collector.sv) {bins fullword  = {4'b1111};   
|--cp_ecc_clear                0.00% (0/1)                    205 (mc_coverage_collector.sv) cp_ecc_clear:coverpoint apb_seq_item.i_ECC_STAUS_REG_clear 
| |--disabled                  0.00% (0/1)                    206 (mc_coverage_collector.sv) {bins disabled ={1'b0};        

